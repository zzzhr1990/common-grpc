syntax = "proto3";

package services;

// import "service_one/messages.proto";
option go_package = "github.com/zzzhr1990/common-grpc/go/v3/file/filesystem";
import "common/common_entity.proto";

service FileService {
    rpc Create (FileInfo) returns (FileInfo) {}
    rpc Get (FileInfo) returns (FileInfo) {}
    // rpc CreateInternal (FileInfo) returns (FileInfo) {}
    rpc List (FileInfoListRequest) returns (FileInfoListResponse) {}
    rpc ListInternal (FileInfoListRequest) returns (FileInfoListResponse) {}
    rpc Trash (BatchFileTaskRequest) returns (BatchFileTaskResult) {}
    rpc Delete (BatchFileTaskRequest) returns (BatchFileTaskResult) {}
    rpc Copy (BatchFileTaskRequest) returns (BatchFileTaskResult) {}
    rpc Rename (FileInfo) returns (BatchFileTaskResult) {}
    // rpc FlushStore (UserFile) returns (UserFile) {}
    // 
    rpc Recover (BatchFileTaskRequest) returns (BatchFileTaskResult) {}
    rpc DeleteTrash (BatchFileTaskRequest) returns (BatchFileTaskResult) {}
    rpc ListTrash (FileInfoListRequest) returns (TrashInfoListResponse) {}
    rpc GetTrash (TrashInfo) returns (TrashInfo) {}
    rpc ClearTrash (TrashInfo) returns (BatchFileTaskResult) {}

    // Label
    rpc CreateLabel (Label) returns (Label) {}
    rpc DeleteLabel (BatchLabelRequest) returns (BatchFileTaskResult) {}
}

service FileNoticeService {
    rpc OnProgress (TaskProgress) returns (TaskProgress) {}
    rpc OnComplete (TaskCompleteEvent) returns (TaskCompleteEvent) {}
    rpc OnError (TaskStatusUpdateEvent) returns (TaskStatusUpdateEvent) {}
    rpc OnCancel (TaskStatusUpdateEvent) returns (TaskStatusUpdateEvent) {}
    // rpc FlushStore (UserFile) returns (UserFile) {}
}

message TaskProgress {
    // UserFile source = 1;
    // UserFile dest = 2;
    string identity = 1;
    int64 user_identity = 2;
    int32 type = 3;
    string name = 4;
    int64 progress = 5;
    int64 size = 6;
    int64 count = 7;
    FileInfo source = 8;
    FileInfo destination = 9;
    int32 status = 10;
    // int32 error_code = 11;
    // string error_message = 12;
    string action = 13;
}

message TaskCompleteEvent {
    // UserFile source = 1;
    // UserFile dest = 2;
    string identity = 1;
    int64 user_identity = 2;
    int32 type = 3;
    string name = 4;
    FileInfo source = 5;
    FileInfo destination = 6;
    int64 count = 7;
    int32 status = 10;
    int32 error_code = 11;
    string error_message = 12;
    string action = 13;
}

message TaskStatusUpdateEvent {
    // UserFile source = 1;
    // UserFile dest = 2;
    string identity = 1;
    int64 user_identity = 2;
    int32 type = 3;
    string name = 4;
    FileInfo source = 5;
    FileInfo destination = 6;
    int64 count = 7;
    int32 status = 10;
    int32 error_code = 11;
    string error_message = 12;
    string action = 13;
}




message FileInfo {
    string identity = 1;
    string hash = 2;
    int64 user_identity = 3;
    string path = 4;
    string name = 5;
    string ext = 6;
    int64 size = 7;
    string mime = 8;
    bool  deleted = 9;
    bool  hidden = 10;
    int32 label = 11;
    string parent = 12;
    int32 type = 13;
    bool directory = 14;
    int64 atime = 15;
    int64 ctime = 16;
    int64 mtime = 17;
    int32  version = 18;
    bool locking = 19;
    int32 op = 20;
    bool preview = 21;
    int32 preview_type = 22;
    int32  flag = 23;
    string unique_identity = 24;
    bool share = 25;
    string download_address = 26;
    int64 lock_time = 27;
    int64 children = 28;
    int64 children_total = 29;
    int32 sticky = 30;
    
    // string name_lower = 26;
}

message FileInfoListResponse {
    FileInfo parent = 1;
    repeated FileInfo data = 2;
}

message FileInfoListFilter {
    repeated string identity = 1;
    repeated int32 type = 2;
    int32 directory = 3;
    string name = 4;
}

message FileInfoListRequest {
    string identity = 1;
    int64 user_identity = 2;
    string path = 3;
    ListInfo list_info = 4;
    repeated OrderByRequest order_by = 5;
    FileInfoListFilter filter = 6;
    int32 op = 7;
}

message Label {
    int32 identity = 1;
    int64 user_identity = 2;
    string name = 3;
    int32 type = 4;
    int64 create_time = 5;
}

message BatchFileTaskRequest {
    repeated string identity = 1;
    repeated string path = 2;
    int64 user_identity = 3;
    FileInfo dest = 4;
    int32 op = 5;
}

message BatchLabelRequest {
    repeated int32 identity = 1;
    // repeated string path = 2;
    int64 user_identity = 3;
    int32 op = 2;
}

message BatchFileTaskResult {
    string identity = 1;
    int64 data = 2;
    bool async = 3;
}

message TrashInfo {
    string identity = 1;
    int64 user_identity = 2;
    string path = 3;
    string path_identity = 4;
    int64 create_time = 5;
    string name = 6;
    int32 type = 7;
    string mime = 8;
    string addon = 9;
    // bool locking = 10;
    int32 op = 11;
    int64 size = 12;
    bool directory = 13;
}

message TrashInfoListResponse {
    repeated TrashInfo data = 2;
}

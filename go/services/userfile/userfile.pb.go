// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user/userfile.proto

package userfile

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GrpcUserFile struct {
	Uuid    string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	StoreId string `protobuf:"bytes,2,opt,name=storeId,proto3" json:"storeId,omitempty"`
	UserId  uint64 `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
	Path    string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Name    string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Ext     string `protobuf:"bytes,6,opt,name=ext,proto3" json:"ext,omitempty"`
	Size    uint64 `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	Parent  string `protobuf:"bytes,8,opt,name=parent,proto3" json:"parent,omitempty"`
	//string createTime = 7;
	Type int32 `protobuf:"varint,9,opt,name=type,proto3" json:"type,omitempty"`
	//string ssid = 10;
	IsDirectory          bool     `protobuf:"varint,10,opt,name=isDirectory,proto3" json:"isDirectory,omitempty"`
	Atime                uint64   `protobuf:"varint,11,opt,name=atime,proto3" json:"atime,omitempty"`
	Ctime                uint64   `protobuf:"varint,12,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Mtime                uint64   `protobuf:"varint,13,opt,name=mtime,proto3" json:"mtime,omitempty"`
	Version              uint32   `protobuf:"varint,14,opt,name=version,proto3" json:"version,omitempty"`
	Locking              bool     `protobuf:"varint,15,opt,name=locking,proto3" json:"locking,omitempty"`
	Op                   uint32   `protobuf:"varint,16,opt,name=op,proto3" json:"op,omitempty"`
	IgnoreCase           bool     `protobuf:"varint,17,opt,name=ignoreCase,proto3" json:"ignoreCase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpcUserFile) Reset()         { *m = GrpcUserFile{} }
func (m *GrpcUserFile) String() string { return proto.CompactTextString(m) }
func (*GrpcUserFile) ProtoMessage()    {}
func (*GrpcUserFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_d6806edd9a7324ee, []int{0}
}

func (m *GrpcUserFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpcUserFile.Unmarshal(m, b)
}
func (m *GrpcUserFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpcUserFile.Marshal(b, m, deterministic)
}
func (m *GrpcUserFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpcUserFile.Merge(m, src)
}
func (m *GrpcUserFile) XXX_Size() int {
	return xxx_messageInfo_GrpcUserFile.Size(m)
}
func (m *GrpcUserFile) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpcUserFile.DiscardUnknown(m)
}

var xxx_messageInfo_GrpcUserFile proto.InternalMessageInfo

func (m *GrpcUserFile) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *GrpcUserFile) GetStoreId() string {
	if m != nil {
		return m.StoreId
	}
	return ""
}

func (m *GrpcUserFile) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *GrpcUserFile) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *GrpcUserFile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GrpcUserFile) GetExt() string {
	if m != nil {
		return m.Ext
	}
	return ""
}

func (m *GrpcUserFile) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *GrpcUserFile) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *GrpcUserFile) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *GrpcUserFile) GetIsDirectory() bool {
	if m != nil {
		return m.IsDirectory
	}
	return false
}

func (m *GrpcUserFile) GetAtime() uint64 {
	if m != nil {
		return m.Atime
	}
	return 0
}

func (m *GrpcUserFile) GetCtime() uint64 {
	if m != nil {
		return m.Ctime
	}
	return 0
}

func (m *GrpcUserFile) GetMtime() uint64 {
	if m != nil {
		return m.Mtime
	}
	return 0
}

func (m *GrpcUserFile) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *GrpcUserFile) GetLocking() bool {
	if m != nil {
		return m.Locking
	}
	return false
}

func (m *GrpcUserFile) GetOp() uint32 {
	if m != nil {
		return m.Op
	}
	return 0
}

func (m *GrpcUserFile) GetIgnoreCase() bool {
	if m != nil {
		return m.IgnoreCase
	}
	return false
}

func init() {
	proto.RegisterType((*GrpcUserFile)(nil), "services.GrpcUserFile")
}

func init() { proto.RegisterFile("user/userfile.proto", fileDescriptor_d6806edd9a7324ee) }

var fileDescriptor_d6806edd9a7324ee = []byte{
	// 395 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0xcf, 0xaa, 0xd3, 0x40,
	0x18, 0xc5, 0x4d, 0xff, 0xdd, 0xde, 0xaf, 0xf7, 0xb6, 0x75, 0x94, 0xf2, 0xe1, 0x42, 0x42, 0x57,
	0xd9, 0x98, 0xf8, 0x07, 0x91, 0xae, 0x84, 0xaa, 0x95, 0xae, 0x84, 0x88, 0x1b, 0x77, 0xe9, 0xf4,
	0x33, 0x1d, 0x6c, 0x32, 0xc3, 0xcc, 0xa4, 0xd8, 0x3c, 0x88, 0x8f, 0xe7, 0xb3, 0xc8, 0x4c, 0x9a,
	0x92, 0x8d, 0x0b, 0xb9, 0x9b, 0x70, 0xce, 0x2f, 0x27, 0x67, 0x20, 0x67, 0xe0, 0x49, 0x65, 0x48,
	0x27, 0xee, 0xf1, 0x43, 0x1c, 0x29, 0x56, 0x5a, 0x5a, 0xc9, 0xc6, 0x86, 0xf4, 0x49, 0x70, 0x32,
	0xcb, 0xdf, 0x7d, 0xb8, 0xfb, 0xac, 0x15, 0xff, 0x66, 0x48, 0x6f, 0xc4, 0x91, 0x18, 0x83, 0x41,
	0x55, 0x89, 0x3d, 0x06, 0x61, 0x10, 0xdd, 0xa6, 0x5e, 0x33, 0x84, 0x1b, 0x63, 0xa5, 0xa6, 0xed,
	0x1e, 0x7b, 0x1e, 0xb7, 0x96, 0x2d, 0x60, 0xe4, 0xaa, 0xb7, 0x7b, 0xec, 0x87, 0x41, 0x34, 0x48,
	0x2f, 0xce, 0xb5, 0xa8, 0xcc, 0x1e, 0x70, 0xd0, 0xb4, 0x38, 0xed, 0x58, 0x99, 0x15, 0x84, 0xc3,
	0x86, 0x39, 0xcd, 0xe6, 0xd0, 0xa7, 0x5f, 0x16, 0x47, 0x1e, 0x39, 0xe9, 0x52, 0x46, 0xd4, 0x84,
	0x37, 0xbe, 0xcf, 0x6b, 0x77, 0x8a, 0xca, 0x34, 0x95, 0x16, 0xc7, 0x3e, 0x78, 0x71, 0x2e, 0x6b,
	0xcf, 0x8a, 0xf0, 0x36, 0x0c, 0xa2, 0x61, 0xea, 0x35, 0x0b, 0x61, 0x22, 0xcc, 0x47, 0xa1, 0x89,
	0x5b, 0xa9, 0xcf, 0x08, 0x61, 0x10, 0x8d, 0xd3, 0x2e, 0x62, 0x4f, 0x61, 0x98, 0x59, 0x51, 0x10,
	0x4e, 0xfc, 0x11, 0x8d, 0x71, 0x94, 0x7b, 0x7a, 0xd7, 0x50, 0xde, 0xd2, 0xc2, 0xd3, 0xfb, 0x86,
	0x7a, 0xe3, 0xfe, 0xc7, 0x89, 0xb4, 0x11, 0xb2, 0xc4, 0x69, 0x18, 0x44, 0xf7, 0x69, 0x6b, 0xdd,
	0x9b, 0xa3, 0xe4, 0x3f, 0x45, 0x99, 0xe3, 0xcc, 0x9f, 0xdc, 0x5a, 0x36, 0x85, 0x9e, 0x54, 0x38,
	0xf7, 0xf1, 0x9e, 0x54, 0xec, 0x39, 0x80, 0xc8, 0x4b, 0xa9, 0xe9, 0x43, 0x66, 0x08, 0x1f, 0xfb,
	0x70, 0x87, 0xbc, 0xfe, 0x13, 0xc0, 0xac, 0x1d, 0xe6, 0x6b, 0xb3, 0x16, 0x5b, 0xc3, 0x94, 0x6b,
	0xca, 0x2c, 0x5d, 0xd7, 0x5a, 0xc4, 0xed, 0x92, 0x71, 0x77, 0xc5, 0x67, 0xff, 0xe0, 0xcb, 0x47,
	0xec, 0x3d, 0x4c, 0x72, 0xb2, 0x0f, 0x28, 0xd8, 0x00, 0xeb, 0x14, 0x7c, 0xd1, 0x9f, 0x0a, 0x65,
	0xcf, 0xff, 0xdf, 0xb3, 0x7e, 0xf7, 0xfd, 0x6d, 0x2e, 0xec, 0xa1, 0xda, 0xc5, 0x5c, 0x16, 0x49,
	0x5d, 0xd7, 0x07, 0xfd, 0x6a, 0xb5, 0x7a, 0x99, 0x70, 0x59, 0x14, 0xb2, 0x7c, 0x91, 0x6b, 0xc5,
	0x93, 0x5c, 0x26, 0xed, 0xe7, 0xd7, 0x2b, 0xbc, 0x1b, 0xf9, 0x3b, 0xfc, 0xe6, 0x6f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x5b, 0x6d, 0x80, 0x03, 0xda, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GrpcUserServiceClient is the client API for GrpcUserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GrpcUserServiceClient interface {
	// rpc createUser (GrpcUser) returns (BoolEntity) {}
	// rpc getUser (Uint64Entity) returns (GrpcUser) {}
	CreateUserFile(ctx context.Context, in *GrpcUserFile, opts ...grpc.CallOption) (*GrpcUserFile, error)
	GetUserFile(ctx context.Context, in *GrpcUserFile, opts ...grpc.CallOption) (*GrpcUserFile, error)
	GetUserFileOrEmpty(ctx context.Context, in *GrpcUserFile, opts ...grpc.CallOption) (*GrpcUserFile, error)
}

type grpcUserServiceClient struct {
	cc *grpc.ClientConn
}

func NewGrpcUserServiceClient(cc *grpc.ClientConn) GrpcUserServiceClient {
	return &grpcUserServiceClient{cc}
}

func (c *grpcUserServiceClient) CreateUserFile(ctx context.Context, in *GrpcUserFile, opts ...grpc.CallOption) (*GrpcUserFile, error) {
	out := new(GrpcUserFile)
	err := c.cc.Invoke(ctx, "/services.GrpcUserService/createUserFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcUserServiceClient) GetUserFile(ctx context.Context, in *GrpcUserFile, opts ...grpc.CallOption) (*GrpcUserFile, error) {
	out := new(GrpcUserFile)
	err := c.cc.Invoke(ctx, "/services.GrpcUserService/getUserFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcUserServiceClient) GetUserFileOrEmpty(ctx context.Context, in *GrpcUserFile, opts ...grpc.CallOption) (*GrpcUserFile, error) {
	out := new(GrpcUserFile)
	err := c.cc.Invoke(ctx, "/services.GrpcUserService/getUserFileOrEmpty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GrpcUserServiceServer is the server API for GrpcUserService service.
type GrpcUserServiceServer interface {
	// rpc createUser (GrpcUser) returns (BoolEntity) {}
	// rpc getUser (Uint64Entity) returns (GrpcUser) {}
	CreateUserFile(context.Context, *GrpcUserFile) (*GrpcUserFile, error)
	GetUserFile(context.Context, *GrpcUserFile) (*GrpcUserFile, error)
	GetUserFileOrEmpty(context.Context, *GrpcUserFile) (*GrpcUserFile, error)
}

func RegisterGrpcUserServiceServer(s *grpc.Server, srv GrpcUserServiceServer) {
	s.RegisterService(&_GrpcUserService_serviceDesc, srv)
}

func _GrpcUserService_CreateUserFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrpcUserFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcUserServiceServer).CreateUserFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.GrpcUserService/CreateUserFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcUserServiceServer).CreateUserFile(ctx, req.(*GrpcUserFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcUserService_GetUserFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrpcUserFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcUserServiceServer).GetUserFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.GrpcUserService/GetUserFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcUserServiceServer).GetUserFile(ctx, req.(*GrpcUserFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcUserService_GetUserFileOrEmpty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrpcUserFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcUserServiceServer).GetUserFileOrEmpty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.GrpcUserService/GetUserFileOrEmpty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcUserServiceServer).GetUserFileOrEmpty(ctx, req.(*GrpcUserFile))
	}
	return interceptor(ctx, in, info, handler)
}

var _GrpcUserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.GrpcUserService",
	HandlerType: (*GrpcUserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "createUserFile",
			Handler:    _GrpcUserService_CreateUserFile_Handler,
		},
		{
			MethodName: "getUserFile",
			Handler:    _GrpcUserService_GetUserFile_Handler,
		},
		{
			MethodName: "getUserFileOrEmpty",
			Handler:    _GrpcUserService_GetUserFileOrEmpty_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user/userfile.proto",
}

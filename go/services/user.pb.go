// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user/user.proto

package services

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	common "github.com/zzzhr1990/common-grpc/go/common"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GrpcUser struct {
	Uuid                 int64    `protobuf:"varint,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CountryCode          string   `protobuf:"bytes,3,opt,name=countryCode,proto3" json:"countryCode,omitempty"`
	Phone                string   `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	CreateTime           string   `protobuf:"bytes,5,opt,name=createTime,proto3" json:"createTime,omitempty"`
	CreateIp             string   `protobuf:"bytes,6,opt,name=createIp,proto3" json:"createIp,omitempty"`
	Ssid                 string   `protobuf:"bytes,7,opt,name=ssid,proto3" json:"ssid,omitempty"`
	Icon                 string   `protobuf:"bytes,8,opt,name=icon,proto3" json:"icon,omitempty"`
	SpaceUsed            uint64   `protobuf:"varint,9,opt,name=spaceUsed,proto3" json:"spaceUsed,omitempty"`
	SpaceCapacity        uint64   `protobuf:"varint,10,opt,name=spaceCapacity,proto3" json:"spaceCapacity,omitempty"`
	Type                 int32    `protobuf:"varint,11,opt,name=type,proto3" json:"type,omitempty"`
	Status               int32    `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`
	Version              int32    `protobuf:"varint,13,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpcUser) Reset()         { *m = GrpcUser{} }
func (m *GrpcUser) String() string { return proto.CompactTextString(m) }
func (*GrpcUser) ProtoMessage()    {}
func (*GrpcUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{0}
}

func (m *GrpcUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpcUser.Unmarshal(m, b)
}
func (m *GrpcUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpcUser.Marshal(b, m, deterministic)
}
func (m *GrpcUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpcUser.Merge(m, src)
}
func (m *GrpcUser) XXX_Size() int {
	return xxx_messageInfo_GrpcUser.Size(m)
}
func (m *GrpcUser) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpcUser.DiscardUnknown(m)
}

var xxx_messageInfo_GrpcUser proto.InternalMessageInfo

func (m *GrpcUser) GetUuid() int64 {
	if m != nil {
		return m.Uuid
	}
	return 0
}

func (m *GrpcUser) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GrpcUser) GetCountryCode() string {
	if m != nil {
		return m.CountryCode
	}
	return ""
}

func (m *GrpcUser) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *GrpcUser) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *GrpcUser) GetCreateIp() string {
	if m != nil {
		return m.CreateIp
	}
	return ""
}

func (m *GrpcUser) GetSsid() string {
	if m != nil {
		return m.Ssid
	}
	return ""
}

func (m *GrpcUser) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *GrpcUser) GetSpaceUsed() uint64 {
	if m != nil {
		return m.SpaceUsed
	}
	return 0
}

func (m *GrpcUser) GetSpaceCapacity() uint64 {
	if m != nil {
		return m.SpaceCapacity
	}
	return 0
}

func (m *GrpcUser) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *GrpcUser) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GrpcUser) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func init() {
	proto.RegisterType((*GrpcUser)(nil), "services.GrpcUser")
}

func init() { proto.RegisterFile("user/user.proto", fileDescriptor_ed89022014131a74) }

var fileDescriptor_ed89022014131a74 = []byte{
	// 346 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0x4f, 0x6b, 0xea, 0x40,
	0x14, 0xc5, 0x5f, 0xfc, 0x1b, 0xc7, 0x27, 0xc2, 0xf0, 0x90, 0x41, 0xe4, 0x11, 0xa4, 0x8b, 0x2c,
	0xda, 0xa4, 0x7f, 0x56, 0x76, 0xa9, 0x8b, 0xd2, 0x45, 0x37, 0x69, 0xdd, 0x74, 0x53, 0xe2, 0xe4,
	0xa2, 0x03, 0x4d, 0xee, 0x30, 0x33, 0x11, 0xf4, 0x93, 0xf6, 0xe3, 0x94, 0x99, 0x31, 0xd5, 0x6e,
	0x92, 0x73, 0x7e, 0xe7, 0x26, 0x5c, 0xee, 0x21, 0xe3, 0x5a, 0x83, 0x4a, 0xed, 0x23, 0x91, 0x0a,
	0x0d, 0xd2, 0x50, 0x83, 0xda, 0x0b, 0x0e, 0x7a, 0x3a, 0xe3, 0x58, 0x96, 0x58, 0xa5, 0xfe, 0xf5,
	0xa1, 0x40, 0x4b, 0xac, 0x34, 0xf8, 0xb9, 0xf9, 0x57, 0x8b, 0x84, 0x4f, 0x4a, 0xf2, 0xb5, 0x06,
	0x45, 0x29, 0xe9, 0xd4, 0xb5, 0x28, 0x58, 0x10, 0x05, 0x71, 0x3b, 0x73, 0xda, 0xb2, 0x2a, 0x2f,
	0x81, 0xb5, 0xa2, 0x20, 0x1e, 0x64, 0x4e, 0xd3, 0x88, 0x0c, 0x39, 0xd6, 0x95, 0x51, 0x87, 0x15,
	0x16, 0xc0, 0xda, 0x2e, 0xba, 0x44, 0xf4, 0x1f, 0xe9, 0xca, 0x1d, 0x56, 0xc0, 0x3a, 0x2e, 0xf3,
	0x86, 0xfe, 0x27, 0x84, 0x2b, 0xc8, 0x0d, 0xbc, 0x89, 0x12, 0x58, 0xd7, 0x45, 0x17, 0x84, 0x4e,
	0x49, 0xe8, 0xdd, 0xb3, 0x64, 0x3d, 0x97, 0xfe, 0x78, 0xbb, 0x87, 0xd6, 0xa2, 0x60, 0x7d, 0xbf,
	0x87, 0xd5, 0x96, 0x09, 0x8e, 0x15, 0x0b, 0x3d, 0xb3, 0x9a, 0xce, 0xc8, 0x40, 0xcb, 0x9c, 0xc3,
	0x5a, 0x43, 0xc1, 0x06, 0x51, 0x10, 0x77, 0xb2, 0x33, 0xa0, 0x57, 0x64, 0xe4, 0xcc, 0x2a, 0x97,
	0x39, 0x17, 0xe6, 0xc0, 0x88, 0x9b, 0xf8, 0x0d, 0xed, 0x7f, 0xcd, 0x41, 0x02, 0x1b, 0x46, 0x41,
	0xdc, 0xcd, 0x9c, 0xa6, 0x13, 0xd2, 0xd3, 0x26, 0x37, 0xb5, 0x66, 0x7f, 0x1d, 0x3d, 0x39, 0xca,
	0x48, 0x7f, 0x0f, 0x4a, 0x0b, 0xac, 0xd8, 0xc8, 0x05, 0x8d, 0xbd, 0x7f, 0x21, 0xe3, 0xe6, 0xb2,
	0xaf, 0xbe, 0x0c, 0xfa, 0xd8, 0x1c, 0xc0, 0x9f, 0x3b, 0x69, 0x4a, 0x4a, 0x9a, 0xc1, 0xe9, 0xe4,
	0xcc, 0x96, 0x88, 0x9f, 0xd9, 0xa9, 0xad, 0xf9, 0x9f, 0x65, 0xf2, 0x7e, 0xbd, 0x15, 0x66, 0x57,
	0x6f, 0x12, 0x8e, 0x65, 0x7a, 0x3c, 0x1e, 0x77, 0xea, 0x6e, 0xb1, 0xb8, 0x3d, 0xf5, 0x7a, 0xb3,
	0x55, 0x92, 0xa7, 0x5b, 0x4c, 0x9b, 0xcf, 0x37, 0x3d, 0x57, 0xf0, 0xc3, 0x77, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x43, 0x86, 0x5b, 0x9f, 0x1b, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GrpcUserServiceClient is the client API for GrpcUserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GrpcUserServiceClient interface {
	CreateUser(ctx context.Context, in *GrpcUser, opts ...grpc.CallOption) (*common.BoolResponse, error)
}

type grpcUserServiceClient struct {
	cc *grpc.ClientConn
}

func NewGrpcUserServiceClient(cc *grpc.ClientConn) GrpcUserServiceClient {
	return &grpcUserServiceClient{cc}
}

func (c *grpcUserServiceClient) CreateUser(ctx context.Context, in *GrpcUser, opts ...grpc.CallOption) (*common.BoolResponse, error) {
	out := new(common.BoolResponse)
	err := c.cc.Invoke(ctx, "/services.GrpcUserService/createUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GrpcUserServiceServer is the server API for GrpcUserService service.
type GrpcUserServiceServer interface {
	CreateUser(context.Context, *GrpcUser) (*common.BoolResponse, error)
}

func RegisterGrpcUserServiceServer(s *grpc.Server, srv GrpcUserServiceServer) {
	s.RegisterService(&_GrpcUserService_serviceDesc, srv)
}

func _GrpcUserService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrpcUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcUserServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.GrpcUserService/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcUserServiceServer).CreateUser(ctx, req.(*GrpcUser))
	}
	return interceptor(ctx, in, info, handler)
}

var _GrpcUserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.GrpcUserService",
	HandlerType: (*GrpcUserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "createUser",
			Handler:    _GrpcUserService_CreateUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user/user.proto",
}

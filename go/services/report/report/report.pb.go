// Code generated by protoc-gen-go. DO NOT EDIT.
// source: report/report.proto

package report

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Report struct {
	Identity              int64    `protobuf:"varint,1,opt,name=identity,proto3" json:"identity,omitempty"`
	UserIdentity          int64    `protobuf:"varint,2,opt,name=userIdentity,proto3" json:"userIdentity,omitempty"`
	Ctime                 int64    `protobuf:"varint,3,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Type                  int32    `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	ContentType           int32    `protobuf:"varint,5,opt,name=contentType,proto3" json:"contentType,omitempty"`
	Content               string   `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	Comment               string   `protobuf:"bytes,7,opt,name=comment,proto3" json:"comment,omitempty"`
	Feedback              string   `protobuf:"bytes,8,opt,name=feedback,proto3" json:"feedback,omitempty"`
	FeedbackAdminIdentity int64    `protobuf:"varint,9,opt,name=feedbackAdminIdentity,proto3" json:"feedbackAdminIdentity,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *Report) Reset()         { *m = Report{} }
func (m *Report) String() string { return proto.CompactTextString(m) }
func (*Report) ProtoMessage()    {}
func (*Report) Descriptor() ([]byte, []int) {
	return fileDescriptor_653c1f6daa56f8fb, []int{0}
}

func (m *Report) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Report.Unmarshal(m, b)
}
func (m *Report) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Report.Marshal(b, m, deterministic)
}
func (m *Report) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Report.Merge(m, src)
}
func (m *Report) XXX_Size() int {
	return xxx_messageInfo_Report.Size(m)
}
func (m *Report) XXX_DiscardUnknown() {
	xxx_messageInfo_Report.DiscardUnknown(m)
}

var xxx_messageInfo_Report proto.InternalMessageInfo

func (m *Report) GetIdentity() int64 {
	if m != nil {
		return m.Identity
	}
	return 0
}

func (m *Report) GetUserIdentity() int64 {
	if m != nil {
		return m.UserIdentity
	}
	return 0
}

func (m *Report) GetCtime() int64 {
	if m != nil {
		return m.Ctime
	}
	return 0
}

func (m *Report) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Report) GetContentType() int32 {
	if m != nil {
		return m.ContentType
	}
	return 0
}

func (m *Report) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Report) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *Report) GetFeedback() string {
	if m != nil {
		return m.Feedback
	}
	return ""
}

func (m *Report) GetFeedbackAdminIdentity() int64 {
	if m != nil {
		return m.FeedbackAdminIdentity
	}
	return 0
}

func init() {
	proto.RegisterType((*Report)(nil), "services.Report")
}

func init() { proto.RegisterFile("report/report.proto", fileDescriptor_653c1f6daa56f8fb) }

var fileDescriptor_653c1f6daa56f8fb = []byte{
	// 283 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0x3b, 0x4f, 0xc3, 0x30,
	0x10, 0x80, 0x49, 0x1f, 0x69, 0x7b, 0x80, 0x84, 0x0e, 0x90, 0xac, 0x4e, 0x51, 0xa7, 0x48, 0x88,
	0x98, 0xd7, 0x52, 0xc4, 0x02, 0x1b, 0x6b, 0x60, 0x62, 0x6b, 0x9c, 0x23, 0xb5, 0x20, 0x71, 0xe4,
	0xb8, 0x48, 0xcd, 0x4f, 0xe1, 0xd7, 0xa2, 0xd8, 0x38, 0xa2, 0x82, 0x81, 0xc9, 0xf7, 0xdd, 0x77,
	0x96, 0xee, 0x01, 0xc7, 0x9a, 0x6a, 0xa5, 0x0d, 0x77, 0x4f, 0x52, 0x6b, 0x65, 0x14, 0x4e, 0x1b,
	0xd2, 0x1f, 0x52, 0x50, 0xb3, 0xf8, 0x1c, 0x40, 0x98, 0x5a, 0x85, 0x73, 0x98, 0xca, 0x9c, 0x2a,
	0x23, 0xcd, 0x96, 0x05, 0x51, 0x10, 0x0f, 0xd3, 0x9e, 0x71, 0x01, 0x07, 0x9b, 0x86, 0xf4, 0xa3,
	0xf7, 0x03, 0xeb, 0x77, 0x72, 0x78, 0x02, 0x63, 0x61, 0x64, 0x49, 0x6c, 0x68, 0xa5, 0x03, 0x44,
	0x18, 0x99, 0x6d, 0x4d, 0x6c, 0x14, 0x05, 0xf1, 0x38, 0xb5, 0x31, 0x46, 0xb0, 0x2f, 0x54, 0x65,
	0xa8, 0x32, 0xcf, 0x9d, 0x1a, 0x5b, 0xf5, 0x33, 0x85, 0x0c, 0x26, 0xdf, 0xc8, 0xc2, 0x28, 0x88,
	0x67, 0xa9, 0x47, 0x67, 0xca, 0xb2, 0x33, 0x13, 0x6f, 0x2c, 0x76, 0xfd, 0xbf, 0x12, 0xe5, 0xd9,
	0x4a, 0xbc, 0xb1, 0xa9, 0x55, 0x3d, 0xe3, 0x0d, 0x9c, 0xfa, 0xf8, 0x3e, 0x2f, 0x65, 0xd5, 0x0f,
	0x32, 0xb3, 0xbd, 0xfe, 0x2d, 0xaf, 0xde, 0xe1, 0xd0, 0xed, 0xe6, 0xc9, 0xad, 0x0b, 0x13, 0x08,
	0x85, 0xa6, 0x95, 0x21, 0x3c, 0x4a, 0xfc, 0x0a, 0x13, 0x57, 0x32, 0xff, 0x95, 0x59, 0xec, 0xe1,
	0x19, 0x0c, 0x0b, 0x32, 0xff, 0x2b, 0x7e, 0xb8, 0x7b, 0xb9, 0x2d, 0xa4, 0x59, 0x6f, 0xb2, 0x44,
	0xa8, 0x92, 0xb7, 0x6d, 0xbb, 0xd6, 0x97, 0xcb, 0xe5, 0x05, 0xef, 0xe6, 0x53, 0xd5, 0x79, 0xa1,
	0x6b, 0xc1, 0x0b, 0xc5, 0xfd, 0x47, 0xbe, 0x73, 0xd8, 0x2c, 0xb4, 0x97, 0xbd, 0xfe, 0x0a, 0x00,
	0x00, 0xff, 0xff, 0x66, 0x0e, 0xc3, 0x47, 0xf0, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ReportServiceClient is the client API for ReportService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReportServiceClient interface {
	Create(ctx context.Context, in *Report, opts ...grpc.CallOption) (*Report, error)
	Get(ctx context.Context, in *Report, opts ...grpc.CallOption) (*Report, error)
}

type reportServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewReportServiceClient(cc grpc.ClientConnInterface) ReportServiceClient {
	return &reportServiceClient{cc}
}

func (c *reportServiceClient) Create(ctx context.Context, in *Report, opts ...grpc.CallOption) (*Report, error) {
	out := new(Report)
	err := c.cc.Invoke(ctx, "/services.ReportService/create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportServiceClient) Get(ctx context.Context, in *Report, opts ...grpc.CallOption) (*Report, error) {
	out := new(Report)
	err := c.cc.Invoke(ctx, "/services.ReportService/get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReportServiceServer is the server API for ReportService service.
type ReportServiceServer interface {
	Create(context.Context, *Report) (*Report, error)
	Get(context.Context, *Report) (*Report, error)
}

// UnimplementedReportServiceServer can be embedded to have forward compatible implementations.
type UnimplementedReportServiceServer struct {
}

func (*UnimplementedReportServiceServer) Create(ctx context.Context, req *Report) (*Report, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedReportServiceServer) Get(ctx context.Context, req *Report) (*Report, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterReportServiceServer(s *grpc.Server, srv ReportServiceServer) {
	s.RegisterService(&_ReportService_serviceDesc, srv)
}

func _ReportService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Report)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.ReportService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportServiceServer).Create(ctx, req.(*Report))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReportService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Report)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.ReportService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportServiceServer).Get(ctx, req.(*Report))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReportService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.ReportService",
	HandlerType: (*ReportServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "create",
			Handler:    _ReportService_Create_Handler,
		},
		{
			MethodName: "get",
			Handler:    _ReportService_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "report/report.proto",
}

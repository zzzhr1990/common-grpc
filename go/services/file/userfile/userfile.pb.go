// Code generated by protoc-gen-go. DO NOT EDIT.
// source: file/userfile.proto

package userfile

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	common "github.com/zzzhr1990/common-grpc/go/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserFile struct {
	Identity             string   `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Hash                 string   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	UserIdentity         int64    `protobuf:"varint,3,opt,name=user_identity,json=userIdentity,proto3" json:"user_identity,omitempty"`
	Path                 string   `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Name                 string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Ext                  string   `protobuf:"bytes,6,opt,name=ext,proto3" json:"ext,omitempty"`
	Size                 int64    `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	Mime                 string   `protobuf:"bytes,8,opt,name=mime,proto3" json:"mime,omitempty"`
	Deleted              bool     `protobuf:"varint,9,opt,name=deleted,proto3" json:"deleted,omitempty"`
	Parent               string   `protobuf:"bytes,10,opt,name=parent,proto3" json:"parent,omitempty"`
	Type                 int32    `protobuf:"varint,11,opt,name=type,proto3" json:"type,omitempty"`
	Directory            bool     `protobuf:"varint,12,opt,name=directory,proto3" json:"directory,omitempty"`
	Atime                int64    `protobuf:"varint,13,opt,name=atime,proto3" json:"atime,omitempty"`
	Ctime                int64    `protobuf:"varint,14,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Mtime                int64    `protobuf:"varint,15,opt,name=mtime,proto3" json:"mtime,omitempty"`
	Version              int32    `protobuf:"varint,16,opt,name=version,proto3" json:"version,omitempty"`
	Locking              bool     `protobuf:"varint,17,opt,name=locking,proto3" json:"locking,omitempty"`
	Op                   int32    `protobuf:"varint,18,opt,name=op,proto3" json:"op,omitempty"`
	Preview              bool     `protobuf:"varint,19,opt,name=preview,proto3" json:"preview,omitempty"`
	PreviewType          int32    `protobuf:"varint,20,opt,name=preview_type,json=previewType,proto3" json:"preview_type,omitempty"`
	Flag                 int32    `protobuf:"varint,21,opt,name=flag,proto3" json:"flag,omitempty"`
	UniqueIdentity       string   `protobuf:"bytes,22,opt,name=unique_identity,json=uniqueIdentity,proto3" json:"unique_identity,omitempty"`
	Share                bool     `protobuf:"varint,23,opt,name=share,proto3" json:"share,omitempty"`
	DownloadAddress      string   `protobuf:"bytes,24,opt,name=download_address,json=downloadAddress,proto3" json:"download_address,omitempty"`
	UnlockTime           int64    `protobuf:"varint,25,opt,name=unlock_time,json=unlockTime,proto3" json:"unlock_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserFile) Reset()         { *m = UserFile{} }
func (m *UserFile) String() string { return proto.CompactTextString(m) }
func (*UserFile) ProtoMessage()    {}
func (*UserFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869c2ca76fd1758, []int{0}
}

func (m *UserFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserFile.Unmarshal(m, b)
}
func (m *UserFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserFile.Marshal(b, m, deterministic)
}
func (m *UserFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserFile.Merge(m, src)
}
func (m *UserFile) XXX_Size() int {
	return xxx_messageInfo_UserFile.Size(m)
}
func (m *UserFile) XXX_DiscardUnknown() {
	xxx_messageInfo_UserFile.DiscardUnknown(m)
}

var xxx_messageInfo_UserFile proto.InternalMessageInfo

func (m *UserFile) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *UserFile) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *UserFile) GetUserIdentity() int64 {
	if m != nil {
		return m.UserIdentity
	}
	return 0
}

func (m *UserFile) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *UserFile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserFile) GetExt() string {
	if m != nil {
		return m.Ext
	}
	return ""
}

func (m *UserFile) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *UserFile) GetMime() string {
	if m != nil {
		return m.Mime
	}
	return ""
}

func (m *UserFile) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

func (m *UserFile) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *UserFile) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *UserFile) GetDirectory() bool {
	if m != nil {
		return m.Directory
	}
	return false
}

func (m *UserFile) GetAtime() int64 {
	if m != nil {
		return m.Atime
	}
	return 0
}

func (m *UserFile) GetCtime() int64 {
	if m != nil {
		return m.Ctime
	}
	return 0
}

func (m *UserFile) GetMtime() int64 {
	if m != nil {
		return m.Mtime
	}
	return 0
}

func (m *UserFile) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *UserFile) GetLocking() bool {
	if m != nil {
		return m.Locking
	}
	return false
}

func (m *UserFile) GetOp() int32 {
	if m != nil {
		return m.Op
	}
	return 0
}

func (m *UserFile) GetPreview() bool {
	if m != nil {
		return m.Preview
	}
	return false
}

func (m *UserFile) GetPreviewType() int32 {
	if m != nil {
		return m.PreviewType
	}
	return 0
}

func (m *UserFile) GetFlag() int32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

func (m *UserFile) GetUniqueIdentity() string {
	if m != nil {
		return m.UniqueIdentity
	}
	return ""
}

func (m *UserFile) GetShare() bool {
	if m != nil {
		return m.Share
	}
	return false
}

func (m *UserFile) GetDownloadAddress() string {
	if m != nil {
		return m.DownloadAddress
	}
	return ""
}

func (m *UserFile) GetUnlockTime() int64 {
	if m != nil {
		return m.UnlockTime
	}
	return 0
}

type TrashInfo struct {
	Identity             string   `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	UserIdentity         int64    `protobuf:"varint,2,opt,name=user_identity,json=userIdentity,proto3" json:"user_identity,omitempty"`
	Path                 string   `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	PathIdentity         string   `protobuf:"bytes,4,opt,name=path_identity,json=pathIdentity,proto3" json:"path_identity,omitempty"`
	CreateTime           int64    `protobuf:"varint,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Name                 string   `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Type                 int32    `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"`
	Mime                 string   `protobuf:"bytes,8,opt,name=mime,proto3" json:"mime,omitempty"`
	Addon                string   `protobuf:"bytes,9,opt,name=addon,proto3" json:"addon,omitempty"`
	Locking              bool     `protobuf:"varint,10,opt,name=locking,proto3" json:"locking,omitempty"`
	Op                   int32    `protobuf:"varint,11,opt,name=op,proto3" json:"op,omitempty"`
	Size                 int64    `protobuf:"varint,12,opt,name=size,proto3" json:"size,omitempty"`
	Directory            bool     `protobuf:"varint,13,opt,name=directory,proto3" json:"directory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrashInfo) Reset()         { *m = TrashInfo{} }
func (m *TrashInfo) String() string { return proto.CompactTextString(m) }
func (*TrashInfo) ProtoMessage()    {}
func (*TrashInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869c2ca76fd1758, []int{1}
}

func (m *TrashInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrashInfo.Unmarshal(m, b)
}
func (m *TrashInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrashInfo.Marshal(b, m, deterministic)
}
func (m *TrashInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrashInfo.Merge(m, src)
}
func (m *TrashInfo) XXX_Size() int {
	return xxx_messageInfo_TrashInfo.Size(m)
}
func (m *TrashInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TrashInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TrashInfo proto.InternalMessageInfo

func (m *TrashInfo) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *TrashInfo) GetUserIdentity() int64 {
	if m != nil {
		return m.UserIdentity
	}
	return 0
}

func (m *TrashInfo) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *TrashInfo) GetPathIdentity() string {
	if m != nil {
		return m.PathIdentity
	}
	return ""
}

func (m *TrashInfo) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *TrashInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TrashInfo) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *TrashInfo) GetMime() string {
	if m != nil {
		return m.Mime
	}
	return ""
}

func (m *TrashInfo) GetAddon() string {
	if m != nil {
		return m.Addon
	}
	return ""
}

func (m *TrashInfo) GetLocking() bool {
	if m != nil {
		return m.Locking
	}
	return false
}

func (m *TrashInfo) GetOp() int32 {
	if m != nil {
		return m.Op
	}
	return 0
}

func (m *TrashInfo) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *TrashInfo) GetDirectory() bool {
	if m != nil {
		return m.Directory
	}
	return false
}

//
//message CommonPageRequest {
//int64 user_identity = 1;
//PageInfo page_info = 2;
//}
type FilterRequest struct {
	Identity             []string `protobuf:"bytes,1,rep,name=identity,proto3" json:"identity,omitempty"`
	Type                 []int32  `protobuf:"varint,2,rep,packed,name=type,proto3" json:"type,omitempty"`
	Directory            int32    `protobuf:"varint,3,opt,name=directory,proto3" json:"directory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FilterRequest) Reset()         { *m = FilterRequest{} }
func (m *FilterRequest) String() string { return proto.CompactTextString(m) }
func (*FilterRequest) ProtoMessage()    {}
func (*FilterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869c2ca76fd1758, []int{2}
}

func (m *FilterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterRequest.Unmarshal(m, b)
}
func (m *FilterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterRequest.Marshal(b, m, deterministic)
}
func (m *FilterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterRequest.Merge(m, src)
}
func (m *FilterRequest) XXX_Size() int {
	return xxx_messageInfo_FilterRequest.Size(m)
}
func (m *FilterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FilterRequest proto.InternalMessageInfo

func (m *FilterRequest) GetIdentity() []string {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *FilterRequest) GetType() []int32 {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *FilterRequest) GetDirectory() int32 {
	if m != nil {
		return m.Directory
	}
	return 0
}

type BathFileRequest struct {
	Identity             []string  `protobuf:"bytes,1,rep,name=identity,proto3" json:"identity,omitempty"`
	Path                 []string  `protobuf:"bytes,2,rep,name=path,proto3" json:"path,omitempty"`
	UserIdentity         int64     `protobuf:"varint,3,opt,name=user_identity,json=userIdentity,proto3" json:"user_identity,omitempty"`
	Dest                 *UserFile `protobuf:"bytes,4,opt,name=dest,proto3" json:"dest,omitempty"`
	Op                   int32     `protobuf:"varint,5,opt,name=op,proto3" json:"op,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *BathFileRequest) Reset()         { *m = BathFileRequest{} }
func (m *BathFileRequest) String() string { return proto.CompactTextString(m) }
func (*BathFileRequest) ProtoMessage()    {}
func (*BathFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869c2ca76fd1758, []int{3}
}

func (m *BathFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BathFileRequest.Unmarshal(m, b)
}
func (m *BathFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BathFileRequest.Marshal(b, m, deterministic)
}
func (m *BathFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BathFileRequest.Merge(m, src)
}
func (m *BathFileRequest) XXX_Size() int {
	return xxx_messageInfo_BathFileRequest.Size(m)
}
func (m *BathFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BathFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BathFileRequest proto.InternalMessageInfo

func (m *BathFileRequest) GetIdentity() []string {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *BathFileRequest) GetPath() []string {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *BathFileRequest) GetUserIdentity() int64 {
	if m != nil {
		return m.UserIdentity
	}
	return 0
}

func (m *BathFileRequest) GetDest() *UserFile {
	if m != nil {
		return m.Dest
	}
	return nil
}

func (m *BathFileRequest) GetOp() int32 {
	if m != nil {
		return m.Op
	}
	return 0
}

type MqRequest struct {
	Source               *UserFile `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Dest                 *UserFile `protobuf:"bytes,2,opt,name=dest,proto3" json:"dest,omitempty"`
	Type                 int32     `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MqRequest) Reset()         { *m = MqRequest{} }
func (m *MqRequest) String() string { return proto.CompactTextString(m) }
func (*MqRequest) ProtoMessage()    {}
func (*MqRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869c2ca76fd1758, []int{4}
}

func (m *MqRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MqRequest.Unmarshal(m, b)
}
func (m *MqRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MqRequest.Marshal(b, m, deterministic)
}
func (m *MqRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MqRequest.Merge(m, src)
}
func (m *MqRequest) XXX_Size() int {
	return xxx_messageInfo_MqRequest.Size(m)
}
func (m *MqRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MqRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MqRequest proto.InternalMessageInfo

func (m *MqRequest) GetSource() *UserFile {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *MqRequest) GetDest() *UserFile {
	if m != nil {
		return m.Dest
	}
	return nil
}

func (m *MqRequest) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

type UserFileListRequest struct {
	Identity             string                   `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	UserIdentity         int64                    `protobuf:"varint,2,opt,name=user_identity,json=userIdentity,proto3" json:"user_identity,omitempty"`
	Path                 string                   `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	ListInfo             *common.ListInfo         `protobuf:"bytes,4,opt,name=list_info,json=listInfo,proto3" json:"list_info,omitempty"`
	OrderBy              []*common.OrderByRequest `protobuf:"bytes,5,rep,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	Filter               *FilterRequest           `protobuf:"bytes,6,opt,name=filter,proto3" json:"filter,omitempty"`
	Op                   int32                    `protobuf:"varint,7,opt,name=op,proto3" json:"op,omitempty"`
	Name                 string                   `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *UserFileListRequest) Reset()         { *m = UserFileListRequest{} }
func (m *UserFileListRequest) String() string { return proto.CompactTextString(m) }
func (*UserFileListRequest) ProtoMessage()    {}
func (*UserFileListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869c2ca76fd1758, []int{5}
}

func (m *UserFileListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserFileListRequest.Unmarshal(m, b)
}
func (m *UserFileListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserFileListRequest.Marshal(b, m, deterministic)
}
func (m *UserFileListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserFileListRequest.Merge(m, src)
}
func (m *UserFileListRequest) XXX_Size() int {
	return xxx_messageInfo_UserFileListRequest.Size(m)
}
func (m *UserFileListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserFileListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserFileListRequest proto.InternalMessageInfo

func (m *UserFileListRequest) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *UserFileListRequest) GetUserIdentity() int64 {
	if m != nil {
		return m.UserIdentity
	}
	return 0
}

func (m *UserFileListRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *UserFileListRequest) GetListInfo() *common.ListInfo {
	if m != nil {
		return m.ListInfo
	}
	return nil
}

func (m *UserFileListRequest) GetOrderBy() []*common.OrderByRequest {
	if m != nil {
		return m.OrderBy
	}
	return nil
}

func (m *UserFileListRequest) GetFilter() *FilterRequest {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *UserFileListRequest) GetOp() int32 {
	if m != nil {
		return m.Op
	}
	return 0
}

func (m *UserFileListRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CommonListRequest struct {
	UserIdentity         int64            `protobuf:"varint,1,opt,name=user_identity,json=userIdentity,proto3" json:"user_identity,omitempty"`
	ListInfo             *common.ListInfo `protobuf:"bytes,2,opt,name=list_info,json=listInfo,proto3" json:"list_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CommonListRequest) Reset()         { *m = CommonListRequest{} }
func (m *CommonListRequest) String() string { return proto.CompactTextString(m) }
func (*CommonListRequest) ProtoMessage()    {}
func (*CommonListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869c2ca76fd1758, []int{6}
}

func (m *CommonListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonListRequest.Unmarshal(m, b)
}
func (m *CommonListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonListRequest.Marshal(b, m, deterministic)
}
func (m *CommonListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonListRequest.Merge(m, src)
}
func (m *CommonListRequest) XXX_Size() int {
	return xxx_messageInfo_CommonListRequest.Size(m)
}
func (m *CommonListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommonListRequest proto.InternalMessageInfo

func (m *CommonListRequest) GetUserIdentity() int64 {
	if m != nil {
		return m.UserIdentity
	}
	return 0
}

func (m *CommonListRequest) GetListInfo() *common.ListInfo {
	if m != nil {
		return m.ListInfo
	}
	return nil
}

type UserFileListResponse struct {
	Parent               *UserFile   `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	Data                 []*UserFile `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UserFileListResponse) Reset()         { *m = UserFileListResponse{} }
func (m *UserFileListResponse) String() string { return proto.CompactTextString(m) }
func (*UserFileListResponse) ProtoMessage()    {}
func (*UserFileListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869c2ca76fd1758, []int{7}
}

func (m *UserFileListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserFileListResponse.Unmarshal(m, b)
}
func (m *UserFileListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserFileListResponse.Marshal(b, m, deterministic)
}
func (m *UserFileListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserFileListResponse.Merge(m, src)
}
func (m *UserFileListResponse) XXX_Size() int {
	return xxx_messageInfo_UserFileListResponse.Size(m)
}
func (m *UserFileListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserFileListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserFileListResponse proto.InternalMessageInfo

func (m *UserFileListResponse) GetParent() *UserFile {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *UserFileListResponse) GetData() []*UserFile {
	if m != nil {
		return m.Data
	}
	return nil
}

type TrashListResponse struct {
	Data                 []*TrashInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TrashListResponse) Reset()         { *m = TrashListResponse{} }
func (m *TrashListResponse) String() string { return proto.CompactTextString(m) }
func (*TrashListResponse) ProtoMessage()    {}
func (*TrashListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869c2ca76fd1758, []int{8}
}

func (m *TrashListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrashListResponse.Unmarshal(m, b)
}
func (m *TrashListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrashListResponse.Marshal(b, m, deterministic)
}
func (m *TrashListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrashListResponse.Merge(m, src)
}
func (m *TrashListResponse) XXX_Size() int {
	return xxx_messageInfo_TrashListResponse.Size(m)
}
func (m *TrashListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TrashListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TrashListResponse proto.InternalMessageInfo

func (m *TrashListResponse) GetData() []*TrashInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

type UploadTokenResponse struct {
	UploadToken string `protobuf:"bytes,1,opt,name=upload_token,json=uploadToken,proto3" json:"upload_token,omitempty"`
	Type        string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// string upload_url = 3;
	FilePath             string    `protobuf:"bytes,3,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	Created              bool      `protobuf:"varint,4,opt,name=created,proto3" json:"created,omitempty"`
	CreateInfo           *UserFile `protobuf:"bytes,5,opt,name=create_info,json=createInfo,proto3" json:"create_info,omitempty"`
	PartUploadUrl        string    `protobuf:"bytes,6,opt,name=part_upload_url,json=partUploadUrl,proto3" json:"part_upload_url,omitempty"`
	DirectUploadUrl      string    `protobuf:"bytes,7,opt,name=direct_upload_url,json=directUploadUrl,proto3" json:"direct_upload_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UploadTokenResponse) Reset()         { *m = UploadTokenResponse{} }
func (m *UploadTokenResponse) String() string { return proto.CompactTextString(m) }
func (*UploadTokenResponse) ProtoMessage()    {}
func (*UploadTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869c2ca76fd1758, []int{9}
}

func (m *UploadTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadTokenResponse.Unmarshal(m, b)
}
func (m *UploadTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadTokenResponse.Marshal(b, m, deterministic)
}
func (m *UploadTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadTokenResponse.Merge(m, src)
}
func (m *UploadTokenResponse) XXX_Size() int {
	return xxx_messageInfo_UploadTokenResponse.Size(m)
}
func (m *UploadTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UploadTokenResponse proto.InternalMessageInfo

func (m *UploadTokenResponse) GetUploadToken() string {
	if m != nil {
		return m.UploadToken
	}
	return ""
}

func (m *UploadTokenResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *UploadTokenResponse) GetFilePath() string {
	if m != nil {
		return m.FilePath
	}
	return ""
}

func (m *UploadTokenResponse) GetCreated() bool {
	if m != nil {
		return m.Created
	}
	return false
}

func (m *UploadTokenResponse) GetCreateInfo() *UserFile {
	if m != nil {
		return m.CreateInfo
	}
	return nil
}

func (m *UploadTokenResponse) GetPartUploadUrl() string {
	if m != nil {
		return m.PartUploadUrl
	}
	return ""
}

func (m *UploadTokenResponse) GetDirectUploadUrl() string {
	if m != nil {
		return m.DirectUploadUrl
	}
	return ""
}

func init() {
	proto.RegisterType((*UserFile)(nil), "services.UserFile")
	proto.RegisterType((*TrashInfo)(nil), "services.TrashInfo")
	proto.RegisterType((*FilterRequest)(nil), "services.FilterRequest")
	proto.RegisterType((*BathFileRequest)(nil), "services.BathFileRequest")
	proto.RegisterType((*MqRequest)(nil), "services.MqRequest")
	proto.RegisterType((*UserFileListRequest)(nil), "services.UserFileListRequest")
	proto.RegisterType((*CommonListRequest)(nil), "services.CommonListRequest")
	proto.RegisterType((*UserFileListResponse)(nil), "services.UserFileListResponse")
	proto.RegisterType((*TrashListResponse)(nil), "services.TrashListResponse")
	proto.RegisterType((*UploadTokenResponse)(nil), "services.UploadTokenResponse")
}

func init() {
	proto.RegisterFile("file/userfile.proto", fileDescriptor_8869c2ca76fd1758)
}

var fileDescriptor_8869c2ca76fd1758 = []byte{
	// 1181 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0xdd, 0x6e, 0xdb, 0x36,
	0x14, 0x8e, 0xff, 0xe5, 0x23, 0xbb, 0x69, 0x98, 0xb4, 0x65, 0xdd, 0x75, 0x75, 0x55, 0xa0, 0xcd,
	0x0a, 0x2c, 0xde, 0xdc, 0xa1, 0x43, 0xbb, 0x0e, 0xd8, 0x92, 0x2d, 0x41, 0x80, 0x16, 0x1d, 0xd4,
	0xe4, 0x66, 0xc0, 0x60, 0x28, 0x12, 0x13, 0x6b, 0x91, 0x45, 0x85, 0xa2, 0xd2, 0x39, 0x2f, 0xb0,
	0x9b, 0x3d, 0xc3, 0xee, 0xf6, 0x46, 0xbb, 0xdb, 0xcb, 0x0c, 0x3c, 0x94, 0x64, 0x39, 0x51, 0x7e,
	0xb7, 0x2b, 0xf3, 0x7c, 0x3c, 0x1f, 0xcf, 0xe1, 0xe1, 0xc7, 0x43, 0x0b, 0x96, 0xf7, 0xfd, 0x80,
	0x0d, 0x92, 0x98, 0x09, 0x35, 0x58, 0x8b, 0x04, 0x97, 0x9c, 0x18, 0x31, 0x13, 0xc7, 0xbe, 0xcb,
	0xe2, 0x5e, 0xcf, 0xe5, 0x93, 0x09, 0x0f, 0x07, 0xfa, 0x67, 0xc4, 0x42, 0xe9, 0xcb, 0xa9, 0xf6,
	0xb2, 0x7e, 0x6f, 0x80, 0xb1, 0x1b, 0x33, 0xb1, 0xe9, 0x07, 0x8c, 0xf4, 0xc0, 0xf0, 0x3d, 0x3d,
	0x4d, 0x2b, 0xfd, 0xca, 0x6a, 0xdb, 0xce, 0x6d, 0x42, 0xa0, 0x3e, 0x76, 0xe2, 0x31, 0xad, 0x22,
	0x8e, 0x63, 0xf2, 0x04, 0xba, 0x2a, 0xe8, 0x28, 0x27, 0xd5, 0xfa, 0x95, 0xd5, 0x9a, 0xdd, 0x51,
	0xe0, 0x76, 0x81, 0x18, 0x39, 0x72, 0x4c, 0xeb, 0x9a, 0xa8, 0xc6, 0x0a, 0x0b, 0x9d, 0x09, 0xa3,
	0x0d, 0x8d, 0xa9, 0x31, 0xb9, 0x0d, 0x35, 0xf6, 0x9b, 0xa4, 0x4d, 0x84, 0xd4, 0x50, 0x79, 0xc5,
	0xfe, 0x09, 0xa3, 0x2d, 0x5c, 0x15, 0xc7, 0x0a, 0x9b, 0xf8, 0x13, 0x46, 0x0d, 0xcd, 0x54, 0x63,
	0x42, 0xa1, 0xe5, 0xb1, 0x80, 0x49, 0xe6, 0xd1, 0x76, 0xbf, 0xb2, 0x6a, 0xd8, 0x99, 0x49, 0xee,
	0x42, 0x33, 0x72, 0x04, 0x0b, 0x25, 0x05, 0xf4, 0x4f, 0x2d, 0xb5, 0x8a, 0x9c, 0x46, 0x8c, 0x9a,
	0xfd, 0xca, 0x6a, 0xc3, 0xc6, 0x31, 0xf9, 0x04, 0xda, 0x9e, 0x2f, 0x98, 0x2b, 0xb9, 0x98, 0xd2,
	0x0e, 0xae, 0x33, 0x03, 0xc8, 0x0a, 0x34, 0x1c, 0xa9, 0x02, 0x77, 0x31, 0x19, 0x6d, 0x28, 0xd4,
	0x45, 0xf4, 0x96, 0x46, 0xdd, 0x0c, 0x9d, 0x20, 0xba, 0xa8, 0x51, 0x34, 0x54, 0x96, 0xc7, 0x4c,
	0xc4, 0x3e, 0x0f, 0xe9, 0x6d, 0x0c, 0x9b, 0x99, 0x6a, 0x26, 0xe0, 0xee, 0xa1, 0x1f, 0x1e, 0xd0,
	0x25, 0x9d, 0x7f, 0x6a, 0x92, 0x5b, 0x50, 0xe5, 0x11, 0x25, 0xe8, 0x5e, 0xe5, 0x91, 0xf2, 0x8c,
	0x04, 0x3b, 0xf6, 0xd9, 0x47, 0xba, 0xac, 0x3d, 0x53, 0x93, 0x3c, 0x86, 0x4e, 0x3a, 0x1c, 0xe1,
	0xce, 0x56, 0x90, 0x63, 0xa6, 0xd8, 0x8e, 0xda, 0x20, 0x81, 0xfa, 0x7e, 0xe0, 0x1c, 0xd0, 0x3b,
	0x7a, 0xd3, 0x6a, 0x4c, 0x9e, 0xc1, 0x62, 0x12, 0xfa, 0x47, 0x09, 0x9b, 0x9d, 0xe1, 0x5d, 0xac,
	0xd4, 0x2d, 0x0d, 0xe7, 0xa7, 0xb8, 0x02, 0x8d, 0x78, 0xec, 0x08, 0x46, 0xef, 0x61, 0x5c, 0x6d,
	0x90, 0xcf, 0xe0, 0xb6, 0xc7, 0x3f, 0x86, 0x01, 0x77, 0xbc, 0x91, 0xe3, 0x79, 0x82, 0xc5, 0x31,
	0xa5, 0xc8, 0x5f, 0xcc, 0xf0, 0xef, 0x35, 0x4c, 0x1e, 0x81, 0x99, 0x84, 0x6a, 0x5f, 0x23, 0x2c,
	0xcd, 0x7d, 0x2c, 0x0d, 0x68, 0x68, 0xc7, 0x9f, 0x30, 0xeb, 0xef, 0x2a, 0xb4, 0x77, 0x84, 0x13,
	0x8f, 0xb7, 0xc3, 0x7d, 0x7e, 0xa1, 0x14, 0xcf, 0xc8, 0xae, 0x7a, 0x81, 0xec, 0x6a, 0x05, 0xd9,
	0x3d, 0x81, 0xae, 0xfa, 0x9d, 0x11, 0xb5, 0x26, 0x3b, 0x0a, 0xcc, 0x89, 0x8f, 0xc0, 0x74, 0x05,
	0x73, 0x24, 0xd3, 0x89, 0x36, 0x74, 0xa2, 0x1a, 0x52, 0x89, 0xe6, 0xe2, 0x6d, 0x16, 0xc4, 0x9b,
	0x09, 0xaa, 0x55, 0x10, 0x54, 0x99, 0x54, 0x95, 0x8c, 0x3c, 0x8f, 0x87, 0x28, 0xd4, 0xb6, 0xad,
	0x8d, 0xa2, 0x00, 0xa0, 0x4c, 0x00, 0x66, 0x2e, 0x80, 0xec, 0x4a, 0x74, 0x0a, 0x57, 0x62, 0x4e,
	0xb8, 0xdd, 0x53, 0xc2, 0xb5, 0x7e, 0x81, 0xee, 0xa6, 0x1f, 0x48, 0x26, 0x6c, 0x76, 0x94, 0xb0,
	0x58, 0x9e, 0xaa, 0x6c, 0xed, 0xf4, 0x25, 0xc7, 0x6d, 0x54, 0xfb, 0xb5, 0xf2, 0x7b, 0x51, 0xc3,
	0x4c, 0x0a, 0xcb, 0xff, 0x59, 0x81, 0xc5, 0x75, 0x47, 0x8e, 0x55, 0xff, 0xb8, 0x62, 0x04, 0x3c,
	0x96, 0x2a, 0xe2, 0xf9, 0xb1, 0x5c, 0xde, 0x46, 0x9e, 0x42, 0xdd, 0x63, 0xb1, 0xc4, 0x23, 0x33,
	0x87, 0x64, 0x2d, 0xeb, 0x6e, 0x6b, 0x59, 0xf7, 0xb2, 0x71, 0x3e, 0xad, 0x58, 0x23, 0xab, 0x98,
	0x15, 0x43, 0xfb, 0xdd, 0x51, 0x96, 0xd9, 0x73, 0x68, 0xc6, 0x3c, 0x11, 0x2e, 0x43, 0x4d, 0x95,
	0x2f, 0x93, 0x7a, 0xe4, 0x01, 0xab, 0x97, 0x04, 0xcc, 0x6a, 0x56, 0x9b, 0x1d, 0xbd, 0xf5, 0x57,
	0x15, 0x96, 0x33, 0xb7, 0xb7, 0x7e, 0x2c, 0xcb, 0x2b, 0xf3, 0x3f, 0xa9, 0x7a, 0x00, 0xed, 0xc0,
	0x8f, 0xe5, 0xc8, 0x0f, 0xf7, 0xf9, 0xd9, 0xf2, 0xa8, 0xf0, 0xea, 0x46, 0xd9, 0x46, 0x90, 0x8e,
	0xc8, 0x0b, 0x30, 0xb8, 0xf0, 0x98, 0x18, 0xed, 0x4d, 0x69, 0xa3, 0x5f, 0x5b, 0x35, 0x87, 0x74,
	0xe6, 0xff, 0x5e, 0xcd, 0xac, 0x4f, 0xd3, 0x8c, 0xed, 0x16, 0xd7, 0x36, 0x19, 0x40, 0x73, 0x1f,
	0x75, 0x84, 0xba, 0x37, 0x87, 0xf7, 0x66, 0x94, 0x39, 0x7d, 0xd9, 0xa9, 0x5b, 0x7a, 0x10, 0xad,
	0xa2, 0x74, 0xf1, 0xda, 0x18, 0xb3, 0x6b, 0x63, 0xf9, 0xb0, 0xb4, 0x81, 0x8f, 0x52, 0xb1, 0x48,
	0x67, 0x0a, 0x51, 0x29, 0x29, 0xc4, 0xdc, 0xa6, 0xab, 0x97, 0x6f, 0xda, 0xfa, 0x15, 0x56, 0xe6,
	0x4f, 0x24, 0x8e, 0x78, 0x18, 0x33, 0x25, 0x89, 0xf4, 0x89, 0xb8, 0x40, 0x12, 0xe9, 0xb3, 0xa1,
	0x24, 0xe1, 0x48, 0x07, 0xc5, 0x7b, 0x9e, 0x24, 0x1c, 0xe9, 0x58, 0x6f, 0x60, 0x09, 0x3b, 0xd9,
	0x5c, 0xa0, 0x67, 0x73, 0xe4, 0xe5, 0x19, 0x39, 0x6f, 0x7a, 0x29, 0xfb, 0x0f, 0x25, 0x9e, 0x48,
	0xf5, 0xce, 0x1d, 0x7e, 0xc8, 0xc2, 0x7c, 0x81, 0xc7, 0xd0, 0x49, 0x10, 0x1e, 0x49, 0x85, 0xa7,
	0x02, 0x32, 0x93, 0x99, 0x6b, 0xe1, 0xfe, 0x62, 0x8d, 0xf1, 0xfe, 0x3e, 0x80, 0xb6, 0xfa, 0x57,
	0x30, 0x2a, 0xe8, 0xc6, 0x50, 0xc0, 0x4f, 0x4a, 0x3b, 0x14, 0x5a, 0xba, 0xb3, 0x79, 0xa8, 0x1c,
	0xc3, 0xce, 0x4c, 0xf2, 0x22, 0x6f, 0x83, 0x58, 0xe2, 0xc6, 0xb9, 0xc5, 0x49, 0x5b, 0x23, 0x2a,
	0xeb, 0x29, 0x2c, 0x46, 0x8e, 0x90, 0xa3, 0x34, 0xcf, 0x44, 0x04, 0x69, 0x97, 0xec, 0x2a, 0x58,
	0x6f, 0x6a, 0x57, 0x04, 0xe4, 0x39, 0x2c, 0xe9, 0x16, 0x52, 0xf4, 0x6c, 0xa5, 0x0f, 0x07, 0x4e,
	0xe4, 0xbe, 0xc3, 0x7f, 0x0c, 0x30, 0x55, 0xa0, 0x0f, 0x3a, 0x32, 0x19, 0x42, 0x73, 0x03, 0x23,
	0x92, 0x92, 0x6c, 0x7a, 0x25, 0x98, 0xb5, 0x40, 0x5e, 0x02, 0x6c, 0x06, 0x49, 0x3c, 0xfe, 0x20,
	0xb9, 0xb8, 0x0e, 0xef, 0x6b, 0x30, 0x77, 0x23, 0xcf, 0x91, 0x6c, 0x83, 0x27, 0xea, 0x6f, 0xc3,
	0x95, 0x89, 0x03, 0xa8, 0x6d, 0xb1, 0xeb, 0x10, 0xd6, 0x55, 0xa4, 0xc2, 0x41, 0x96, 0x10, 0x1f,
	0x16, 0xb0, 0xb3, 0xf2, 0xb0, 0x16, 0x54, 0x65, 0x6c, 0xa6, 0x9f, 0xa3, 0x2b, 0xc7, 0x1d, 0x42,
	0xfd, 0x2d, 0x77, 0x0f, 0x4b, 0x19, 0x2b, 0x33, 0x6c, 0x9d, 0xf3, 0xe0, 0x47, 0xbc, 0x79, 0xd6,
	0x02, 0x79, 0x05, 0xa6, 0xcd, 0x02, 0xe6, 0xc4, 0xec, 0xda, 0xd4, 0x6f, 0xa0, 0x81, 0x72, 0x27,
	0xf7, 0x0b, 0x0e, 0xf3, 0xcf, 0x47, 0xef, 0xce, 0x6c, 0x6a, 0x3b, 0x94, 0x2f, 0xbf, 0xca, 0xc9,
	0x6f, 0xa0, 0xf9, 0x03, 0xfe, 0xb1, 0xbb, 0x11, 0xfb, 0x35, 0xd4, 0x37, 0x78, 0x34, 0xbd, 0x29,
	0xf7, 0x1d, 0x3f, 0xbe, 0x59, 0xdc, 0x6f, 0xa1, 0x65, 0x33, 0x97, 0x1f, 0x33, 0x71, 0x23, 0xfa,
	0x16, 0xd4, 0x55, 0x1b, 0x21, 0x0f, 0xcf, 0x56, 0xb9, 0xd0, 0x34, 0x7b, 0x9f, 0x9e, 0x37, 0x9d,
	0xab, 0xe3, 0x3d, 0x74, 0x74, 0x5b, 0x94, 0x4c, 0x84, 0x4e, 0xf0, 0xdf, 0x17, 0xdc, 0x86, 0xb6,
	0x42, 0xf4, 0x79, 0x5e, 0xb2, 0xda, 0x83, 0x53, 0xed, 0xee, 0xd4, 0x52, 0x2f, 0xc1, 0xd8, 0x62,
	0xe9, 0x4a, 0x65, 0x9d, 0xb1, 0x57, 0x06, 0x5a, 0x0b, 0xe4, 0x3b, 0x80, 0x8d, 0x80, 0x39, 0xe2,
	0xc6, 0x9a, 0x5a, 0x7f, 0xf3, 0xf3, 0xeb, 0x03, 0x5f, 0x8e, 0x93, 0xbd, 0x35, 0x97, 0x4f, 0x06,
	0x27, 0x27, 0x27, 0x63, 0xf1, 0xe5, 0xab, 0x57, 0x5f, 0xa4, 0xdf, 0x4a, 0x9f, 0x1f, 0x88, 0xc8,
	0x1d, 0x1c, 0xf0, 0x41, 0xc6, 0x1e, 0xcc, 0x7d, 0x69, 0xed, 0x35, 0xf1, 0x23, 0xea, 0xc5, 0xbf,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xcb, 0x9b, 0x3b, 0x01, 0x81, 0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FileServiceClient is the client API for FileService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FileServiceClient interface {
	// Create create a file
	Create(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*UserFile, error)
	FlushStore(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*UserFile, error)
	UpdateCount(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*UserFile, error)
	// rpc CreateInternal (UserFile) returns (UserFile) {}
	Get(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*UserFile, error)
	UploadToken(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*UploadTokenResponse, error)
	Rename(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*UserFile, error)
	// rpc ChangePathInternal (UserFile) returns (UserFile) {}
	Lock(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*common.BoolEntity, error)
	ReleaseLock(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*common.BoolEntity, error)
	Trash(ctx context.Context, in *BathFileRequest, opts ...grpc.CallOption) (*common.Int64Entity, error)
	Delete(ctx context.Context, in *BathFileRequest, opts ...grpc.CallOption) (*common.Int64Entity, error)
	Copy(ctx context.Context, in *BathFileRequest, opts ...grpc.CallOption) (*common.Int64Entity, error)
	Move(ctx context.Context, in *BathFileRequest, opts ...grpc.CallOption) (*common.Int64Entity, error)
	Recover(ctx context.Context, in *BathFileRequest, opts ...grpc.CallOption) (*common.Int64Entity, error)
	// rpc Page (UserFilePageRequest) returns (UserFilePageResponse) {}
	List(ctx context.Context, in *UserFileListRequest, opts ...grpc.CallOption) (*UserFileListResponse, error)
	ListInternal(ctx context.Context, in *UserFileListRequest, opts ...grpc.CallOption) (*UserFileListResponse, error)
	// rpc PageTrash (CommonPageRequest) returns (TrashPageResponse) {}
	ListTrash(ctx context.Context, in *UserFileListRequest, opts ...grpc.CallOption) (*TrashListResponse, error)
	GetTrash(ctx context.Context, in *TrashInfo, opts ...grpc.CallOption) (*TrashInfo, error)
	ClearTrash(ctx context.Context, in *BathFileRequest, opts ...grpc.CallOption) (*common.Int64Entity, error)
}

type fileServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFileServiceClient(cc grpc.ClientConnInterface) FileServiceClient {
	return &fileServiceClient{cc}
}

func (c *fileServiceClient) Create(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*UserFile, error) {
	out := new(UserFile)
	err := c.cc.Invoke(ctx, "/services.FileService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) FlushStore(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*UserFile, error) {
	out := new(UserFile)
	err := c.cc.Invoke(ctx, "/services.FileService/FlushStore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) UpdateCount(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*UserFile, error) {
	out := new(UserFile)
	err := c.cc.Invoke(ctx, "/services.FileService/UpdateCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) Get(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*UserFile, error) {
	out := new(UserFile)
	err := c.cc.Invoke(ctx, "/services.FileService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) UploadToken(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*UploadTokenResponse, error) {
	out := new(UploadTokenResponse)
	err := c.cc.Invoke(ctx, "/services.FileService/UploadToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) Rename(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*UserFile, error) {
	out := new(UserFile)
	err := c.cc.Invoke(ctx, "/services.FileService/Rename", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) Lock(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*common.BoolEntity, error) {
	out := new(common.BoolEntity)
	err := c.cc.Invoke(ctx, "/services.FileService/Lock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) ReleaseLock(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*common.BoolEntity, error) {
	out := new(common.BoolEntity)
	err := c.cc.Invoke(ctx, "/services.FileService/ReleaseLock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) Trash(ctx context.Context, in *BathFileRequest, opts ...grpc.CallOption) (*common.Int64Entity, error) {
	out := new(common.Int64Entity)
	err := c.cc.Invoke(ctx, "/services.FileService/Trash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) Delete(ctx context.Context, in *BathFileRequest, opts ...grpc.CallOption) (*common.Int64Entity, error) {
	out := new(common.Int64Entity)
	err := c.cc.Invoke(ctx, "/services.FileService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) Copy(ctx context.Context, in *BathFileRequest, opts ...grpc.CallOption) (*common.Int64Entity, error) {
	out := new(common.Int64Entity)
	err := c.cc.Invoke(ctx, "/services.FileService/Copy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) Move(ctx context.Context, in *BathFileRequest, opts ...grpc.CallOption) (*common.Int64Entity, error) {
	out := new(common.Int64Entity)
	err := c.cc.Invoke(ctx, "/services.FileService/Move", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) Recover(ctx context.Context, in *BathFileRequest, opts ...grpc.CallOption) (*common.Int64Entity, error) {
	out := new(common.Int64Entity)
	err := c.cc.Invoke(ctx, "/services.FileService/Recover", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) List(ctx context.Context, in *UserFileListRequest, opts ...grpc.CallOption) (*UserFileListResponse, error) {
	out := new(UserFileListResponse)
	err := c.cc.Invoke(ctx, "/services.FileService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) ListInternal(ctx context.Context, in *UserFileListRequest, opts ...grpc.CallOption) (*UserFileListResponse, error) {
	out := new(UserFileListResponse)
	err := c.cc.Invoke(ctx, "/services.FileService/ListInternal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) ListTrash(ctx context.Context, in *UserFileListRequest, opts ...grpc.CallOption) (*TrashListResponse, error) {
	out := new(TrashListResponse)
	err := c.cc.Invoke(ctx, "/services.FileService/ListTrash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) GetTrash(ctx context.Context, in *TrashInfo, opts ...grpc.CallOption) (*TrashInfo, error) {
	out := new(TrashInfo)
	err := c.cc.Invoke(ctx, "/services.FileService/GetTrash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) ClearTrash(ctx context.Context, in *BathFileRequest, opts ...grpc.CallOption) (*common.Int64Entity, error) {
	out := new(common.Int64Entity)
	err := c.cc.Invoke(ctx, "/services.FileService/ClearTrash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FileServiceServer is the server API for FileService service.
type FileServiceServer interface {
	// Create create a file
	Create(context.Context, *UserFile) (*UserFile, error)
	FlushStore(context.Context, *UserFile) (*UserFile, error)
	UpdateCount(context.Context, *UserFile) (*UserFile, error)
	// rpc CreateInternal (UserFile) returns (UserFile) {}
	Get(context.Context, *UserFile) (*UserFile, error)
	UploadToken(context.Context, *UserFile) (*UploadTokenResponse, error)
	Rename(context.Context, *UserFile) (*UserFile, error)
	// rpc ChangePathInternal (UserFile) returns (UserFile) {}
	Lock(context.Context, *UserFile) (*common.BoolEntity, error)
	ReleaseLock(context.Context, *UserFile) (*common.BoolEntity, error)
	Trash(context.Context, *BathFileRequest) (*common.Int64Entity, error)
	Delete(context.Context, *BathFileRequest) (*common.Int64Entity, error)
	Copy(context.Context, *BathFileRequest) (*common.Int64Entity, error)
	Move(context.Context, *BathFileRequest) (*common.Int64Entity, error)
	Recover(context.Context, *BathFileRequest) (*common.Int64Entity, error)
	// rpc Page (UserFilePageRequest) returns (UserFilePageResponse) {}
	List(context.Context, *UserFileListRequest) (*UserFileListResponse, error)
	ListInternal(context.Context, *UserFileListRequest) (*UserFileListResponse, error)
	// rpc PageTrash (CommonPageRequest) returns (TrashPageResponse) {}
	ListTrash(context.Context, *UserFileListRequest) (*TrashListResponse, error)
	GetTrash(context.Context, *TrashInfo) (*TrashInfo, error)
	ClearTrash(context.Context, *BathFileRequest) (*common.Int64Entity, error)
}

// UnimplementedFileServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFileServiceServer struct {
}

func (*UnimplementedFileServiceServer) Create(ctx context.Context, req *UserFile) (*UserFile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedFileServiceServer) FlushStore(ctx context.Context, req *UserFile) (*UserFile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FlushStore not implemented")
}
func (*UnimplementedFileServiceServer) UpdateCount(ctx context.Context, req *UserFile) (*UserFile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCount not implemented")
}
func (*UnimplementedFileServiceServer) Get(ctx context.Context, req *UserFile) (*UserFile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedFileServiceServer) UploadToken(ctx context.Context, req *UserFile) (*UploadTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadToken not implemented")
}
func (*UnimplementedFileServiceServer) Rename(ctx context.Context, req *UserFile) (*UserFile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Rename not implemented")
}
func (*UnimplementedFileServiceServer) Lock(ctx context.Context, req *UserFile) (*common.BoolEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lock not implemented")
}
func (*UnimplementedFileServiceServer) ReleaseLock(ctx context.Context, req *UserFile) (*common.BoolEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleaseLock not implemented")
}
func (*UnimplementedFileServiceServer) Trash(ctx context.Context, req *BathFileRequest) (*common.Int64Entity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Trash not implemented")
}
func (*UnimplementedFileServiceServer) Delete(ctx context.Context, req *BathFileRequest) (*common.Int64Entity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedFileServiceServer) Copy(ctx context.Context, req *BathFileRequest) (*common.Int64Entity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Copy not implemented")
}
func (*UnimplementedFileServiceServer) Move(ctx context.Context, req *BathFileRequest) (*common.Int64Entity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Move not implemented")
}
func (*UnimplementedFileServiceServer) Recover(ctx context.Context, req *BathFileRequest) (*common.Int64Entity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Recover not implemented")
}
func (*UnimplementedFileServiceServer) List(ctx context.Context, req *UserFileListRequest) (*UserFileListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedFileServiceServer) ListInternal(ctx context.Context, req *UserFileListRequest) (*UserFileListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListInternal not implemented")
}
func (*UnimplementedFileServiceServer) ListTrash(ctx context.Context, req *UserFileListRequest) (*TrashListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTrash not implemented")
}
func (*UnimplementedFileServiceServer) GetTrash(ctx context.Context, req *TrashInfo) (*TrashInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTrash not implemented")
}
func (*UnimplementedFileServiceServer) ClearTrash(ctx context.Context, req *BathFileRequest) (*common.Int64Entity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClearTrash not implemented")
}

func RegisterFileServiceServer(s *grpc.Server, srv FileServiceServer) {
	s.RegisterService(&_FileService_serviceDesc, srv)
}

func _FileService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.FileService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).Create(ctx, req.(*UserFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_FlushStore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).FlushStore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.FileService/FlushStore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).FlushStore(ctx, req.(*UserFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_UpdateCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).UpdateCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.FileService/UpdateCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).UpdateCount(ctx, req.(*UserFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.FileService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).Get(ctx, req.(*UserFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_UploadToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).UploadToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.FileService/UploadToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).UploadToken(ctx, req.(*UserFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_Rename_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).Rename(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.FileService/Rename",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).Rename(ctx, req.(*UserFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_Lock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).Lock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.FileService/Lock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).Lock(ctx, req.(*UserFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_ReleaseLock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).ReleaseLock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.FileService/ReleaseLock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).ReleaseLock(ctx, req.(*UserFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_Trash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BathFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).Trash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.FileService/Trash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).Trash(ctx, req.(*BathFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BathFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.FileService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).Delete(ctx, req.(*BathFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_Copy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BathFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).Copy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.FileService/Copy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).Copy(ctx, req.(*BathFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_Move_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BathFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).Move(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.FileService/Move",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).Move(ctx, req.(*BathFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_Recover_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BathFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).Recover(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.FileService/Recover",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).Recover(ctx, req.(*BathFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFileListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.FileService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).List(ctx, req.(*UserFileListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_ListInternal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFileListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).ListInternal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.FileService/ListInternal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).ListInternal(ctx, req.(*UserFileListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_ListTrash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFileListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).ListTrash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.FileService/ListTrash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).ListTrash(ctx, req.(*UserFileListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_GetTrash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TrashInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).GetTrash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.FileService/GetTrash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).GetTrash(ctx, req.(*TrashInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_ClearTrash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BathFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).ClearTrash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.FileService/ClearTrash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).ClearTrash(ctx, req.(*BathFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.FileService",
	HandlerType: (*FileServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _FileService_Create_Handler,
		},
		{
			MethodName: "FlushStore",
			Handler:    _FileService_FlushStore_Handler,
		},
		{
			MethodName: "UpdateCount",
			Handler:    _FileService_UpdateCount_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _FileService_Get_Handler,
		},
		{
			MethodName: "UploadToken",
			Handler:    _FileService_UploadToken_Handler,
		},
		{
			MethodName: "Rename",
			Handler:    _FileService_Rename_Handler,
		},
		{
			MethodName: "Lock",
			Handler:    _FileService_Lock_Handler,
		},
		{
			MethodName: "ReleaseLock",
			Handler:    _FileService_ReleaseLock_Handler,
		},
		{
			MethodName: "Trash",
			Handler:    _FileService_Trash_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _FileService_Delete_Handler,
		},
		{
			MethodName: "Copy",
			Handler:    _FileService_Copy_Handler,
		},
		{
			MethodName: "Move",
			Handler:    _FileService_Move_Handler,
		},
		{
			MethodName: "Recover",
			Handler:    _FileService_Recover_Handler,
		},
		{
			MethodName: "List",
			Handler:    _FileService_List_Handler,
		},
		{
			MethodName: "ListInternal",
			Handler:    _FileService_ListInternal_Handler,
		},
		{
			MethodName: "ListTrash",
			Handler:    _FileService_ListTrash_Handler,
		},
		{
			MethodName: "GetTrash",
			Handler:    _FileService_GetTrash_Handler,
		},
		{
			MethodName: "ClearTrash",
			Handler:    _FileService_ClearTrash_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "file/userfile.proto",
}

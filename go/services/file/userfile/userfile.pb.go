// Code generated by protoc-gen-go. DO NOT EDIT.
// source: file/userfile.proto

package userfile

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	common "github.com/zzzhr1990/common-grpc/go/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MoveBackRequest struct {
	Destination          *UserFile `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
	Source               []string  `protobuf:"bytes,2,rep,name=source,proto3" json:"source,omitempty"`
	UserIdentity         int64     `protobuf:"varint,3,opt,name=userIdentity,proto3" json:"userIdentity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MoveBackRequest) Reset()         { *m = MoveBackRequest{} }
func (m *MoveBackRequest) String() string { return proto.CompactTextString(m) }
func (*MoveBackRequest) ProtoMessage()    {}
func (*MoveBackRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869c2ca76fd1758, []int{0}
}

func (m *MoveBackRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveBackRequest.Unmarshal(m, b)
}
func (m *MoveBackRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveBackRequest.Marshal(b, m, deterministic)
}
func (m *MoveBackRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveBackRequest.Merge(m, src)
}
func (m *MoveBackRequest) XXX_Size() int {
	return xxx_messageInfo_MoveBackRequest.Size(m)
}
func (m *MoveBackRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveBackRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MoveBackRequest proto.InternalMessageInfo

func (m *MoveBackRequest) GetDestination() *UserFile {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *MoveBackRequest) GetSource() []string {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *MoveBackRequest) GetUserIdentity() int64 {
	if m != nil {
		return m.UserIdentity
	}
	return 0
}

type UserFile struct {
	Identity     string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Hash         string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	UserIdentity int64  `protobuf:"varint,3,opt,name=userIdentity,proto3" json:"userIdentity,omitempty"`
	Path         string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Name         string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Ext          string `protobuf:"bytes,6,opt,name=ext,proto3" json:"ext,omitempty"`
	Size         uint64 `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	Parent       string `protobuf:"bytes,8,opt,name=parent,proto3" json:"parent,omitempty"`
	Type         int32  `protobuf:"varint,9,opt,name=type,proto3" json:"type,omitempty"`
	Directory    bool   `protobuf:"varint,10,opt,name=directory,proto3" json:"directory,omitempty"`
	Atime        int64  `protobuf:"varint,11,opt,name=atime,proto3" json:"atime,omitempty"`
	Ctime        int64  `protobuf:"varint,12,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Mtime        int64  `protobuf:"varint,13,opt,name=mtime,proto3" json:"mtime,omitempty"`
	Version      uint32 `protobuf:"varint,14,opt,name=version,proto3" json:"version,omitempty"`
	Locking      bool   `protobuf:"varint,15,opt,name=locking,proto3" json:"locking,omitempty"`
	Op           uint32 `protobuf:"varint,16,opt,name=op,proto3" json:"op,omitempty"`
	// bool ignoreCase = 17;
	Children             []*UserFile `protobuf:"bytes,17,rep,name=children,proto3" json:"children,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UserFile) Reset()         { *m = UserFile{} }
func (m *UserFile) String() string { return proto.CompactTextString(m) }
func (*UserFile) ProtoMessage()    {}
func (*UserFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869c2ca76fd1758, []int{1}
}

func (m *UserFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserFile.Unmarshal(m, b)
}
func (m *UserFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserFile.Marshal(b, m, deterministic)
}
func (m *UserFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserFile.Merge(m, src)
}
func (m *UserFile) XXX_Size() int {
	return xxx_messageInfo_UserFile.Size(m)
}
func (m *UserFile) XXX_DiscardUnknown() {
	xxx_messageInfo_UserFile.DiscardUnknown(m)
}

var xxx_messageInfo_UserFile proto.InternalMessageInfo

func (m *UserFile) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *UserFile) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *UserFile) GetUserIdentity() int64 {
	if m != nil {
		return m.UserIdentity
	}
	return 0
}

func (m *UserFile) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *UserFile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserFile) GetExt() string {
	if m != nil {
		return m.Ext
	}
	return ""
}

func (m *UserFile) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *UserFile) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *UserFile) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *UserFile) GetDirectory() bool {
	if m != nil {
		return m.Directory
	}
	return false
}

func (m *UserFile) GetAtime() int64 {
	if m != nil {
		return m.Atime
	}
	return 0
}

func (m *UserFile) GetCtime() int64 {
	if m != nil {
		return m.Ctime
	}
	return 0
}

func (m *UserFile) GetMtime() int64 {
	if m != nil {
		return m.Mtime
	}
	return 0
}

func (m *UserFile) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *UserFile) GetLocking() bool {
	if m != nil {
		return m.Locking
	}
	return false
}

func (m *UserFile) GetOp() uint32 {
	if m != nil {
		return m.Op
	}
	return 0
}

func (m *UserFile) GetChildren() []*UserFile {
	if m != nil {
		return m.Children
	}
	return nil
}

type UserFileEx struct {
	Identity     string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Hash         string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	UserIdentity int64  `protobuf:"varint,3,opt,name=userIdentity,proto3" json:"userIdentity,omitempty"`
	Path         string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Name         string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Ext          string `protobuf:"bytes,6,opt,name=ext,proto3" json:"ext,omitempty"`
	Size         uint64 `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	Parent       string `protobuf:"bytes,8,opt,name=parent,proto3" json:"parent,omitempty"`
	Type         int32  `protobuf:"varint,9,opt,name=type,proto3" json:"type,omitempty"`
	Directory    bool   `protobuf:"varint,10,opt,name=directory,proto3" json:"directory,omitempty"`
	Atime        int64  `protobuf:"varint,11,opt,name=atime,proto3" json:"atime,omitempty"`
	Ctime        int64  `protobuf:"varint,12,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Mtime        int64  `protobuf:"varint,13,opt,name=mtime,proto3" json:"mtime,omitempty"`
	Version      uint32 `protobuf:"varint,14,opt,name=version,proto3" json:"version,omitempty"`
	Locking      bool   `protobuf:"varint,15,opt,name=locking,proto3" json:"locking,omitempty"`
	Op           uint32 `protobuf:"varint,16,opt,name=op,proto3" json:"op,omitempty"`
	// bool ignoreCase = 17;
	Children             []*UserFile `protobuf:"bytes,17,rep,name=children,proto3" json:"children,omitempty"`
	DownloadAddress      string      `protobuf:"bytes,18,opt,name=downloadAddress,proto3" json:"downloadAddress,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UserFileEx) Reset()         { *m = UserFileEx{} }
func (m *UserFileEx) String() string { return proto.CompactTextString(m) }
func (*UserFileEx) ProtoMessage()    {}
func (*UserFileEx) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869c2ca76fd1758, []int{2}
}

func (m *UserFileEx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserFileEx.Unmarshal(m, b)
}
func (m *UserFileEx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserFileEx.Marshal(b, m, deterministic)
}
func (m *UserFileEx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserFileEx.Merge(m, src)
}
func (m *UserFileEx) XXX_Size() int {
	return xxx_messageInfo_UserFileEx.Size(m)
}
func (m *UserFileEx) XXX_DiscardUnknown() {
	xxx_messageInfo_UserFileEx.DiscardUnknown(m)
}

var xxx_messageInfo_UserFileEx proto.InternalMessageInfo

func (m *UserFileEx) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *UserFileEx) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *UserFileEx) GetUserIdentity() int64 {
	if m != nil {
		return m.UserIdentity
	}
	return 0
}

func (m *UserFileEx) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *UserFileEx) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserFileEx) GetExt() string {
	if m != nil {
		return m.Ext
	}
	return ""
}

func (m *UserFileEx) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *UserFileEx) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *UserFileEx) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *UserFileEx) GetDirectory() bool {
	if m != nil {
		return m.Directory
	}
	return false
}

func (m *UserFileEx) GetAtime() int64 {
	if m != nil {
		return m.Atime
	}
	return 0
}

func (m *UserFileEx) GetCtime() int64 {
	if m != nil {
		return m.Ctime
	}
	return 0
}

func (m *UserFileEx) GetMtime() int64 {
	if m != nil {
		return m.Mtime
	}
	return 0
}

func (m *UserFileEx) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *UserFileEx) GetLocking() bool {
	if m != nil {
		return m.Locking
	}
	return false
}

func (m *UserFileEx) GetOp() uint32 {
	if m != nil {
		return m.Op
	}
	return 0
}

func (m *UserFileEx) GetChildren() []*UserFile {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *UserFileEx) GetDownloadAddress() string {
	if m != nil {
		return m.DownloadAddress
	}
	return ""
}

type UserFileOperation struct {
	Source               []*UserFile `protobuf:"bytes,1,rep,name=source,proto3" json:"source,omitempty"`
	Destination          *UserFile   `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	OperationCode        int32       `protobuf:"varint,3,opt,name=operationCode,proto3" json:"operationCode,omitempty"`
	UserIdentity         int64       `protobuf:"varint,4,opt,name=userIdentity,proto3" json:"userIdentity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UserFileOperation) Reset()         { *m = UserFileOperation{} }
func (m *UserFileOperation) String() string { return proto.CompactTextString(m) }
func (*UserFileOperation) ProtoMessage()    {}
func (*UserFileOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869c2ca76fd1758, []int{3}
}

func (m *UserFileOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserFileOperation.Unmarshal(m, b)
}
func (m *UserFileOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserFileOperation.Marshal(b, m, deterministic)
}
func (m *UserFileOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserFileOperation.Merge(m, src)
}
func (m *UserFileOperation) XXX_Size() int {
	return xxx_messageInfo_UserFileOperation.Size(m)
}
func (m *UserFileOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_UserFileOperation.DiscardUnknown(m)
}

var xxx_messageInfo_UserFileOperation proto.InternalMessageInfo

func (m *UserFileOperation) GetSource() []*UserFile {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *UserFileOperation) GetDestination() *UserFile {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *UserFileOperation) GetOperationCode() int32 {
	if m != nil {
		return m.OperationCode
	}
	return 0
}

func (m *UserFileOperation) GetUserIdentity() int64 {
	if m != nil {
		return m.UserIdentity
	}
	return 0
}

type UserFilePage struct {
	Parent               *UserFile   `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	List                 []*UserFile `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	TotalCount           int64       `protobuf:"varint,3,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	TotalPage            int32       `protobuf:"varint,4,opt,name=totalPage,proto3" json:"totalPage,omitempty"`
	Page                 int32       `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	PageSize             int32       `protobuf:"varint,6,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UserFilePage) Reset()         { *m = UserFilePage{} }
func (m *UserFilePage) String() string { return proto.CompactTextString(m) }
func (*UserFilePage) ProtoMessage()    {}
func (*UserFilePage) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869c2ca76fd1758, []int{4}
}

func (m *UserFilePage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserFilePage.Unmarshal(m, b)
}
func (m *UserFilePage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserFilePage.Marshal(b, m, deterministic)
}
func (m *UserFilePage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserFilePage.Merge(m, src)
}
func (m *UserFilePage) XXX_Size() int {
	return xxx_messageInfo_UserFilePage.Size(m)
}
func (m *UserFilePage) XXX_DiscardUnknown() {
	xxx_messageInfo_UserFilePage.DiscardUnknown(m)
}

var xxx_messageInfo_UserFilePage proto.InternalMessageInfo

func (m *UserFilePage) GetParent() *UserFile {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *UserFilePage) GetList() []*UserFile {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *UserFilePage) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *UserFilePage) GetTotalPage() int32 {
	if m != nil {
		return m.TotalPage
	}
	return 0
}

func (m *UserFilePage) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *UserFilePage) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type DeleteFilesRequest struct {
	UserIdentity         int64    `protobuf:"varint,1,opt,name=userIdentity,proto3" json:"userIdentity,omitempty"`
	FilesIdentity        []string `protobuf:"bytes,2,rep,name=filesIdentity,proto3" json:"filesIdentity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteFilesRequest) Reset()         { *m = DeleteFilesRequest{} }
func (m *DeleteFilesRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteFilesRequest) ProtoMessage()    {}
func (*DeleteFilesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869c2ca76fd1758, []int{5}
}

func (m *DeleteFilesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteFilesRequest.Unmarshal(m, b)
}
func (m *DeleteFilesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteFilesRequest.Marshal(b, m, deterministic)
}
func (m *DeleteFilesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteFilesRequest.Merge(m, src)
}
func (m *DeleteFilesRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteFilesRequest.Size(m)
}
func (m *DeleteFilesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteFilesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteFilesRequest proto.InternalMessageInfo

func (m *DeleteFilesRequest) GetUserIdentity() int64 {
	if m != nil {
		return m.UserIdentity
	}
	return 0
}

func (m *DeleteFilesRequest) GetFilesIdentity() []string {
	if m != nil {
		return m.FilesIdentity
	}
	return nil
}

type UserFileList struct {
	Parent               *UserFile   `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	List                 []*UserFile `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UserFileList) Reset()         { *m = UserFileList{} }
func (m *UserFileList) String() string { return proto.CompactTextString(m) }
func (*UserFileList) ProtoMessage()    {}
func (*UserFileList) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869c2ca76fd1758, []int{6}
}

func (m *UserFileList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserFileList.Unmarshal(m, b)
}
func (m *UserFileList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserFileList.Marshal(b, m, deterministic)
}
func (m *UserFileList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserFileList.Merge(m, src)
}
func (m *UserFileList) XXX_Size() int {
	return xxx_messageInfo_UserFileList.Size(m)
}
func (m *UserFileList) XXX_DiscardUnknown() {
	xxx_messageInfo_UserFileList.DiscardUnknown(m)
}

var xxx_messageInfo_UserFileList proto.InternalMessageInfo

func (m *UserFileList) GetParent() *UserFile {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *UserFileList) GetList() []*UserFile {
	if m != nil {
		return m.List
	}
	return nil
}

type TrashInfo struct {
	Identity             string   `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Source               string   `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	Size                 uint64   `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	MoveTime             int64    `protobuf:"varint,5,opt,name=moveTime,proto3" json:"moveTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrashInfo) Reset()         { *m = TrashInfo{} }
func (m *TrashInfo) String() string { return proto.CompactTextString(m) }
func (*TrashInfo) ProtoMessage()    {}
func (*TrashInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869c2ca76fd1758, []int{7}
}

func (m *TrashInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrashInfo.Unmarshal(m, b)
}
func (m *TrashInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrashInfo.Marshal(b, m, deterministic)
}
func (m *TrashInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrashInfo.Merge(m, src)
}
func (m *TrashInfo) XXX_Size() int {
	return xxx_messageInfo_TrashInfo.Size(m)
}
func (m *TrashInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TrashInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TrashInfo proto.InternalMessageInfo

func (m *TrashInfo) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *TrashInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TrashInfo) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *TrashInfo) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *TrashInfo) GetMoveTime() int64 {
	if m != nil {
		return m.MoveTime
	}
	return 0
}

type TrashList struct {
	List                 []*TrashInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TrashList) Reset()         { *m = TrashList{} }
func (m *TrashList) String() string { return proto.CompactTextString(m) }
func (*TrashList) ProtoMessage()    {}
func (*TrashList) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869c2ca76fd1758, []int{8}
}

func (m *TrashList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrashList.Unmarshal(m, b)
}
func (m *TrashList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrashList.Marshal(b, m, deterministic)
}
func (m *TrashList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrashList.Merge(m, src)
}
func (m *TrashList) XXX_Size() int {
	return xxx_messageInfo_TrashList.Size(m)
}
func (m *TrashList) XXX_DiscardUnknown() {
	xxx_messageInfo_TrashList.DiscardUnknown(m)
}

var xxx_messageInfo_TrashList proto.InternalMessageInfo

func (m *TrashList) GetList() []*TrashInfo {
	if m != nil {
		return m.List
	}
	return nil
}

type TrashPage struct {
	List                 []*TrashInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	TotalCount           int64        `protobuf:"varint,2,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	TotalPage            int32        `protobuf:"varint,3,opt,name=totalPage,proto3" json:"totalPage,omitempty"`
	Page                 int32        `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	PageSize             int32        `protobuf:"varint,5,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TrashPage) Reset()         { *m = TrashPage{} }
func (m *TrashPage) String() string { return proto.CompactTextString(m) }
func (*TrashPage) ProtoMessage()    {}
func (*TrashPage) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869c2ca76fd1758, []int{9}
}

func (m *TrashPage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrashPage.Unmarshal(m, b)
}
func (m *TrashPage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrashPage.Marshal(b, m, deterministic)
}
func (m *TrashPage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrashPage.Merge(m, src)
}
func (m *TrashPage) XXX_Size() int {
	return xxx_messageInfo_TrashPage.Size(m)
}
func (m *TrashPage) XXX_DiscardUnknown() {
	xxx_messageInfo_TrashPage.DiscardUnknown(m)
}

var xxx_messageInfo_TrashPage proto.InternalMessageInfo

func (m *TrashPage) GetList() []*TrashInfo {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *TrashPage) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *TrashPage) GetTotalPage() int32 {
	if m != nil {
		return m.TotalPage
	}
	return 0
}

func (m *TrashPage) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *TrashPage) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type PageTrashRequest struct {
	UserIdentity         int64    `protobuf:"varint,1,opt,name=userIdentity,proto3" json:"userIdentity,omitempty"`
	OrderBy              int32    `protobuf:"varint,2,opt,name=orderBy,proto3" json:"orderBy,omitempty"`
	Page                 int32    `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize             int32    `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PageTrashRequest) Reset()         { *m = PageTrashRequest{} }
func (m *PageTrashRequest) String() string { return proto.CompactTextString(m) }
func (*PageTrashRequest) ProtoMessage()    {}
func (*PageTrashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869c2ca76fd1758, []int{10}
}

func (m *PageTrashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PageTrashRequest.Unmarshal(m, b)
}
func (m *PageTrashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PageTrashRequest.Marshal(b, m, deterministic)
}
func (m *PageTrashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PageTrashRequest.Merge(m, src)
}
func (m *PageTrashRequest) XXX_Size() int {
	return xxx_messageInfo_PageTrashRequest.Size(m)
}
func (m *PageTrashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PageTrashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PageTrashRequest proto.InternalMessageInfo

func (m *PageTrashRequest) GetUserIdentity() int64 {
	if m != nil {
		return m.UserIdentity
	}
	return 0
}

func (m *PageTrashRequest) GetOrderBy() int32 {
	if m != nil {
		return m.OrderBy
	}
	return 0
}

func (m *PageTrashRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *PageTrashRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type PageUserFileRequest struct {
	Identity     string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Path         string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	UserIdentity int64  `protobuf:"varint,3,opt,name=userIdentity,proto3" json:"userIdentity,omitempty"`
	//bool ignoreCase = 4;
	OrderBy              int32    `protobuf:"varint,4,opt,name=orderBy,proto3" json:"orderBy,omitempty"`
	Page                 int32    `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	PageSize             int32    `protobuf:"varint,6,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Filter               int32    `protobuf:"varint,7,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PageUserFileRequest) Reset()         { *m = PageUserFileRequest{} }
func (m *PageUserFileRequest) String() string { return proto.CompactTextString(m) }
func (*PageUserFileRequest) ProtoMessage()    {}
func (*PageUserFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869c2ca76fd1758, []int{11}
}

func (m *PageUserFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PageUserFileRequest.Unmarshal(m, b)
}
func (m *PageUserFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PageUserFileRequest.Marshal(b, m, deterministic)
}
func (m *PageUserFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PageUserFileRequest.Merge(m, src)
}
func (m *PageUserFileRequest) XXX_Size() int {
	return xxx_messageInfo_PageUserFileRequest.Size(m)
}
func (m *PageUserFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PageUserFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PageUserFileRequest proto.InternalMessageInfo

func (m *PageUserFileRequest) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *PageUserFileRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *PageUserFileRequest) GetUserIdentity() int64 {
	if m != nil {
		return m.UserIdentity
	}
	return 0
}

func (m *PageUserFileRequest) GetOrderBy() int32 {
	if m != nil {
		return m.OrderBy
	}
	return 0
}

func (m *PageUserFileRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *PageUserFileRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *PageUserFileRequest) GetFilter() int32 {
	if m != nil {
		return m.Filter
	}
	return 0
}

type ListUserFileRequest struct {
	Identity     string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Path         string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	UserIdentity int64  `protobuf:"varint,3,opt,name=userIdentity,proto3" json:"userIdentity,omitempty"`
	// bool ignoreCase = 4;
	OrderBy              int32    `protobuf:"varint,4,opt,name=orderBy,proto3" json:"orderBy,omitempty"`
	Start                int32    `protobuf:"varint,5,opt,name=start,proto3" json:"start,omitempty"`
	ListSize             int32    `protobuf:"varint,6,opt,name=listSize,proto3" json:"listSize,omitempty"`
	Filter               int32    `protobuf:"varint,7,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListUserFileRequest) Reset()         { *m = ListUserFileRequest{} }
func (m *ListUserFileRequest) String() string { return proto.CompactTextString(m) }
func (*ListUserFileRequest) ProtoMessage()    {}
func (*ListUserFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869c2ca76fd1758, []int{12}
}

func (m *ListUserFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUserFileRequest.Unmarshal(m, b)
}
func (m *ListUserFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUserFileRequest.Marshal(b, m, deterministic)
}
func (m *ListUserFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUserFileRequest.Merge(m, src)
}
func (m *ListUserFileRequest) XXX_Size() int {
	return xxx_messageInfo_ListUserFileRequest.Size(m)
}
func (m *ListUserFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUserFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListUserFileRequest proto.InternalMessageInfo

func (m *ListUserFileRequest) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *ListUserFileRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ListUserFileRequest) GetUserIdentity() int64 {
	if m != nil {
		return m.UserIdentity
	}
	return 0
}

func (m *ListUserFileRequest) GetOrderBy() int32 {
	if m != nil {
		return m.OrderBy
	}
	return 0
}

func (m *ListUserFileRequest) GetStart() int32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *ListUserFileRequest) GetListSize() int32 {
	if m != nil {
		return m.ListSize
	}
	return 0
}

func (m *ListUserFileRequest) GetFilter() int32 {
	if m != nil {
		return m.Filter
	}
	return 0
}

type ListTrashRequest struct {
	UserIdentity         int64    `protobuf:"varint,1,opt,name=userIdentity,proto3" json:"userIdentity,omitempty"`
	OrderBy              int32    `protobuf:"varint,2,opt,name=orderBy,proto3" json:"orderBy,omitempty"`
	Start                int32    `protobuf:"varint,6,opt,name=start,proto3" json:"start,omitempty"`
	ListSize             int32    `protobuf:"varint,7,opt,name=listSize,proto3" json:"listSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTrashRequest) Reset()         { *m = ListTrashRequest{} }
func (m *ListTrashRequest) String() string { return proto.CompactTextString(m) }
func (*ListTrashRequest) ProtoMessage()    {}
func (*ListTrashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869c2ca76fd1758, []int{13}
}

func (m *ListTrashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTrashRequest.Unmarshal(m, b)
}
func (m *ListTrashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTrashRequest.Marshal(b, m, deterministic)
}
func (m *ListTrashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTrashRequest.Merge(m, src)
}
func (m *ListTrashRequest) XXX_Size() int {
	return xxx_messageInfo_ListTrashRequest.Size(m)
}
func (m *ListTrashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTrashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTrashRequest proto.InternalMessageInfo

func (m *ListTrashRequest) GetUserIdentity() int64 {
	if m != nil {
		return m.UserIdentity
	}
	return 0
}

func (m *ListTrashRequest) GetOrderBy() int32 {
	if m != nil {
		return m.OrderBy
	}
	return 0
}

func (m *ListTrashRequest) GetStart() int32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *ListTrashRequest) GetListSize() int32 {
	if m != nil {
		return m.ListSize
	}
	return 0
}

type UploadTokenResponse struct {
	UploadToken          string   `protobuf:"bytes,1,opt,name=uploadToken,proto3" json:"uploadToken,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	UploadUrl            string   `protobuf:"bytes,3,opt,name=uploadUrl,proto3" json:"uploadUrl,omitempty"`
	FilePath             string   `protobuf:"bytes,4,opt,name=filePath,proto3" json:"filePath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadTokenResponse) Reset()         { *m = UploadTokenResponse{} }
func (m *UploadTokenResponse) String() string { return proto.CompactTextString(m) }
func (*UploadTokenResponse) ProtoMessage()    {}
func (*UploadTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869c2ca76fd1758, []int{14}
}

func (m *UploadTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadTokenResponse.Unmarshal(m, b)
}
func (m *UploadTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadTokenResponse.Marshal(b, m, deterministic)
}
func (m *UploadTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadTokenResponse.Merge(m, src)
}
func (m *UploadTokenResponse) XXX_Size() int {
	return xxx_messageInfo_UploadTokenResponse.Size(m)
}
func (m *UploadTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UploadTokenResponse proto.InternalMessageInfo

func (m *UploadTokenResponse) GetUploadToken() string {
	if m != nil {
		return m.UploadToken
	}
	return ""
}

func (m *UploadTokenResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *UploadTokenResponse) GetUploadUrl() string {
	if m != nil {
		return m.UploadUrl
	}
	return ""
}

func (m *UploadTokenResponse) GetFilePath() string {
	if m != nil {
		return m.FilePath
	}
	return ""
}

func init() {
	proto.RegisterType((*MoveBackRequest)(nil), "services.MoveBackRequest")
	proto.RegisterType((*UserFile)(nil), "services.UserFile")
	proto.RegisterType((*UserFileEx)(nil), "services.UserFileEx")
	proto.RegisterType((*UserFileOperation)(nil), "services.UserFileOperation")
	proto.RegisterType((*UserFilePage)(nil), "services.UserFilePage")
	proto.RegisterType((*DeleteFilesRequest)(nil), "services.DeleteFilesRequest")
	proto.RegisterType((*UserFileList)(nil), "services.UserFileList")
	proto.RegisterType((*TrashInfo)(nil), "services.TrashInfo")
	proto.RegisterType((*TrashList)(nil), "services.TrashList")
	proto.RegisterType((*TrashPage)(nil), "services.TrashPage")
	proto.RegisterType((*PageTrashRequest)(nil), "services.PageTrashRequest")
	proto.RegisterType((*PageUserFileRequest)(nil), "services.PageUserFileRequest")
	proto.RegisterType((*ListUserFileRequest)(nil), "services.ListUserFileRequest")
	proto.RegisterType((*ListTrashRequest)(nil), "services.ListTrashRequest")
	proto.RegisterType((*UploadTokenResponse)(nil), "services.UploadTokenResponse")
}

func init() { proto.RegisterFile("file/userfile.proto", fileDescriptor_8869c2ca76fd1758) }

var fileDescriptor_8869c2ca76fd1758 = []byte{
	// 1174 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x57, 0xd1, 0x6e, 0xe3, 0x44,
	0x17, 0xae, 0xe3, 0x24, 0x4d, 0x4e, 0x9b, 0xb6, 0x3b, 0xed, 0xbf, 0xf2, 0x1f, 0x16, 0x14, 0x59,
	0x2b, 0x88, 0x90, 0x68, 0xa0, 0x5b, 0xad, 0xd4, 0x0a, 0x15, 0x91, 0x6e, 0x57, 0x54, 0x02, 0x15,
	0xb9, 0xed, 0x0d, 0x17, 0x20, 0xd7, 0x39, 0x4d, 0xac, 0x3a, 0x1e, 0x33, 0x9e, 0x94, 0xa6, 0x57,
	0x08, 0xc4, 0x8b, 0x70, 0xcd, 0x3b, 0xf0, 0x00, 0x08, 0x09, 0xee, 0x78, 0x1c, 0x34, 0x33, 0x1e,
	0xdb, 0x49, 0x6c, 0x9a, 0x45, 0x20, 0xb8, 0xe0, 0x2a, 0x73, 0xbe, 0x9c, 0x99, 0xf9, 0x66, 0xce,
	0x77, 0xce, 0xf1, 0xc0, 0xf6, 0xb5, 0x1f, 0x60, 0x6f, 0x12, 0x23, 0x13, 0x83, 0xdd, 0x88, 0x51,
	0x4e, 0x49, 0x23, 0x46, 0x76, 0xeb, 0x7b, 0x18, 0xb7, 0xdb, 0x1e, 0x1d, 0x8f, 0x69, 0xd8, 0x53,
	0x3f, 0x5f, 0x60, 0xc8, 0x7d, 0x3e, 0x55, 0x5e, 0xf6, 0xb7, 0x06, 0x6c, 0x7e, 0x42, 0x6f, 0xb1,
	0xef, 0x7a, 0x37, 0x0e, 0x7e, 0x39, 0xc1, 0x98, 0x93, 0x7d, 0x58, 0x1b, 0x60, 0xcc, 0xfd, 0xd0,
	0xe5, 0x3e, 0x0d, 0x2d, 0xa3, 0x63, 0x74, 0xd7, 0xf6, 0xc8, 0xae, 0x5e, 0x6f, 0xf7, 0x32, 0x46,
	0xf6, 0xd2, 0x0f, 0xd0, 0xc9, 0xbb, 0x91, 0xc7, 0x50, 0x8f, 0xe9, 0x84, 0x79, 0x68, 0x55, 0x3a,
	0x66, 0xb7, 0xe9, 0x24, 0x16, 0xb1, 0x61, 0x5d, 0x30, 0x3b, 0x1d, 0xa8, 0x7d, 0x2d, 0xb3, 0x63,
	0x74, 0x4d, 0x67, 0x06, 0xb3, 0x7f, 0x30, 0xa1, 0xa1, 0x57, 0x25, 0x6d, 0x68, 0xf8, 0xda, 0x59,
	0xec, 0xdd, 0x74, 0x52, 0x9b, 0x10, 0xa8, 0x8e, 0xdc, 0x78, 0x64, 0x55, 0x24, 0x2e, 0xc7, 0xcb,
	0x6c, 0x20, 0xe6, 0x45, 0x2e, 0x1f, 0x59, 0x55, 0x35, 0x4f, 0x8c, 0x05, 0x16, 0xba, 0x63, 0xb4,
	0x6a, 0x0a, 0x13, 0x63, 0xb2, 0x05, 0x26, 0xde, 0x71, 0xab, 0x2e, 0x21, 0x31, 0x14, 0x5e, 0xb1,
	0x7f, 0x8f, 0xd6, 0x6a, 0xc7, 0xe8, 0x56, 0x1d, 0x39, 0x16, 0x47, 0x8d, 0x5c, 0x86, 0x21, 0xb7,
	0x1a, 0xd2, 0x31, 0xb1, 0x84, 0x2f, 0x9f, 0x46, 0x68, 0x35, 0x3b, 0x46, 0xb7, 0xe6, 0xc8, 0x31,
	0x79, 0x02, 0xcd, 0x81, 0xcf, 0xd0, 0xe3, 0x94, 0x4d, 0x2d, 0xe8, 0x18, 0xdd, 0x86, 0x93, 0x01,
	0x64, 0x07, 0x6a, 0x2e, 0xf7, 0xc7, 0x68, 0xad, 0x49, 0xd2, 0xca, 0x10, 0xa8, 0x27, 0xd1, 0x75,
	0x85, 0x7a, 0x1a, 0x1d, 0x4b, 0xb4, 0xa5, 0x50, 0x69, 0x10, 0x0b, 0x56, 0x6f, 0x91, 0xc5, 0x22,
	0x50, 0x1b, 0x1d, 0xa3, 0xdb, 0x72, 0xb4, 0x29, 0xfe, 0x09, 0xa8, 0x77, 0xe3, 0x87, 0x43, 0x6b,
	0x53, 0xee, 0xab, 0x4d, 0xb2, 0x01, 0x15, 0x1a, 0x59, 0x5b, 0xd2, 0xbd, 0x42, 0x23, 0xb2, 0x0b,
	0x0d, 0x6f, 0xe4, 0x07, 0x03, 0x86, 0xa1, 0xf5, 0xa8, 0x63, 0x96, 0x44, 0x3b, 0xf5, 0xb1, 0x7f,
	0x33, 0x01, 0x34, 0x7c, 0x72, 0xf7, 0x5f, 0xc0, 0xfe, 0xed, 0x01, 0x23, 0x5d, 0xd8, 0x1c, 0xd0,
	0xaf, 0xc2, 0x80, 0xba, 0x83, 0x0f, 0x07, 0x03, 0x86, 0x71, 0x6c, 0x11, 0x79, 0x11, 0xf3, 0xb0,
	0xfd, 0xa3, 0x01, 0x8f, 0xf4, 0x02, 0x67, 0x11, 0x32, 0x95, 0xdb, 0x6f, 0xa7, 0xb9, 0x6d, 0x94,
	0xee, 0xa6, 0xf3, 0x7d, 0xae, 0x7a, 0x54, 0x96, 0xab, 0x1e, 0x4f, 0xa1, 0x45, 0xf5, 0x76, 0xc7,
	0x74, 0x80, 0x52, 0x14, 0x35, 0x67, 0x16, 0x5c, 0x50, 0x4e, 0xb5, 0xa0, 0x96, 0xfc, 0x62, 0xc0,
	0xba, 0xde, 0xe3, 0x53, 0x77, 0x88, 0x82, 0x7c, 0x12, 0xfc, 0xf2, 0x4a, 0xa6, 0x05, 0xf1, 0x26,
	0x54, 0x03, 0x3f, 0xe6, 0xb2, 0x84, 0x15, 0x7b, 0xca, 0xff, 0xc9, 0x1b, 0x00, 0x9c, 0x72, 0x37,
	0x38, 0xa6, 0x93, 0x90, 0x27, 0x02, 0xce, 0x21, 0x42, 0x44, 0xd2, 0x12, 0x04, 0x24, 0xcb, 0x9a,
	0x93, 0x01, 0x4a, 0xdc, 0x43, 0x25, 0xe4, 0x9a, 0x23, 0xc7, 0x22, 0x89, 0xc4, 0xef, 0xb9, 0x90,
	0x6e, 0x5d, 0xe2, 0xa9, 0x6d, 0x7f, 0x0e, 0xe4, 0x05, 0x06, 0xc8, 0x51, 0x30, 0x88, 0x75, 0x99,
	0x9e, 0xbf, 0x0c, 0xa3, 0x20, 0x8d, 0x9e, 0x42, 0x4b, 0xb4, 0x84, 0x38, 0x75, 0x52, 0xb5, 0x79,
	0x16, 0xb4, 0xaf, 0xb2, 0x1b, 0xfb, 0x58, 0x9c, 0xee, 0x6f, 0xb8, 0x31, 0xd1, 0x68, 0x9a, 0x17,
	0xcc, 0x8d, 0x47, 0xa7, 0xe1, 0x35, 0x7d, 0xa8, 0x64, 0xc8, 0x34, 0xaf, 0xe4, 0xd2, 0x3c, 0x6b,
	0x2e, 0xa6, 0x4a, 0xe0, 0x44, 0x6c, 0x3a, 0xd9, 0xab, 0xb9, 0x64, 0x6f, 0x43, 0x63, 0x4c, 0x6f,
	0xf1, 0xc2, 0x4f, 0x4a, 0x85, 0xe9, 0xa4, 0xb6, 0xbd, 0x9f, 0x90, 0x90, 0xc7, 0x7c, 0x2b, 0xa1,
	0xae, 0x34, 0xbd, 0x9d, 0x51, 0x4f, 0x79, 0x26, 0xdc, 0xbf, 0xd7, 0xdc, 0x65, 0xf4, 0x96, 0x9d,
	0x36, 0x27, 0x92, 0xca, 0x1f, 0x8b, 0xc4, 0x2c, 0x13, 0x49, 0xb5, 0x44, 0x24, 0xb5, 0x39, 0x91,
	0x7c, 0x6d, 0xc0, 0x96, 0x98, 0x28, 0x59, 0xbc, 0x8a, 0x46, 0x2c, 0x58, 0xa5, 0x6c, 0x80, 0xac,
	0x3f, 0x95, 0x1c, 0x6b, 0x8e, 0x36, 0x53, 0x0a, 0x66, 0x09, 0x85, 0xea, 0x1c, 0x85, 0x9f, 0x0c,
	0xd8, 0x16, 0x14, 0xd2, 0xd0, 0x27, 0x2c, 0x1e, 0x88, 0xb6, 0x2c, 0xf4, 0x95, 0x5c, 0xa1, 0x5f,
	0xa6, 0x41, 0xe4, 0x58, 0x57, 0x8b, 0x59, 0x2f, 0x99, 0x5d, 0x42, 0x5b, 0xd7, 0x7e, 0xc0, 0x91,
	0xc9, 0x96, 0x51, 0x73, 0x12, 0xcb, 0xfe, 0xd9, 0x80, 0x6d, 0xa1, 0x93, 0x7f, 0xf6, 0x34, 0x3b,
	0x50, 0x8b, 0xb9, 0xcb, 0x78, 0x72, 0x1c, 0x65, 0x08, 0x0e, 0x42, 0x62, 0xf9, 0xf3, 0x68, 0xbb,
	0xf4, 0x3c, 0xdf, 0x18, 0xb0, 0x25, 0xce, 0xf3, 0x17, 0x0a, 0x24, 0x25, 0x57, 0x2f, 0x23, 0xb7,
	0x3a, 0x4b, 0xce, 0xfe, 0xce, 0x80, 0xed, 0xcb, 0x48, 0x74, 0x9c, 0x0b, 0x7a, 0x83, 0xa1, 0x83,
	0x71, 0x44, 0xc3, 0x18, 0x49, 0x07, 0xd6, 0x26, 0x19, 0x9c, 0xdc, 0x6b, 0x1e, 0x4a, 0x7b, 0x75,
	0x72, 0xb5, 0xba, 0x57, 0x2b, 0x97, 0x4b, 0x16, 0x24, 0x95, 0x21, 0x03, 0x04, 0x8f, 0x6b, 0xd9,
	0x04, 0xd2, 0xef, 0x88, 0xd4, 0xde, 0xfb, 0xb5, 0x01, 0x9b, 0x3a, 0xb0, 0xe7, 0x2a, 0x81, 0xc9,
	0x1e, 0xd4, 0x3d, 0x86, 0x2e, 0x47, 0x52, 0x50, 0xc6, 0xda, 0x05, 0x98, 0xbd, 0x42, 0x7a, 0x60,
	0x0e, 0x91, 0xbf, 0xc2, 0x84, 0x3e, 0xcc, 0x9e, 0xaa, 0x60, 0xe2, 0xeb, 0x39, 0x6c, 0xf1, 0xaa,
	0xec, 0x15, 0xf2, 0x1c, 0x60, 0x88, 0xfc, 0x8c, 0x9d, 0x8c, 0x23, 0xa1, 0xb9, 0xa5, 0xf7, 0x3e,
	0x84, 0xf5, 0x6c, 0xde, 0xc9, 0x5d, 0xe1, 0xcc, 0x9d, 0x45, 0xec, 0xe4, 0xce, 0x5e, 0x21, 0x1f,
	0x41, 0x4b, 0x64, 0xcc, 0x8b, 0xf4, 0x4b, 0x28, 0xc7, 0xb2, 0x20, 0xe7, 0xdb, 0x8f, 0x17, 0xd7,
	0x11, 0x6e, 0x6a, 0x25, 0x21, 0x87, 0xc2, 0x95, 0x0a, 0xf2, 0xad, 0x68, 0x25, 0xe1, 0x66, 0xaf,
	0x90, 0x33, 0xd8, 0x99, 0x59, 0xe9, 0x34, 0xe4, 0xc8, 0xdc, 0xe0, 0xcf, 0x2f, 0xf8, 0x01, 0xac,
	0xaa, 0x0f, 0x0e, 0x24, 0xaf, 0x2d, 0x3a, 0xa5, 0xdf, 0x43, 0xed, 0xff, 0x65, 0x7f, 0x9e, 0x86,
	0xfc, 0xd9, 0xde, 0x89, 0xea, 0xa3, 0x2b, 0xe4, 0x14, 0xb6, 0x06, 0xb2, 0x53, 0xf7, 0xa7, 0x69,
	0xfa, 0x3c, 0xc9, 0x9c, 0x17, 0xbb, 0xf8, 0xdc, 0x52, 0xcf, 0xf7, 0xd3, 0xa5, 0x0e, 0x61, 0x4d,
	0xb6, 0x2d, 0x2a, 0xf3, 0xb5, 0x30, 0x56, 0xa5, 0x73, 0x8f, 0xa0, 0x19, 0xe8, 0x4c, 0x27, 0xed,
	0xd9, 0xdb, 0xc8, 0xa7, 0x7f, 0x7b, 0xbe, 0x7b, 0x25, 0xf7, 0x70, 0x04, 0xcd, 0x48, 0xb7, 0x92,
	0xfc, 0xfc, 0xf9, 0xfe, 0xb2, 0x30, 0x3f, 0x09, 0xf1, 0x11, 0x6c, 0x28, 0x91, 0x1f, 0xbb, 0x41,
	0x70, 0xe5, 0x7a, 0x37, 0x24, 0x77, 0xe7, 0xe7, 0x9c, 0xf9, 0xe1, 0x50, 0x71, 0x2d, 0x11, 0xea,
	0x01, 0xb4, 0x38, 0x9b, 0x1e, 0xcb, 0x64, 0x94, 0x6f, 0xc2, 0xe5, 0x35, 0xbe, 0x0f, 0x75, 0x86,
	0xf2, 0x9b, 0xe1, 0x01, 0x75, 0xf7, 0x29, 0x0d, 0xd2, 0x0b, 0x3b, 0x86, 0x96, 0xb8, 0xec, 0x97,
	0x8c, 0x8e, 0xd5, 0xa1, 0xff, 0x9f, 0x39, 0xce, 0x3d, 0x8f, 0x4b, 0x83, 0xdf, 0x7f, 0xff, 0xb3,
	0xc3, 0xa1, 0xcf, 0x47, 0x93, 0xab, 0x5d, 0x8f, 0x8e, 0x7b, 0xf7, 0xf7, 0xf7, 0x23, 0xf6, 0xde,
	0xc1, 0xc1, 0xbb, 0xc9, 0xbb, 0xfb, 0x9d, 0x21, 0x8b, 0xbc, 0xde, 0x90, 0xf6, 0xf4, 0xec, 0xde,
	0xcc, 0xab, 0xfd, 0xaa, 0x2e, 0x1f, 0xe4, 0xcf, 0x7e, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x45, 0xf8,
	0x50, 0xa1, 0xcd, 0x0f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserFileServiceClient is the client API for UserFileService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserFileServiceClient interface {
	// rpc createUser (GrpcUser) returns (BoolEntity) {}
	// rpc getUser (Uint64Entity) returns (GrpcUser) {}
	Create(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*UserFile, error)
	Get(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*UserFile, error)
	UploadToken(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*UploadTokenResponse, error)
	GetOrEmpty(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*UserFile, error)
	GetOrEmptyEx(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*UserFileEx, error)
	PageDirectory(ctx context.Context, in *PageUserFileRequest, opts ...grpc.CallOption) (*UserFilePage, error)
	ListDirectory(ctx context.Context, in *ListUserFileRequest, opts ...grpc.CallOption) (*UserFileList, error)
	ListDirectoryInteral(ctx context.Context, in *ListUserFileRequest, opts ...grpc.CallOption) (*UserFileList, error)
	Operate(ctx context.Context, in *UserFileOperation, opts ...grpc.CallOption) (*common.Int32Entity, error)
	DeleteByIdentity(ctx context.Context, in *DeleteFilesRequest, opts ...grpc.CallOption) (*common.Int64Entity, error)
	MoveToTrash(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*common.Int64Entity, error)
	ListTrash(ctx context.Context, in *ListTrashRequest, opts ...grpc.CallOption) (*TrashList, error)
	PageTrash(ctx context.Context, in *PageTrashRequest, opts ...grpc.CallOption) (*TrashPage, error)
	UploadCallback(ctx context.Context, in *common.StringEntity, opts ...grpc.CallOption) (*UserFile, error)
	TryCreateFile(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*UserFile, error)
	Rename(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*common.BoolEntity, error)
	MoveFromTrash(ctx context.Context, in *MoveBackRequest, opts ...grpc.CallOption) (*common.Int32Entity, error)
}

type userFileServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserFileServiceClient(cc *grpc.ClientConn) UserFileServiceClient {
	return &userFileServiceClient{cc}
}

func (c *userFileServiceClient) Create(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*UserFile, error) {
	out := new(UserFile)
	err := c.cc.Invoke(ctx, "/services.UserFileService/create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userFileServiceClient) Get(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*UserFile, error) {
	out := new(UserFile)
	err := c.cc.Invoke(ctx, "/services.UserFileService/get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userFileServiceClient) UploadToken(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*UploadTokenResponse, error) {
	out := new(UploadTokenResponse)
	err := c.cc.Invoke(ctx, "/services.UserFileService/uploadToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userFileServiceClient) GetOrEmpty(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*UserFile, error) {
	out := new(UserFile)
	err := c.cc.Invoke(ctx, "/services.UserFileService/getOrEmpty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userFileServiceClient) GetOrEmptyEx(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*UserFileEx, error) {
	out := new(UserFileEx)
	err := c.cc.Invoke(ctx, "/services.UserFileService/getOrEmptyEx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userFileServiceClient) PageDirectory(ctx context.Context, in *PageUserFileRequest, opts ...grpc.CallOption) (*UserFilePage, error) {
	out := new(UserFilePage)
	err := c.cc.Invoke(ctx, "/services.UserFileService/pageDirectory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userFileServiceClient) ListDirectory(ctx context.Context, in *ListUserFileRequest, opts ...grpc.CallOption) (*UserFileList, error) {
	out := new(UserFileList)
	err := c.cc.Invoke(ctx, "/services.UserFileService/listDirectory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userFileServiceClient) ListDirectoryInteral(ctx context.Context, in *ListUserFileRequest, opts ...grpc.CallOption) (*UserFileList, error) {
	out := new(UserFileList)
	err := c.cc.Invoke(ctx, "/services.UserFileService/listDirectoryInteral", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userFileServiceClient) Operate(ctx context.Context, in *UserFileOperation, opts ...grpc.CallOption) (*common.Int32Entity, error) {
	out := new(common.Int32Entity)
	err := c.cc.Invoke(ctx, "/services.UserFileService/operate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userFileServiceClient) DeleteByIdentity(ctx context.Context, in *DeleteFilesRequest, opts ...grpc.CallOption) (*common.Int64Entity, error) {
	out := new(common.Int64Entity)
	err := c.cc.Invoke(ctx, "/services.UserFileService/deleteByIdentity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userFileServiceClient) MoveToTrash(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*common.Int64Entity, error) {
	out := new(common.Int64Entity)
	err := c.cc.Invoke(ctx, "/services.UserFileService/moveToTrash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userFileServiceClient) ListTrash(ctx context.Context, in *ListTrashRequest, opts ...grpc.CallOption) (*TrashList, error) {
	out := new(TrashList)
	err := c.cc.Invoke(ctx, "/services.UserFileService/listTrash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userFileServiceClient) PageTrash(ctx context.Context, in *PageTrashRequest, opts ...grpc.CallOption) (*TrashPage, error) {
	out := new(TrashPage)
	err := c.cc.Invoke(ctx, "/services.UserFileService/pageTrash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userFileServiceClient) UploadCallback(ctx context.Context, in *common.StringEntity, opts ...grpc.CallOption) (*UserFile, error) {
	out := new(UserFile)
	err := c.cc.Invoke(ctx, "/services.UserFileService/uploadCallback", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userFileServiceClient) TryCreateFile(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*UserFile, error) {
	out := new(UserFile)
	err := c.cc.Invoke(ctx, "/services.UserFileService/tryCreateFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userFileServiceClient) Rename(ctx context.Context, in *UserFile, opts ...grpc.CallOption) (*common.BoolEntity, error) {
	out := new(common.BoolEntity)
	err := c.cc.Invoke(ctx, "/services.UserFileService/rename", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userFileServiceClient) MoveFromTrash(ctx context.Context, in *MoveBackRequest, opts ...grpc.CallOption) (*common.Int32Entity, error) {
	out := new(common.Int32Entity)
	err := c.cc.Invoke(ctx, "/services.UserFileService/moveFromTrash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserFileServiceServer is the server API for UserFileService service.
type UserFileServiceServer interface {
	// rpc createUser (GrpcUser) returns (BoolEntity) {}
	// rpc getUser (Uint64Entity) returns (GrpcUser) {}
	Create(context.Context, *UserFile) (*UserFile, error)
	Get(context.Context, *UserFile) (*UserFile, error)
	UploadToken(context.Context, *UserFile) (*UploadTokenResponse, error)
	GetOrEmpty(context.Context, *UserFile) (*UserFile, error)
	GetOrEmptyEx(context.Context, *UserFile) (*UserFileEx, error)
	PageDirectory(context.Context, *PageUserFileRequest) (*UserFilePage, error)
	ListDirectory(context.Context, *ListUserFileRequest) (*UserFileList, error)
	ListDirectoryInteral(context.Context, *ListUserFileRequest) (*UserFileList, error)
	Operate(context.Context, *UserFileOperation) (*common.Int32Entity, error)
	DeleteByIdentity(context.Context, *DeleteFilesRequest) (*common.Int64Entity, error)
	MoveToTrash(context.Context, *UserFile) (*common.Int64Entity, error)
	ListTrash(context.Context, *ListTrashRequest) (*TrashList, error)
	PageTrash(context.Context, *PageTrashRequest) (*TrashPage, error)
	UploadCallback(context.Context, *common.StringEntity) (*UserFile, error)
	TryCreateFile(context.Context, *UserFile) (*UserFile, error)
	Rename(context.Context, *UserFile) (*common.BoolEntity, error)
	MoveFromTrash(context.Context, *MoveBackRequest) (*common.Int32Entity, error)
}

// UnimplementedUserFileServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserFileServiceServer struct {
}

func (*UnimplementedUserFileServiceServer) Create(ctx context.Context, req *UserFile) (*UserFile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedUserFileServiceServer) Get(ctx context.Context, req *UserFile) (*UserFile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedUserFileServiceServer) UploadToken(ctx context.Context, req *UserFile) (*UploadTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadToken not implemented")
}
func (*UnimplementedUserFileServiceServer) GetOrEmpty(ctx context.Context, req *UserFile) (*UserFile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrEmpty not implemented")
}
func (*UnimplementedUserFileServiceServer) GetOrEmptyEx(ctx context.Context, req *UserFile) (*UserFileEx, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrEmptyEx not implemented")
}
func (*UnimplementedUserFileServiceServer) PageDirectory(ctx context.Context, req *PageUserFileRequest) (*UserFilePage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PageDirectory not implemented")
}
func (*UnimplementedUserFileServiceServer) ListDirectory(ctx context.Context, req *ListUserFileRequest) (*UserFileList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDirectory not implemented")
}
func (*UnimplementedUserFileServiceServer) ListDirectoryInteral(ctx context.Context, req *ListUserFileRequest) (*UserFileList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDirectoryInteral not implemented")
}
func (*UnimplementedUserFileServiceServer) Operate(ctx context.Context, req *UserFileOperation) (*common.Int32Entity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Operate not implemented")
}
func (*UnimplementedUserFileServiceServer) DeleteByIdentity(ctx context.Context, req *DeleteFilesRequest) (*common.Int64Entity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteByIdentity not implemented")
}
func (*UnimplementedUserFileServiceServer) MoveToTrash(ctx context.Context, req *UserFile) (*common.Int64Entity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MoveToTrash not implemented")
}
func (*UnimplementedUserFileServiceServer) ListTrash(ctx context.Context, req *ListTrashRequest) (*TrashList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTrash not implemented")
}
func (*UnimplementedUserFileServiceServer) PageTrash(ctx context.Context, req *PageTrashRequest) (*TrashPage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PageTrash not implemented")
}
func (*UnimplementedUserFileServiceServer) UploadCallback(ctx context.Context, req *common.StringEntity) (*UserFile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadCallback not implemented")
}
func (*UnimplementedUserFileServiceServer) TryCreateFile(ctx context.Context, req *UserFile) (*UserFile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TryCreateFile not implemented")
}
func (*UnimplementedUserFileServiceServer) Rename(ctx context.Context, req *UserFile) (*common.BoolEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Rename not implemented")
}
func (*UnimplementedUserFileServiceServer) MoveFromTrash(ctx context.Context, req *MoveBackRequest) (*common.Int32Entity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MoveFromTrash not implemented")
}

func RegisterUserFileServiceServer(s *grpc.Server, srv UserFileServiceServer) {
	s.RegisterService(&_UserFileService_serviceDesc, srv)
}

func _UserFileService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserFileServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserFileService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserFileServiceServer).Create(ctx, req.(*UserFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserFileService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserFileServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserFileService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserFileServiceServer).Get(ctx, req.(*UserFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserFileService_UploadToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserFileServiceServer).UploadToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserFileService/UploadToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserFileServiceServer).UploadToken(ctx, req.(*UserFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserFileService_GetOrEmpty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserFileServiceServer).GetOrEmpty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserFileService/GetOrEmpty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserFileServiceServer).GetOrEmpty(ctx, req.(*UserFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserFileService_GetOrEmptyEx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserFileServiceServer).GetOrEmptyEx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserFileService/GetOrEmptyEx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserFileServiceServer).GetOrEmptyEx(ctx, req.(*UserFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserFileService_PageDirectory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PageUserFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserFileServiceServer).PageDirectory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserFileService/PageDirectory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserFileServiceServer).PageDirectory(ctx, req.(*PageUserFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserFileService_ListDirectory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUserFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserFileServiceServer).ListDirectory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserFileService/ListDirectory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserFileServiceServer).ListDirectory(ctx, req.(*ListUserFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserFileService_ListDirectoryInteral_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUserFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserFileServiceServer).ListDirectoryInteral(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserFileService/ListDirectoryInteral",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserFileServiceServer).ListDirectoryInteral(ctx, req.(*ListUserFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserFileService_Operate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFileOperation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserFileServiceServer).Operate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserFileService/Operate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserFileServiceServer).Operate(ctx, req.(*UserFileOperation))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserFileService_DeleteByIdentity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFilesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserFileServiceServer).DeleteByIdentity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserFileService/DeleteByIdentity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserFileServiceServer).DeleteByIdentity(ctx, req.(*DeleteFilesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserFileService_MoveToTrash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserFileServiceServer).MoveToTrash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserFileService/MoveToTrash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserFileServiceServer).MoveToTrash(ctx, req.(*UserFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserFileService_ListTrash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTrashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserFileServiceServer).ListTrash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserFileService/ListTrash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserFileServiceServer).ListTrash(ctx, req.(*ListTrashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserFileService_PageTrash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PageTrashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserFileServiceServer).PageTrash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserFileService/PageTrash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserFileServiceServer).PageTrash(ctx, req.(*PageTrashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserFileService_UploadCallback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.StringEntity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserFileServiceServer).UploadCallback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserFileService/UploadCallback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserFileServiceServer).UploadCallback(ctx, req.(*common.StringEntity))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserFileService_TryCreateFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserFileServiceServer).TryCreateFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserFileService/TryCreateFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserFileServiceServer).TryCreateFile(ctx, req.(*UserFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserFileService_Rename_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserFileServiceServer).Rename(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserFileService/Rename",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserFileServiceServer).Rename(ctx, req.(*UserFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserFileService_MoveFromTrash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoveBackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserFileServiceServer).MoveFromTrash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserFileService/MoveFromTrash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserFileServiceServer).MoveFromTrash(ctx, req.(*MoveBackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserFileService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.UserFileService",
	HandlerType: (*UserFileServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "create",
			Handler:    _UserFileService_Create_Handler,
		},
		{
			MethodName: "get",
			Handler:    _UserFileService_Get_Handler,
		},
		{
			MethodName: "uploadToken",
			Handler:    _UserFileService_UploadToken_Handler,
		},
		{
			MethodName: "getOrEmpty",
			Handler:    _UserFileService_GetOrEmpty_Handler,
		},
		{
			MethodName: "getOrEmptyEx",
			Handler:    _UserFileService_GetOrEmptyEx_Handler,
		},
		{
			MethodName: "pageDirectory",
			Handler:    _UserFileService_PageDirectory_Handler,
		},
		{
			MethodName: "listDirectory",
			Handler:    _UserFileService_ListDirectory_Handler,
		},
		{
			MethodName: "listDirectoryInteral",
			Handler:    _UserFileService_ListDirectoryInteral_Handler,
		},
		{
			MethodName: "operate",
			Handler:    _UserFileService_Operate_Handler,
		},
		{
			MethodName: "deleteByIdentity",
			Handler:    _UserFileService_DeleteByIdentity_Handler,
		},
		{
			MethodName: "moveToTrash",
			Handler:    _UserFileService_MoveToTrash_Handler,
		},
		{
			MethodName: "listTrash",
			Handler:    _UserFileService_ListTrash_Handler,
		},
		{
			MethodName: "pageTrash",
			Handler:    _UserFileService_PageTrash_Handler,
		},
		{
			MethodName: "uploadCallback",
			Handler:    _UserFileService_UploadCallback_Handler,
		},
		{
			MethodName: "tryCreateFile",
			Handler:    _UserFileService_TryCreateFile_Handler,
		},
		{
			MethodName: "rename",
			Handler:    _UserFileService_Rename_Handler,
		},
		{
			MethodName: "moveFromTrash",
			Handler:    _UserFileService_MoveFromTrash_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "file/userfile.proto",
}

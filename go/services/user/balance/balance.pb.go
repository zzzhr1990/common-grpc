// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user/balance.proto

package balance

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Balance struct {
	Identity             int64    `protobuf:"varint,1,opt,name=identity,proto3" json:"identity,omitempty"`
	SpaceUsed            int64    `protobuf:"varint,2,opt,name=spaceUsed,proto3" json:"spaceUsed,omitempty"`
	SpaceLimit           int64    `protobuf:"varint,3,opt,name=spaceLimit,proto3" json:"spaceLimit,omitempty"`
	TrafficUsed          int64    `protobuf:"varint,4,opt,name=trafficUsed,proto3" json:"trafficUsed,omitempty"`
	TrafficLimit         int64    `protobuf:"varint,5,opt,name=trafficLimit,proto3" json:"trafficLimit,omitempty"`
	OfflineTaskUsed      int64    `protobuf:"varint,6,opt,name=OfflineTaskUsed,proto3" json:"OfflineTaskUsed,omitempty"`
	OfflineTaskLimit     int64    `protobuf:"varint,7,opt,name=OfflineTaskLimit,proto3" json:"OfflineTaskLimit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Balance) Reset()         { *m = Balance{} }
func (m *Balance) String() string { return proto.CompactTextString(m) }
func (*Balance) ProtoMessage()    {}
func (*Balance) Descriptor() ([]byte, []int) {
	return fileDescriptor_419eb21cb419e954, []int{0}
}

func (m *Balance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Balance.Unmarshal(m, b)
}
func (m *Balance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Balance.Marshal(b, m, deterministic)
}
func (m *Balance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Balance.Merge(m, src)
}
func (m *Balance) XXX_Size() int {
	return xxx_messageInfo_Balance.Size(m)
}
func (m *Balance) XXX_DiscardUnknown() {
	xxx_messageInfo_Balance.DiscardUnknown(m)
}

var xxx_messageInfo_Balance proto.InternalMessageInfo

func (m *Balance) GetIdentity() int64 {
	if m != nil {
		return m.Identity
	}
	return 0
}

func (m *Balance) GetSpaceUsed() int64 {
	if m != nil {
		return m.SpaceUsed
	}
	return 0
}

func (m *Balance) GetSpaceLimit() int64 {
	if m != nil {
		return m.SpaceLimit
	}
	return 0
}

func (m *Balance) GetTrafficUsed() int64 {
	if m != nil {
		return m.TrafficUsed
	}
	return 0
}

func (m *Balance) GetTrafficLimit() int64 {
	if m != nil {
		return m.TrafficLimit
	}
	return 0
}

func (m *Balance) GetOfflineTaskUsed() int64 {
	if m != nil {
		return m.OfflineTaskUsed
	}
	return 0
}

func (m *Balance) GetOfflineTaskLimit() int64 {
	if m != nil {
		return m.OfflineTaskLimit
	}
	return 0
}

func init() {
	proto.RegisterType((*Balance)(nil), "services.Balance")
}

func init() { proto.RegisterFile("user/balance.proto", fileDescriptor_419eb21cb419e954) }

var fileDescriptor_419eb21cb419e954 = []byte{
	// 274 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xcb, 0x4b, 0xc3, 0x40,
	0x10, 0xc6, 0x8d, 0xd1, 0xb6, 0x8e, 0x05, 0xed, 0x9c, 0x42, 0x11, 0x29, 0x39, 0x15, 0xa1, 0x59,
	0x1f, 0x20, 0x04, 0x6f, 0xf5, 0x2a, 0x08, 0x46, 0x2f, 0xde, 0x92, 0xcd, 0x24, 0x5d, 0x4c, 0xb2,
	0x61, 0x77, 0x23, 0x98, 0x7f, 0x5e, 0x61, 0xd3, 0xd6, 0x68, 0x2f, 0x3d, 0xce, 0xef, 0x7b, 0x1c,
	0xbe, 0x01, 0x6c, 0x34, 0x29, 0x96, 0xc4, 0x45, 0x5c, 0x71, 0x0a, 0x6a, 0x25, 0x8d, 0xc4, 0x91,
	0x26, 0xf5, 0x29, 0x38, 0x69, 0xff, 0xdb, 0x81, 0xe1, 0xb2, 0xd3, 0x70, 0x0a, 0x23, 0x91, 0x52,
	0x65, 0x84, 0xf9, 0xf2, 0x9c, 0x99, 0x33, 0x77, 0x5f, 0xb6, 0x37, 0x5e, 0xc0, 0x89, 0xae, 0x63,
	0x4e, 0x6f, 0x9a, 0x52, 0xef, 0xd0, 0x8a, 0xbf, 0x00, 0x2f, 0x01, 0xec, 0xf1, 0x24, 0x4a, 0x61,
	0x3c, 0xd7, 0xca, 0x3d, 0x82, 0x33, 0x38, 0x35, 0x2a, 0xce, 0x32, 0xc1, 0x6d, 0xfe, 0xc8, 0x1a,
	0xfa, 0x08, 0x7d, 0x18, 0xaf, 0xcf, 0xae, 0xe3, 0xd8, 0x5a, 0xfe, 0x30, 0x9c, 0xc3, 0xd9, 0x73,
	0x96, 0x15, 0xa2, 0xa2, 0xd7, 0x58, 0x7f, 0xd8, 0xa6, 0x81, 0xb5, 0xfd, 0xc7, 0x78, 0x05, 0xe7,
	0x3d, 0xd4, 0x35, 0x0e, 0xad, 0x75, 0x87, 0xdf, 0xb6, 0x30, 0x79, 0x2c, 0x64, 0x93, 0x46, 0x46,
	0x2a, 0x8a, 0xba, 0x5d, 0x70, 0x01, 0x6e, 0x4e, 0x06, 0x27, 0xc1, 0x66, 0xa8, 0x60, 0x3d, 0xd2,
	0x74, 0x17, 0xf9, 0x07, 0x78, 0x0f, 0x63, 0x4d, 0x26, 0xda, 0xee, 0xb1, 0x67, 0x6e, 0xf9, 0xf0,
	0x1e, 0xe6, 0xc2, 0xac, 0x9a, 0x24, 0xe0, 0xb2, 0x64, 0x6d, 0xdb, 0xae, 0xd4, 0x4d, 0x18, 0x5e,
	0x33, 0x2e, 0xcb, 0x52, 0x56, 0x8b, 0x5c, 0xd5, 0x9c, 0xe5, 0x92, 0x6d, 0x92, 0xac, 0xff, 0xca,
	0x64, 0x60, 0x7f, 0x79, 0xf7, 0x13, 0x00, 0x00, 0xff, 0xff, 0x4a, 0x94, 0x55, 0xde, 0xe1, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CloudStoreServiceClient is the client API for CloudStoreService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CloudStoreServiceClient interface {
	Get(ctx context.Context, in *Balance, opts ...grpc.CallOption) (*Balance, error)
	SetSpaceUsed(ctx context.Context, in *Balance, opts ...grpc.CallOption) (*Balance, error)
}

type cloudStoreServiceClient struct {
	cc *grpc.ClientConn
}

func NewCloudStoreServiceClient(cc *grpc.ClientConn) CloudStoreServiceClient {
	return &cloudStoreServiceClient{cc}
}

func (c *cloudStoreServiceClient) Get(ctx context.Context, in *Balance, opts ...grpc.CallOption) (*Balance, error) {
	out := new(Balance)
	err := c.cc.Invoke(ctx, "/services.CloudStoreService/get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudStoreServiceClient) SetSpaceUsed(ctx context.Context, in *Balance, opts ...grpc.CallOption) (*Balance, error) {
	out := new(Balance)
	err := c.cc.Invoke(ctx, "/services.CloudStoreService/setSpaceUsed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CloudStoreServiceServer is the server API for CloudStoreService service.
type CloudStoreServiceServer interface {
	Get(context.Context, *Balance) (*Balance, error)
	SetSpaceUsed(context.Context, *Balance) (*Balance, error)
}

// UnimplementedCloudStoreServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCloudStoreServiceServer struct {
}

func (*UnimplementedCloudStoreServiceServer) Get(ctx context.Context, req *Balance) (*Balance, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedCloudStoreServiceServer) SetSpaceUsed(ctx context.Context, req *Balance) (*Balance, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetSpaceUsed not implemented")
}

func RegisterCloudStoreServiceServer(s *grpc.Server, srv CloudStoreServiceServer) {
	s.RegisterService(&_CloudStoreService_serviceDesc, srv)
}

func _CloudStoreService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Balance)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudStoreServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.CloudStoreService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudStoreServiceServer).Get(ctx, req.(*Balance))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudStoreService_SetSpaceUsed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Balance)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudStoreServiceServer).SetSpaceUsed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.CloudStoreService/SetSpaceUsed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudStoreServiceServer).SetSpaceUsed(ctx, req.(*Balance))
	}
	return interceptor(ctx, in, info, handler)
}

var _CloudStoreService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.CloudStoreService",
	HandlerType: (*CloudStoreServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "get",
			Handler:    _CloudStoreService_Get_Handler,
		},
		{
			MethodName: "setSpaceUsed",
			Handler:    _CloudStoreService_SetSpaceUsed_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user/balance.proto",
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user/info.proto

package info

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User struct {
	Identity             int64    `protobuf:"varint,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Salt                 string   `protobuf:"bytes,4,opt,name=salt,proto3" json:"salt,omitempty"`
	CountryCode          string   `protobuf:"bytes,5,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	Phone                string   `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	Email                string   `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	CreateTime           int64    `protobuf:"varint,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	CreateAddr           string   `protobuf:"bytes,9,opt,name=create_addr,json=createAddr,proto3" json:"create_addr,omitempty"`
	Icon                 string   `protobuf:"bytes,10,opt,name=icon,proto3" json:"icon,omitempty"`
	SpaceUsed            int64    `protobuf:"varint,11,opt,name=space_used,json=spaceUsed,proto3" json:"space_used,omitempty"`
	SpaceCapacity        int64    `protobuf:"varint,12,opt,name=space_capacity,json=spaceCapacity,proto3" json:"space_capacity,omitempty"`
	Type                 int32    `protobuf:"varint,13,opt,name=type,proto3" json:"type,omitempty"`
	Status               int32    `protobuf:"varint,14,opt,name=status,proto3" json:"status,omitempty"`
	Version              int32    `protobuf:"varint,15,opt,name=version,proto3" json:"version,omitempty"`
	Vip                  int32    `protobuf:"varint,16,opt,name=vip,proto3" json:"vip,omitempty"`
	VipExpireTime        int64    `protobuf:"varint,17,opt,name=vip_expire_time,json=vipExpireTime,proto3" json:"vip_expire_time,omitempty"`
	LastActivateTime     int64    `protobuf:"varint,18,opt,name=last_activate_time,json=lastActivateTime,proto3" json:"last_activate_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_e397bf9a47fd544a, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetIdentity() int64 {
	if m != nil {
		return m.Identity
	}
	return 0
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetSalt() string {
	if m != nil {
		return m.Salt
	}
	return ""
}

func (m *User) GetCountryCode() string {
	if m != nil {
		return m.CountryCode
	}
	return ""
}

func (m *User) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *User) GetCreateAddr() string {
	if m != nil {
		return m.CreateAddr
	}
	return ""
}

func (m *User) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *User) GetSpaceUsed() int64 {
	if m != nil {
		return m.SpaceUsed
	}
	return 0
}

func (m *User) GetSpaceCapacity() int64 {
	if m != nil {
		return m.SpaceCapacity
	}
	return 0
}

func (m *User) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *User) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *User) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *User) GetVip() int32 {
	if m != nil {
		return m.Vip
	}
	return 0
}

func (m *User) GetVipExpireTime() int64 {
	if m != nil {
		return m.VipExpireTime
	}
	return 0
}

func (m *User) GetLastActivateTime() int64 {
	if m != nil {
		return m.LastActivateTime
	}
	return 0
}

type OauthInfo struct {
	AccessToken          string   `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	RefreshToken         string   `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	ExpiresIn            int64    `protobuf:"varint,3,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	UserId               int64    `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Scope                string   `protobuf:"bytes,5,opt,name=scope,proto3" json:"scope,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OauthInfo) Reset()         { *m = OauthInfo{} }
func (m *OauthInfo) String() string { return proto.CompactTextString(m) }
func (*OauthInfo) ProtoMessage()    {}
func (*OauthInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e397bf9a47fd544a, []int{1}
}

func (m *OauthInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OauthInfo.Unmarshal(m, b)
}
func (m *OauthInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OauthInfo.Marshal(b, m, deterministic)
}
func (m *OauthInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OauthInfo.Merge(m, src)
}
func (m *OauthInfo) XXX_Size() int {
	return xxx_messageInfo_OauthInfo.Size(m)
}
func (m *OauthInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_OauthInfo.DiscardUnknown(m)
}

var xxx_messageInfo_OauthInfo proto.InternalMessageInfo

func (m *OauthInfo) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *OauthInfo) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *OauthInfo) GetExpiresIn() int64 {
	if m != nil {
		return m.ExpiresIn
	}
	return 0
}

func (m *OauthInfo) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *OauthInfo) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

type SmsRequest struct {
	CountryCode          string   `protobuf:"bytes,1,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	Phone                string   `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	Type                 int32    `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	ExpireInMs           int64    `protobuf:"varint,4,opt,name=expire_in_ms,json=expireInMs,proto3" json:"expire_in_ms,omitempty"`
	Tpl                  string   `protobuf:"bytes,5,opt,name=tpl,proto3" json:"tpl,omitempty"`
	Params               []string `protobuf:"bytes,6,rep,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SmsRequest) Reset()         { *m = SmsRequest{} }
func (m *SmsRequest) String() string { return proto.CompactTextString(m) }
func (*SmsRequest) ProtoMessage()    {}
func (*SmsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e397bf9a47fd544a, []int{2}
}

func (m *SmsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SmsRequest.Unmarshal(m, b)
}
func (m *SmsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SmsRequest.Marshal(b, m, deterministic)
}
func (m *SmsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SmsRequest.Merge(m, src)
}
func (m *SmsRequest) XXX_Size() int {
	return xxx_messageInfo_SmsRequest.Size(m)
}
func (m *SmsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SmsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SmsRequest proto.InternalMessageInfo

func (m *SmsRequest) GetCountryCode() string {
	if m != nil {
		return m.CountryCode
	}
	return ""
}

func (m *SmsRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *SmsRequest) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *SmsRequest) GetExpireInMs() int64 {
	if m != nil {
		return m.ExpireInMs
	}
	return 0
}

func (m *SmsRequest) GetTpl() string {
	if m != nil {
		return m.Tpl
	}
	return ""
}

func (m *SmsRequest) GetParams() []string {
	if m != nil {
		return m.Params
	}
	return nil
}

type SmsResponse struct {
	Session              string   `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	Type                 int32    `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	ExpireTime           int64    `protobuf:"varint,3,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SmsResponse) Reset()         { *m = SmsResponse{} }
func (m *SmsResponse) String() string { return proto.CompactTextString(m) }
func (*SmsResponse) ProtoMessage()    {}
func (*SmsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e397bf9a47fd544a, []int{3}
}

func (m *SmsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SmsResponse.Unmarshal(m, b)
}
func (m *SmsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SmsResponse.Marshal(b, m, deterministic)
}
func (m *SmsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SmsResponse.Merge(m, src)
}
func (m *SmsResponse) XXX_Size() int {
	return xxx_messageInfo_SmsResponse.Size(m)
}
func (m *SmsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SmsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SmsResponse proto.InternalMessageInfo

func (m *SmsResponse) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

func (m *SmsResponse) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *SmsResponse) GetExpireTime() int64 {
	if m != nil {
		return m.ExpireTime
	}
	return 0
}

type SmsValidateRequest struct {
	Session              string   `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	Code                 string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SmsValidateRequest) Reset()         { *m = SmsValidateRequest{} }
func (m *SmsValidateRequest) String() string { return proto.CompactTextString(m) }
func (*SmsValidateRequest) ProtoMessage()    {}
func (*SmsValidateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e397bf9a47fd544a, []int{4}
}

func (m *SmsValidateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SmsValidateRequest.Unmarshal(m, b)
}
func (m *SmsValidateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SmsValidateRequest.Marshal(b, m, deterministic)
}
func (m *SmsValidateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SmsValidateRequest.Merge(m, src)
}
func (m *SmsValidateRequest) XXX_Size() int {
	return xxx_messageInfo_SmsValidateRequest.Size(m)
}
func (m *SmsValidateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SmsValidateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SmsValidateRequest proto.InternalMessageInfo

func (m *SmsValidateRequest) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

func (m *SmsValidateRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type SmsValidateResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Left                 int32    `protobuf:"varint,2,opt,name=left,proto3" json:"left,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SmsValidateResponse) Reset()         { *m = SmsValidateResponse{} }
func (m *SmsValidateResponse) String() string { return proto.CompactTextString(m) }
func (*SmsValidateResponse) ProtoMessage()    {}
func (*SmsValidateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e397bf9a47fd544a, []int{5}
}

func (m *SmsValidateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SmsValidateResponse.Unmarshal(m, b)
}
func (m *SmsValidateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SmsValidateResponse.Marshal(b, m, deterministic)
}
func (m *SmsValidateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SmsValidateResponse.Merge(m, src)
}
func (m *SmsValidateResponse) XXX_Size() int {
	return xxx_messageInfo_SmsValidateResponse.Size(m)
}
func (m *SmsValidateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SmsValidateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SmsValidateResponse proto.InternalMessageInfo

func (m *SmsValidateResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *SmsValidateResponse) GetLeft() int32 {
	if m != nil {
		return m.Left
	}
	return 0
}

type Log struct {
	Identity             int64    `protobuf:"varint,1,opt,name=identity,proto3" json:"identity,omitempty"`
	UserIdentity         int64    `protobuf:"varint,2,opt,name=user_identity,json=userIdentity,proto3" json:"user_identity,omitempty"`
	Device               string   `protobuf:"bytes,4,opt,name=device,proto3" json:"device,omitempty"`
	Country              string   `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`
	CountryCode          string   `protobuf:"bytes,6,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	Province             string   `protobuf:"bytes,7,opt,name=province,proto3" json:"province,omitempty"`
	City                 string   `protobuf:"bytes,8,opt,name=city,proto3" json:"city,omitempty"`
	CityCode             string   `protobuf:"bytes,9,opt,name=city_code,json=cityCode,proto3" json:"city_code,omitempty"`
	Isp                  string   `protobuf:"bytes,10,opt,name=isp,proto3" json:"isp,omitempty"`
	CreateAddr           string   `protobuf:"bytes,11,opt,name=create_addr,json=createAddr,proto3" json:"create_addr,omitempty"`
	CreateTime           int64    `protobuf:"varint,12,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Type                 int32    `protobuf:"varint,13,opt,name=type,proto3" json:"type,omitempty"`
	Info                 string   `protobuf:"bytes,14,opt,name=info,proto3" json:"info,omitempty"`
	Level                int32    `protobuf:"varint,15,opt,name=level,proto3" json:"level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Log) Reset()         { *m = Log{} }
func (m *Log) String() string { return proto.CompactTextString(m) }
func (*Log) ProtoMessage()    {}
func (*Log) Descriptor() ([]byte, []int) {
	return fileDescriptor_e397bf9a47fd544a, []int{6}
}

func (m *Log) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Log.Unmarshal(m, b)
}
func (m *Log) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Log.Marshal(b, m, deterministic)
}
func (m *Log) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Log.Merge(m, src)
}
func (m *Log) XXX_Size() int {
	return xxx_messageInfo_Log.Size(m)
}
func (m *Log) XXX_DiscardUnknown() {
	xxx_messageInfo_Log.DiscardUnknown(m)
}

var xxx_messageInfo_Log proto.InternalMessageInfo

func (m *Log) GetIdentity() int64 {
	if m != nil {
		return m.Identity
	}
	return 0
}

func (m *Log) GetUserIdentity() int64 {
	if m != nil {
		return m.UserIdentity
	}
	return 0
}

func (m *Log) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *Log) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Log) GetCountryCode() string {
	if m != nil {
		return m.CountryCode
	}
	return ""
}

func (m *Log) GetProvince() string {
	if m != nil {
		return m.Province
	}
	return ""
}

func (m *Log) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Log) GetCityCode() string {
	if m != nil {
		return m.CityCode
	}
	return ""
}

func (m *Log) GetIsp() string {
	if m != nil {
		return m.Isp
	}
	return ""
}

func (m *Log) GetCreateAddr() string {
	if m != nil {
		return m.CreateAddr
	}
	return ""
}

func (m *Log) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *Log) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Log) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

func (m *Log) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

type Balance struct {
	Identity             int64    `protobuf:"varint,1,opt,name=identity,proto3" json:"identity,omitempty"`
	SpaceUsed            int64    `protobuf:"varint,2,opt,name=space_used,json=spaceUsed,proto3" json:"space_used,omitempty"`
	SpaceLimit           int64    `protobuf:"varint,3,opt,name=space_limit,json=spaceLimit,proto3" json:"space_limit,omitempty"`
	TrafficUsed          int64    `protobuf:"varint,4,opt,name=traffic_used,json=trafficUsed,proto3" json:"traffic_used,omitempty"`
	TrafficLimit         int64    `protobuf:"varint,5,opt,name=traffic_limit,json=trafficLimit,proto3" json:"traffic_limit,omitempty"`
	OfflineTaskUsed      int64    `protobuf:"varint,6,opt,name=offline_task_used,json=offlineTaskUsed,proto3" json:"offline_task_used,omitempty"`
	OfflineTaskLimit     int64    `protobuf:"varint,7,opt,name=offline_task_limit,json=offlineTaskLimit,proto3" json:"offline_task_limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Balance) Reset()         { *m = Balance{} }
func (m *Balance) String() string { return proto.CompactTextString(m) }
func (*Balance) ProtoMessage()    {}
func (*Balance) Descriptor() ([]byte, []int) {
	return fileDescriptor_e397bf9a47fd544a, []int{7}
}

func (m *Balance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Balance.Unmarshal(m, b)
}
func (m *Balance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Balance.Marshal(b, m, deterministic)
}
func (m *Balance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Balance.Merge(m, src)
}
func (m *Balance) XXX_Size() int {
	return xxx_messageInfo_Balance.Size(m)
}
func (m *Balance) XXX_DiscardUnknown() {
	xxx_messageInfo_Balance.DiscardUnknown(m)
}

var xxx_messageInfo_Balance proto.InternalMessageInfo

func (m *Balance) GetIdentity() int64 {
	if m != nil {
		return m.Identity
	}
	return 0
}

func (m *Balance) GetSpaceUsed() int64 {
	if m != nil {
		return m.SpaceUsed
	}
	return 0
}

func (m *Balance) GetSpaceLimit() int64 {
	if m != nil {
		return m.SpaceLimit
	}
	return 0
}

func (m *Balance) GetTrafficUsed() int64 {
	if m != nil {
		return m.TrafficUsed
	}
	return 0
}

func (m *Balance) GetTrafficLimit() int64 {
	if m != nil {
		return m.TrafficLimit
	}
	return 0
}

func (m *Balance) GetOfflineTaskUsed() int64 {
	if m != nil {
		return m.OfflineTaskUsed
	}
	return 0
}

func (m *Balance) GetOfflineTaskLimit() int64 {
	if m != nil {
		return m.OfflineTaskLimit
	}
	return 0
}

type ChangePasswordRequest struct {
	Identity             int64    `protobuf:"varint,1,opt,name=identity,proto3" json:"identity,omitempty"`
	OldPassword          string   `protobuf:"bytes,2,opt,name=old_password,json=oldPassword,proto3" json:"old_password,omitempty"`
	NewPassword          string   `protobuf:"bytes,3,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangePasswordRequest) Reset()         { *m = ChangePasswordRequest{} }
func (m *ChangePasswordRequest) String() string { return proto.CompactTextString(m) }
func (*ChangePasswordRequest) ProtoMessage()    {}
func (*ChangePasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e397bf9a47fd544a, []int{8}
}

func (m *ChangePasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangePasswordRequest.Unmarshal(m, b)
}
func (m *ChangePasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangePasswordRequest.Marshal(b, m, deterministic)
}
func (m *ChangePasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangePasswordRequest.Merge(m, src)
}
func (m *ChangePasswordRequest) XXX_Size() int {
	return xxx_messageInfo_ChangePasswordRequest.Size(m)
}
func (m *ChangePasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangePasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangePasswordRequest proto.InternalMessageInfo

func (m *ChangePasswordRequest) GetIdentity() int64 {
	if m != nil {
		return m.Identity
	}
	return 0
}

func (m *ChangePasswordRequest) GetOldPassword() string {
	if m != nil {
		return m.OldPassword
	}
	return ""
}

func (m *ChangePasswordRequest) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

type SmsChangePasswordRequest struct {
	Session              string   `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	Code                 string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	NewPassword          string   `protobuf:"bytes,3,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SmsChangePasswordRequest) Reset()         { *m = SmsChangePasswordRequest{} }
func (m *SmsChangePasswordRequest) String() string { return proto.CompactTextString(m) }
func (*SmsChangePasswordRequest) ProtoMessage()    {}
func (*SmsChangePasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e397bf9a47fd544a, []int{9}
}

func (m *SmsChangePasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SmsChangePasswordRequest.Unmarshal(m, b)
}
func (m *SmsChangePasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SmsChangePasswordRequest.Marshal(b, m, deterministic)
}
func (m *SmsChangePasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SmsChangePasswordRequest.Merge(m, src)
}
func (m *SmsChangePasswordRequest) XXX_Size() int {
	return xxx_messageInfo_SmsChangePasswordRequest.Size(m)
}
func (m *SmsChangePasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SmsChangePasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SmsChangePasswordRequest proto.InternalMessageInfo

func (m *SmsChangePasswordRequest) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

func (m *SmsChangePasswordRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *SmsChangePasswordRequest) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

type SmsCreateRequest struct {
	Session              string   `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	Code                 string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Email                string   `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Name                 string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	CreateAddr           string   `protobuf:"bytes,6,opt,name=create_addr,json=createAddr,proto3" json:"create_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SmsCreateRequest) Reset()         { *m = SmsCreateRequest{} }
func (m *SmsCreateRequest) String() string { return proto.CompactTextString(m) }
func (*SmsCreateRequest) ProtoMessage()    {}
func (*SmsCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e397bf9a47fd544a, []int{10}
}

func (m *SmsCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SmsCreateRequest.Unmarshal(m, b)
}
func (m *SmsCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SmsCreateRequest.Marshal(b, m, deterministic)
}
func (m *SmsCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SmsCreateRequest.Merge(m, src)
}
func (m *SmsCreateRequest) XXX_Size() int {
	return xxx_messageInfo_SmsCreateRequest.Size(m)
}
func (m *SmsCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SmsCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SmsCreateRequest proto.InternalMessageInfo

func (m *SmsCreateRequest) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

func (m *SmsCreateRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *SmsCreateRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *SmsCreateRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *SmsCreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SmsCreateRequest) GetCreateAddr() string {
	if m != nil {
		return m.CreateAddr
	}
	return ""
}

type ThirdPartyLoginInfo struct {
	OpenId               string   `protobuf:"bytes,1,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
	Type                 int64    `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	UserIdentity         int64    `protobuf:"varint,3,opt,name=user_identity,json=userIdentity,proto3" json:"user_identity,omitempty"`
	AccessKey            string   `protobuf:"bytes,4,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`
	RefreshKey           string   `protobuf:"bytes,5,opt,name=refresh_key,json=refreshKey,proto3" json:"refresh_key,omitempty"`
	LastActiveTime       int64    `protobuf:"varint,6,opt,name=last_active_time,json=lastActiveTime,proto3" json:"last_active_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThirdPartyLoginInfo) Reset()         { *m = ThirdPartyLoginInfo{} }
func (m *ThirdPartyLoginInfo) String() string { return proto.CompactTextString(m) }
func (*ThirdPartyLoginInfo) ProtoMessage()    {}
func (*ThirdPartyLoginInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e397bf9a47fd544a, []int{11}
}

func (m *ThirdPartyLoginInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThirdPartyLoginInfo.Unmarshal(m, b)
}
func (m *ThirdPartyLoginInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThirdPartyLoginInfo.Marshal(b, m, deterministic)
}
func (m *ThirdPartyLoginInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThirdPartyLoginInfo.Merge(m, src)
}
func (m *ThirdPartyLoginInfo) XXX_Size() int {
	return xxx_messageInfo_ThirdPartyLoginInfo.Size(m)
}
func (m *ThirdPartyLoginInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ThirdPartyLoginInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ThirdPartyLoginInfo proto.InternalMessageInfo

func (m *ThirdPartyLoginInfo) GetOpenId() string {
	if m != nil {
		return m.OpenId
	}
	return ""
}

func (m *ThirdPartyLoginInfo) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ThirdPartyLoginInfo) GetUserIdentity() int64 {
	if m != nil {
		return m.UserIdentity
	}
	return 0
}

func (m *ThirdPartyLoginInfo) GetAccessKey() string {
	if m != nil {
		return m.AccessKey
	}
	return ""
}

func (m *ThirdPartyLoginInfo) GetRefreshKey() string {
	if m != nil {
		return m.RefreshKey
	}
	return ""
}

func (m *ThirdPartyLoginInfo) GetLastActiveTime() int64 {
	if m != nil {
		return m.LastActiveTime
	}
	return 0
}

func init() {
	proto.RegisterType((*User)(nil), "services.User")
	proto.RegisterType((*OauthInfo)(nil), "services.OauthInfo")
	proto.RegisterType((*SmsRequest)(nil), "services.SmsRequest")
	proto.RegisterType((*SmsResponse)(nil), "services.SmsResponse")
	proto.RegisterType((*SmsValidateRequest)(nil), "services.SmsValidateRequest")
	proto.RegisterType((*SmsValidateResponse)(nil), "services.SmsValidateResponse")
	proto.RegisterType((*Log)(nil), "services.Log")
	proto.RegisterType((*Balance)(nil), "services.Balance")
	proto.RegisterType((*ChangePasswordRequest)(nil), "services.ChangePasswordRequest")
	proto.RegisterType((*SmsChangePasswordRequest)(nil), "services.SmsChangePasswordRequest")
	proto.RegisterType((*SmsCreateRequest)(nil), "services.SmsCreateRequest")
	proto.RegisterType((*ThirdPartyLoginInfo)(nil), "services.ThirdPartyLoginInfo")
}

func init() { proto.RegisterFile("user/info.proto", fileDescriptor_e397bf9a47fd544a) }

var fileDescriptor_e397bf9a47fd544a = []byte{
	// 1284 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x57, 0xed, 0x8e, 0xdb, 0x44,
	0x17, 0x6e, 0xe2, 0x8d, 0x93, 0x1c, 0x67, 0x77, 0xb3, 0xb3, 0xfd, 0xb0, 0xf6, 0x7d, 0x57, 0xbb,
	0x75, 0x05, 0x2c, 0xa5, 0x6c, 0xf8, 0x90, 0x50, 0x8b, 0x04, 0xa8, 0x1b, 0x28, 0x44, 0x2c, 0x6a,
	0x95, 0x6c, 0xf9, 0x81, 0x90, 0xac, 0xa9, 0x3d, 0x49, 0x46, 0xb1, 0x67, 0x8c, 0xc7, 0x49, 0x49,
	0x6f, 0x80, 0xeb, 0xe0, 0x07, 0xe2, 0x7a, 0xb8, 0x0b, 0xae, 0x81, 0x3f, 0xa0, 0xf9, 0xb0, 0xd7,
	0xf9, 0x20, 0x4a, 0xe9, 0xaf, 0xcc, 0x79, 0xe6, 0x99, 0x33, 0x67, 0xe6, 0x9c, 0x79, 0x8e, 0x03,
	0xfb, 0x53, 0x41, 0xd2, 0x0e, 0x65, 0x43, 0x7e, 0x9e, 0xa4, 0x3c, 0xe3, 0xa8, 0x21, 0x48, 0x3a,
	0xa3, 0x01, 0x11, 0xde, 0xdf, 0x16, 0xec, 0x3c, 0x17, 0x24, 0x45, 0x47, 0xd0, 0xa0, 0x21, 0x61,
	0x19, 0xcd, 0xe6, 0x6e, 0xe5, 0xb4, 0x72, 0x66, 0xf5, 0x0b, 0x1b, 0x21, 0xd8, 0x61, 0x38, 0x26,
	0x6e, 0xf5, 0xb4, 0x72, 0xd6, 0xec, 0xab, 0xb1, 0xe4, 0x27, 0x58, 0x88, 0x97, 0x3c, 0x0d, 0x5d,
	0x4b, 0xe1, 0x85, 0x2d, 0xf9, 0x02, 0x47, 0x99, 0xbb, 0xa3, 0xf9, 0x72, 0x8c, 0xee, 0x42, 0x2b,
	0xe0, 0x53, 0x96, 0xa5, 0x73, 0x3f, 0xe0, 0x21, 0x71, 0x6b, 0x6a, 0xce, 0x31, 0x58, 0x97, 0x87,
	0x04, 0xdd, 0x84, 0x5a, 0x32, 0xe6, 0x8c, 0xb8, 0xb6, 0x9a, 0xd3, 0x86, 0x44, 0x49, 0x8c, 0x69,
	0xe4, 0xd6, 0x35, 0xaa, 0x0c, 0x74, 0x02, 0x4e, 0x90, 0x12, 0x9c, 0x11, 0x3f, 0xa3, 0x31, 0x71,
	0x1b, 0x2a, 0x62, 0xd0, 0xd0, 0x15, 0x8d, 0x49, 0x89, 0x80, 0xc3, 0x30, 0x75, 0x9b, 0x6a, 0xb1,
	0x21, 0x3c, 0x0e, 0xc3, 0x54, 0x06, 0x49, 0x03, 0xce, 0x5c, 0xd0, 0x41, 0xca, 0x31, 0x3a, 0x06,
	0x10, 0x09, 0x0e, 0x88, 0x3f, 0x15, 0x24, 0x74, 0x1d, 0xe5, 0xb4, 0xa9, 0x90, 0xe7, 0x82, 0x84,
	0xe8, 0x2d, 0xd8, 0xd3, 0xd3, 0x01, 0x4e, 0x70, 0x20, 0x6f, 0xaa, 0xa5, 0x28, 0xbb, 0x0a, 0xed,
	0x1a, 0x50, 0x7a, 0xce, 0xe6, 0x09, 0x71, 0x77, 0x4f, 0x2b, 0x67, 0xb5, 0xbe, 0x1a, 0xa3, 0xdb,
	0x60, 0x8b, 0x0c, 0x67, 0x53, 0xe1, 0xee, 0x29, 0xd4, 0x58, 0xc8, 0x85, 0xfa, 0x8c, 0xa4, 0x82,
	0x72, 0xe6, 0xee, 0xab, 0x89, 0xdc, 0x44, 0x6d, 0xb0, 0x66, 0x34, 0x71, 0xdb, 0x0a, 0x95, 0x43,
	0xf4, 0x36, 0xec, 0xcf, 0x68, 0xe2, 0x93, 0x9f, 0x13, 0x9a, 0x9a, 0x73, 0x1f, 0xe8, 0xfd, 0x67,
	0x34, 0xf9, 0x4a, 0xa1, 0xea, 0xe8, 0x0f, 0x00, 0x45, 0x58, 0x64, 0x3e, 0x0e, 0x32, 0x3a, 0x2b,
	0xae, 0x08, 0x29, 0x6a, 0x5b, 0xce, 0x3c, 0x36, 0x13, 0x92, 0xed, 0xfd, 0x5a, 0x81, 0xe6, 0x53,
	0x3c, 0xcd, 0xc6, 0x3d, 0x36, 0xe4, 0x32, 0x4d, 0x38, 0x08, 0x88, 0x10, 0x7e, 0xc6, 0x27, 0x84,
	0xa9, 0x52, 0x68, 0xf6, 0x1d, 0x8d, 0x5d, 0x49, 0x08, 0xdd, 0x83, 0xdd, 0x94, 0x0c, 0x53, 0x22,
	0xc6, 0x86, 0xa3, 0xcb, 0xa2, 0x65, 0x40, 0x4d, 0x3a, 0x06, 0xd0, 0x71, 0x0a, 0x9f, 0x32, 0x55,
	0x20, 0x56, 0xbf, 0x69, 0x90, 0x1e, 0x43, 0x77, 0xa0, 0x2e, 0x6b, 0xd2, 0xa7, 0xa1, 0x2a, 0x12,
	0xab, 0x6f, 0x4b, 0xb3, 0x17, 0xca, 0x6c, 0x8b, 0x80, 0x27, 0x79, 0x7d, 0x68, 0xc3, 0xfb, 0xad,
	0x02, 0x30, 0x88, 0x45, 0x9f, 0xfc, 0x34, 0x25, 0x62, 0xb5, 0x96, 0x2a, 0x1b, 0x6a, 0xa9, 0x5a,
	0xae, 0xa5, 0x3c, 0x33, 0x56, 0x29, 0x33, 0xa7, 0xd0, 0x32, 0x37, 0x4a, 0x99, 0x1f, 0x0b, 0x13,
	0x8f, 0x89, 0xbe, 0xc7, 0xbe, 0x13, 0x32, 0x13, 0x59, 0x12, 0x99, 0x88, 0xe4, 0x50, 0x66, 0x33,
	0xc1, 0x29, 0x8e, 0x85, 0x6b, 0x9f, 0x5a, 0x67, 0xcd, 0xbe, 0xb1, 0xbc, 0x1f, 0xc1, 0x51, 0x61,
	0x8a, 0x84, 0x33, 0x41, 0x64, 0x72, 0x05, 0x11, 0x2a, 0xb9, 0x3a, 0xc4, 0xdc, 0x2c, 0x02, 0xa9,
	0x96, 0x02, 0x39, 0x01, 0xa7, 0x9c, 0x5a, 0xab, 0x1c, 0x87, 0xca, 0xd4, 0x05, 0xa0, 0x41, 0x2c,
	0xbe, 0xc7, 0x11, 0x0d, 0x71, 0x46, 0xf2, 0xcb, 0xd8, 0xb8, 0x89, 0xba, 0x1e, 0xf3, 0x6c, 0xe5,
	0xd8, 0xeb, 0xc2, 0xe1, 0x82, 0x8f, 0x52, 0xa4, 0x53, 0x95, 0x63, 0xe5, 0xa4, 0xd1, 0xcf, 0x4d,
	0xe9, 0x24, 0x22, 0xc3, 0x2c, 0x8f, 0x54, 0x8e, 0xbd, 0xbf, 0xaa, 0x60, 0x5d, 0xf2, 0xd1, 0x46,
	0xcd, 0xb8, 0x07, 0xbb, 0x26, 0xc3, 0x86, 0x50, 0x55, 0x84, 0x96, 0xce, 0xb3, 0x21, 0xdd, 0x06,
	0x3b, 0x24, 0x52, 0x88, 0x8c, 0x54, 0x18, 0x4b, 0x86, 0x63, 0x92, 0x69, 0x6e, 0x3d, 0x37, 0x57,
	0x52, 0x6f, 0xaf, 0xa6, 0x5e, 0x2a, 0x53, 0xca, 0x67, 0x94, 0x05, 0xc4, 0x68, 0x46, 0x61, 0xab,
	0x2b, 0x91, 0xc1, 0x34, 0xcc, 0x95, 0xc8, 0x20, 0xfe, 0x07, 0x4d, 0xf9, 0xab, 0xfd, 0x69, 0x9d,
	0x68, 0x48, 0x40, 0x39, 0x6b, 0x83, 0x45, 0x45, 0x62, 0x44, 0x42, 0x0e, 0x97, 0x85, 0xc5, 0x59,
	0x11, 0x96, 0x25, 0x69, 0x6a, 0xad, 0x48, 0xd3, 0x3a, 0x7d, 0x90, 0x6a, 0xc4, 0x86, 0x5c, 0xa9,
	0x83, 0x54, 0x23, 0xf9, 0x16, 0x6f, 0x42, 0x2d, 0x22, 0x33, 0x12, 0x19, 0x65, 0xd0, 0x86, 0xf7,
	0x4b, 0x15, 0xea, 0x17, 0x38, 0xc2, 0xf2, 0x38, 0x9b, 0x12, 0xb0, 0xa8, 0x65, 0xd5, 0x65, 0x2d,
	0x3b, 0x01, 0x47, 0x4f, 0x47, 0x34, 0xa6, 0x59, 0x5e, 0x6d, 0x0a, 0xba, 0x94, 0x88, 0xbc, 0xe9,
	0x2c, 0xc5, 0xc3, 0x21, 0x0d, 0xb4, 0x07, 0xfd, 0x2e, 0x1c, 0x83, 0x29, 0x1f, 0xf7, 0x60, 0x37,
	0xa7, 0x68, 0x2f, 0x35, 0x9d, 0x63, 0x03, 0x6a, 0x3f, 0xf7, 0xe1, 0x80, 0x0f, 0x87, 0x11, 0x65,
	0xc4, 0xcf, 0xb0, 0x98, 0x68, 0x67, 0xb6, 0x22, 0xee, 0x9b, 0x89, 0x2b, 0x2c, 0x26, 0xca, 0xe1,
	0x03, 0x40, 0x0b, 0x5c, 0xed, 0xb5, 0xae, 0x95, 0xab, 0x44, 0x56, 0x9e, 0xbd, 0x39, 0xdc, 0xea,
	0x8e, 0x31, 0x1b, 0x91, 0x67, 0xa6, 0xf1, 0xe4, 0x4f, 0x62, 0xd3, 0xb5, 0xdc, 0x85, 0x16, 0x8f,
	0x42, 0xbf, 0xe8, 0x5d, 0xfa, 0x71, 0x38, 0x3c, 0x0a, 0x73, 0x2f, 0x92, 0xc2, 0xc8, 0x4b, 0x7f,
	0xa9, 0xbd, 0x39, 0x8c, 0xbc, 0xcc, 0x29, 0xde, 0x04, 0xdc, 0x41, 0x2c, 0xd6, 0xef, 0xfe, 0x5a,
	0x0f, 0x72, 0x9b, 0xcd, 0x7e, 0xaf, 0x40, 0x5b, 0xee, 0xa6, 0x2a, 0xe8, 0xbf, 0xed, 0xb2, 0xa9,
	0x5b, 0x17, 0x0d, 0x76, 0xa7, 0xdc, 0x60, 0xf3, 0x9e, 0x5f, 0x2b, 0xf5, 0xfc, 0xa5, 0xd2, 0xb7,
	0x97, 0x4b, 0xdf, 0xfb, 0xa3, 0x02, 0x87, 0x57, 0x63, 0x9a, 0x86, 0xcf, 0x70, 0x9a, 0xcd, 0x2f,
	0xf9, 0x88, 0x32, 0xd5, 0x55, 0xee, 0x40, 0x9d, 0x27, 0x84, 0x49, 0xb9, 0xd7, 0xc1, 0xda, 0xd2,
	0xec, 0x85, 0x0b, 0x3a, 0x68, 0x99, 0xa7, 0xb0, 0xa2, 0x1c, 0xd6, 0x1a, 0xe5, 0x38, 0x06, 0x30,
	0x7d, 0x6a, 0x42, 0xe6, 0x26, 0xf2, 0xa6, 0x46, 0xbe, 0x25, 0x73, 0x19, 0x69, 0xde, 0xa3, 0xe4,
	0xbc, 0x3e, 0x04, 0x18, 0x48, 0x12, 0xce, 0xa0, 0x7d, 0xdd, 0x23, 0xcd, 0x4b, 0xd5, 0x45, 0xb9,
	0x57, 0x74, 0x48, 0xf5, 0x5a, 0x3f, 0xfa, 0xb3, 0x01, 0x8e, 0xfc, 0x42, 0x1a, 0xe8, 0x4f, 0x26,
	0x74, 0x1f, 0x6c, 0x9d, 0x09, 0xb4, 0x77, 0x9e, 0x7f, 0x46, 0x9d, 0x4b, 0xc2, 0xd1, 0x92, 0xed,
	0xdd, 0x40, 0x8f, 0xa0, 0x59, 0x24, 0x0e, 0x1d, 0x5d, 0x4f, 0x2f, 0x67, 0x73, 0xcd, 0xd2, 0x77,
	0xc0, 0xfa, 0x9a, 0x64, 0x5b, 0xec, 0xf1, 0x1e, 0xd4, 0x9f, 0x50, 0x16, 0x3e, 0x65, 0xdb, 0x04,
	0xf4, 0x2e, 0xd4, 0x54, 0x56, 0xb6, 0xa0, 0x7e, 0x0a, 0x8d, 0x41, 0x2c, 0x34, 0xfb, 0xff, 0x0b,
	0xa1, 0x2f, 0x75, 0xa0, 0x35, 0x6b, 0x3b, 0xe0, 0xa8, 0x85, 0x5f, 0xd2, 0x94, 0x04, 0xdb, 0x1c,
	0xe2, 0x3e, 0xd8, 0x97, 0x7c, 0xc4, 0x87, 0xc3, 0xed, 0xb8, 0xcf, 0x93, 0x70, 0xbb, 0x04, 0x3c,
	0x84, 0xfa, 0x80, 0xb0, 0x70, 0x10, 0x0b, 0x74, 0x73, 0xe1, 0x0c, 0x79, 0xec, 0xb7, 0x96, 0x50,
	0xdd, 0x0f, 0xbd, 0x1b, 0xe8, 0x12, 0x9c, 0xfc, 0x9c, 0x72, 0xf5, 0xe6, 0x1b, 0x38, 0xfe, 0x97,
	0xd9, 0xc2, 0x5b, 0x17, 0xf6, 0x16, 0xc5, 0x02, 0x9d, 0x5c, 0x2f, 0x59, 0x2b, 0x23, 0x6b, 0x0e,
	0xd3, 0x83, 0x83, 0x15, 0xd1, 0x41, 0xde, 0x62, 0x55, 0x6d, 0xe9, 0xea, 0x09, 0x1c, 0x5e, 0x50,
	0x16, 0x2e, 0xbd, 0x55, 0x54, 0x3a, 0xc7, 0x9a, 0x67, 0xbc, 0xc6, 0xcf, 0x37, 0x70, 0xab, 0x4f,
	0x62, 0x3e, 0x23, 0x6f, 0xec, 0xe9, 0x02, 0xf6, 0xdf, 0xd8, 0xc7, 0x67, 0xb0, 0xaf, 0x9f, 0xd5,
	0xf5, 0xf7, 0xec, 0xe1, 0x35, 0xa9, 0x00, 0x8f, 0xd6, 0x81, 0xde, 0x0d, 0xf4, 0x05, 0x1c, 0xf4,
	0xb5, 0x42, 0x28, 0x54, 0x7f, 0xc8, 0xbe, 0x8e, 0x83, 0xcf, 0xa1, 0xdd, 0x1d, 0x93, 0x60, 0xf2,
	0xb8, 0xf4, 0xb5, 0xfc, 0x1a, 0xeb, 0x2f, 0x1e, 0xfe, 0xf0, 0xc9, 0x88, 0x66, 0xe3, 0xe9, 0x8b,
	0xf3, 0x80, 0xc7, 0x9d, 0x57, 0xaf, 0x5e, 0x8d, 0xd3, 0x0f, 0x1f, 0x3d, 0xfa, 0xa0, 0x13, 0xf0,
	0x38, 0xe6, 0xec, 0xfd, 0x51, 0x9a, 0x04, 0x9d, 0x11, 0xef, 0xe4, 0x6b, 0x3b, 0xc5, 0xdf, 0xba,
	0x17, 0xb6, 0xfa, 0x5f, 0xf7, 0xf1, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xed, 0x21, 0x59, 0x55,
	0xea, 0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	// 强行创建用户（仅后台使用）
	Create(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error)
	// 短信创建用户，password、email、name 选填项目，如果不填写，系统会随机生成
	SmsCreate(ctx context.Context, in *SmsCreateRequest, opts ...grpc.CallOption) (*User, error)
	// 获取用户信息，仅需要传递 identity，如果没有 返回空用户实体（identity = 0）
	Get(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error)
	// 查找用户/判断用户存在，仅需要传递 identity，或者是phone+country_code，如果没有 返回空用户实体（identity = 0）
	FindOne(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error)
	// 校验密码并登录， 支持 phone+country_code+password/ name+country_code+password，如果没有 返回空用户实体（identity = 0）
	Login(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error)
	// SMS login, send session and code, return empty user info instead of error if not success
	SmsLogin(ctx context.Context, in *SmsValidateRequest, opts ...grpc.CallOption) (*User, error)
	// 强行登录用户（仅后台使用）
	LoginDirect(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error)
	// 登出（记录用户登录操作）
	Logoff(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error)
	// 更新用户信息，identity是必填项目，其他选填， 但是不能更改密码
	Update(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error)
	// rpc getBalance (Balance) returns (Balance) {}
	// rpc setSpaceUsed (Balance) returns (Balance) {}
	// 发送短信
	SendSms(ctx context.Context, in *SmsRequest, opts ...grpc.CallOption) (*SmsResponse, error)
	// 验证短信验证码，不建议使用，请直接使用对应的 SmsXXX方法
	ValidateSms(ctx context.Context, in *SmsValidateRequest, opts ...grpc.CallOption) (*SmsValidateResponse, error)
	// 更改用户密码， 用户identity、old_password、new_password必须填写
	ChangePassword(ctx context.Context, in *ChangePasswordRequest, opts ...grpc.CallOption) (*User, error)
	// 短信更改用户密码， 用户session、code、new_password必须填写
	SmsChangePassword(ctx context.Context, in *SmsChangePasswordRequest, opts ...grpc.CallOption) (*User, error)
	// 废弃， 请使用update
	// rpc ChangeName (User) returns (User) {}
	// 废弃， 请使用update
	// rpc ChangeEmail (User) returns (User) {}
	BindThirdPartyLogin(ctx context.Context, in *ThirdPartyLoginInfo, opts ...grpc.CallOption) (*User, error)
	RemoveThirdPartyLogin(ctx context.Context, in *ThirdPartyLoginInfo, opts ...grpc.CallOption) (*User, error)
	ThirdPartyLogin(ctx context.Context, in *ThirdPartyLoginInfo, opts ...grpc.CallOption) (*User, error)
	CreateOauthInfo(ctx context.Context, in *OauthInfo, opts ...grpc.CallOption) (*OauthInfo, error)
	RefreshOauthToken(ctx context.Context, in *OauthInfo, opts ...grpc.CallOption) (*OauthInfo, error)
	CheckAccessToken(ctx context.Context, in *OauthInfo, opts ...grpc.CallOption) (*OauthInfo, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) Create(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/services.UserService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) SmsCreate(ctx context.Context, in *SmsCreateRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/services.UserService/SmsCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Get(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/services.UserService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) FindOne(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/services.UserService/FindOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Login(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/services.UserService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) SmsLogin(ctx context.Context, in *SmsValidateRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/services.UserService/SmsLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) LoginDirect(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/services.UserService/LoginDirect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Logoff(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/services.UserService/Logoff", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Update(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/services.UserService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) SendSms(ctx context.Context, in *SmsRequest, opts ...grpc.CallOption) (*SmsResponse, error) {
	out := new(SmsResponse)
	err := c.cc.Invoke(ctx, "/services.UserService/SendSms", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ValidateSms(ctx context.Context, in *SmsValidateRequest, opts ...grpc.CallOption) (*SmsValidateResponse, error) {
	out := new(SmsValidateResponse)
	err := c.cc.Invoke(ctx, "/services.UserService/ValidateSms", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ChangePassword(ctx context.Context, in *ChangePasswordRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/services.UserService/ChangePassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) SmsChangePassword(ctx context.Context, in *SmsChangePasswordRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/services.UserService/SmsChangePassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) BindThirdPartyLogin(ctx context.Context, in *ThirdPartyLoginInfo, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/services.UserService/BindThirdPartyLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) RemoveThirdPartyLogin(ctx context.Context, in *ThirdPartyLoginInfo, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/services.UserService/RemoveThirdPartyLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ThirdPartyLogin(ctx context.Context, in *ThirdPartyLoginInfo, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/services.UserService/ThirdPartyLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) CreateOauthInfo(ctx context.Context, in *OauthInfo, opts ...grpc.CallOption) (*OauthInfo, error) {
	out := new(OauthInfo)
	err := c.cc.Invoke(ctx, "/services.UserService/CreateOauthInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) RefreshOauthToken(ctx context.Context, in *OauthInfo, opts ...grpc.CallOption) (*OauthInfo, error) {
	out := new(OauthInfo)
	err := c.cc.Invoke(ctx, "/services.UserService/RefreshOauthToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) CheckAccessToken(ctx context.Context, in *OauthInfo, opts ...grpc.CallOption) (*OauthInfo, error) {
	out := new(OauthInfo)
	err := c.cc.Invoke(ctx, "/services.UserService/CheckAccessToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	// 强行创建用户（仅后台使用）
	Create(context.Context, *User) (*User, error)
	// 短信创建用户，password、email、name 选填项目，如果不填写，系统会随机生成
	SmsCreate(context.Context, *SmsCreateRequest) (*User, error)
	// 获取用户信息，仅需要传递 identity，如果没有 返回空用户实体（identity = 0）
	Get(context.Context, *User) (*User, error)
	// 查找用户/判断用户存在，仅需要传递 identity，或者是phone+country_code，如果没有 返回空用户实体（identity = 0）
	FindOne(context.Context, *User) (*User, error)
	// 校验密码并登录， 支持 phone+country_code+password/ name+country_code+password，如果没有 返回空用户实体（identity = 0）
	Login(context.Context, *User) (*User, error)
	// SMS login, send session and code, return empty user info instead of error if not success
	SmsLogin(context.Context, *SmsValidateRequest) (*User, error)
	// 强行登录用户（仅后台使用）
	LoginDirect(context.Context, *User) (*User, error)
	// 登出（记录用户登录操作）
	Logoff(context.Context, *User) (*User, error)
	// 更新用户信息，identity是必填项目，其他选填， 但是不能更改密码
	Update(context.Context, *User) (*User, error)
	// rpc getBalance (Balance) returns (Balance) {}
	// rpc setSpaceUsed (Balance) returns (Balance) {}
	// 发送短信
	SendSms(context.Context, *SmsRequest) (*SmsResponse, error)
	// 验证短信验证码，不建议使用，请直接使用对应的 SmsXXX方法
	ValidateSms(context.Context, *SmsValidateRequest) (*SmsValidateResponse, error)
	// 更改用户密码， 用户identity、old_password、new_password必须填写
	ChangePassword(context.Context, *ChangePasswordRequest) (*User, error)
	// 短信更改用户密码， 用户session、code、new_password必须填写
	SmsChangePassword(context.Context, *SmsChangePasswordRequest) (*User, error)
	// 废弃， 请使用update
	// rpc ChangeName (User) returns (User) {}
	// 废弃， 请使用update
	// rpc ChangeEmail (User) returns (User) {}
	BindThirdPartyLogin(context.Context, *ThirdPartyLoginInfo) (*User, error)
	RemoveThirdPartyLogin(context.Context, *ThirdPartyLoginInfo) (*User, error)
	ThirdPartyLogin(context.Context, *ThirdPartyLoginInfo) (*User, error)
	CreateOauthInfo(context.Context, *OauthInfo) (*OauthInfo, error)
	RefreshOauthToken(context.Context, *OauthInfo) (*OauthInfo, error)
	CheckAccessToken(context.Context, *OauthInfo) (*OauthInfo, error)
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) Create(ctx context.Context, req *User) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedUserServiceServer) SmsCreate(ctx context.Context, req *SmsCreateRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SmsCreate not implemented")
}
func (*UnimplementedUserServiceServer) Get(ctx context.Context, req *User) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedUserServiceServer) FindOne(ctx context.Context, req *User) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindOne not implemented")
}
func (*UnimplementedUserServiceServer) Login(ctx context.Context, req *User) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedUserServiceServer) SmsLogin(ctx context.Context, req *SmsValidateRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SmsLogin not implemented")
}
func (*UnimplementedUserServiceServer) LoginDirect(ctx context.Context, req *User) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginDirect not implemented")
}
func (*UnimplementedUserServiceServer) Logoff(ctx context.Context, req *User) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Logoff not implemented")
}
func (*UnimplementedUserServiceServer) Update(ctx context.Context, req *User) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedUserServiceServer) SendSms(ctx context.Context, req *SmsRequest) (*SmsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendSms not implemented")
}
func (*UnimplementedUserServiceServer) ValidateSms(ctx context.Context, req *SmsValidateRequest) (*SmsValidateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateSms not implemented")
}
func (*UnimplementedUserServiceServer) ChangePassword(ctx context.Context, req *ChangePasswordRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangePassword not implemented")
}
func (*UnimplementedUserServiceServer) SmsChangePassword(ctx context.Context, req *SmsChangePasswordRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SmsChangePassword not implemented")
}
func (*UnimplementedUserServiceServer) BindThirdPartyLogin(ctx context.Context, req *ThirdPartyLoginInfo) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BindThirdPartyLogin not implemented")
}
func (*UnimplementedUserServiceServer) RemoveThirdPartyLogin(ctx context.Context, req *ThirdPartyLoginInfo) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveThirdPartyLogin not implemented")
}
func (*UnimplementedUserServiceServer) ThirdPartyLogin(ctx context.Context, req *ThirdPartyLoginInfo) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ThirdPartyLogin not implemented")
}
func (*UnimplementedUserServiceServer) CreateOauthInfo(ctx context.Context, req *OauthInfo) (*OauthInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOauthInfo not implemented")
}
func (*UnimplementedUserServiceServer) RefreshOauthToken(ctx context.Context, req *OauthInfo) (*OauthInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RefreshOauthToken not implemented")
}
func (*UnimplementedUserServiceServer) CheckAccessToken(ctx context.Context, req *OauthInfo) (*OauthInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckAccessToken not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Create(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_SmsCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SmsCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).SmsCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserService/SmsCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).SmsCreate(ctx, req.(*SmsCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Get(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_FindOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).FindOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserService/FindOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).FindOne(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Login(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_SmsLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SmsValidateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).SmsLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserService/SmsLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).SmsLogin(ctx, req.(*SmsValidateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_LoginDirect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).LoginDirect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserService/LoginDirect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).LoginDirect(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Logoff_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Logoff(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserService/Logoff",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Logoff(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Update(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_SendSms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SmsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).SendSms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserService/SendSms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).SendSms(ctx, req.(*SmsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ValidateSms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SmsValidateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ValidateSms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserService/ValidateSms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ValidateSms(ctx, req.(*SmsValidateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ChangePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangePasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ChangePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserService/ChangePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ChangePassword(ctx, req.(*ChangePasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_SmsChangePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SmsChangePasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).SmsChangePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserService/SmsChangePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).SmsChangePassword(ctx, req.(*SmsChangePasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_BindThirdPartyLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ThirdPartyLoginInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).BindThirdPartyLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserService/BindThirdPartyLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).BindThirdPartyLogin(ctx, req.(*ThirdPartyLoginInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_RemoveThirdPartyLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ThirdPartyLoginInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).RemoveThirdPartyLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserService/RemoveThirdPartyLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).RemoveThirdPartyLogin(ctx, req.(*ThirdPartyLoginInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ThirdPartyLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ThirdPartyLoginInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ThirdPartyLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserService/ThirdPartyLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ThirdPartyLogin(ctx, req.(*ThirdPartyLoginInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_CreateOauthInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OauthInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).CreateOauthInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserService/CreateOauthInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).CreateOauthInfo(ctx, req.(*OauthInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_RefreshOauthToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OauthInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).RefreshOauthToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserService/RefreshOauthToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).RefreshOauthToken(ctx, req.(*OauthInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_CheckAccessToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OauthInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).CheckAccessToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserService/CheckAccessToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).CheckAccessToken(ctx, req.(*OauthInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _UserService_Create_Handler,
		},
		{
			MethodName: "SmsCreate",
			Handler:    _UserService_SmsCreate_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _UserService_Get_Handler,
		},
		{
			MethodName: "FindOne",
			Handler:    _UserService_FindOne_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _UserService_Login_Handler,
		},
		{
			MethodName: "SmsLogin",
			Handler:    _UserService_SmsLogin_Handler,
		},
		{
			MethodName: "LoginDirect",
			Handler:    _UserService_LoginDirect_Handler,
		},
		{
			MethodName: "Logoff",
			Handler:    _UserService_Logoff_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _UserService_Update_Handler,
		},
		{
			MethodName: "SendSms",
			Handler:    _UserService_SendSms_Handler,
		},
		{
			MethodName: "ValidateSms",
			Handler:    _UserService_ValidateSms_Handler,
		},
		{
			MethodName: "ChangePassword",
			Handler:    _UserService_ChangePassword_Handler,
		},
		{
			MethodName: "SmsChangePassword",
			Handler:    _UserService_SmsChangePassword_Handler,
		},
		{
			MethodName: "BindThirdPartyLogin",
			Handler:    _UserService_BindThirdPartyLogin_Handler,
		},
		{
			MethodName: "RemoveThirdPartyLogin",
			Handler:    _UserService_RemoveThirdPartyLogin_Handler,
		},
		{
			MethodName: "ThirdPartyLogin",
			Handler:    _UserService_ThirdPartyLogin_Handler,
		},
		{
			MethodName: "CreateOauthInfo",
			Handler:    _UserService_CreateOauthInfo_Handler,
		},
		{
			MethodName: "RefreshOauthToken",
			Handler:    _UserService_RefreshOauthToken_Handler,
		},
		{
			MethodName: "CheckAccessToken",
			Handler:    _UserService_CheckAccessToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user/info.proto",
}

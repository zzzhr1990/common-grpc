// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.4
// source: offline/usertask.proto

package usertask

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	common "github.com/zzzhr1990/common-grpc/go/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UserOfflineTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Type     int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Data     string `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UserOfflineTaskRequest) Reset() {
	*x = UserOfflineTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offline_usertask_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOfflineTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOfflineTaskRequest) ProtoMessage() {}

func (x *UserOfflineTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offline_usertask_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOfflineTaskRequest.ProtoReflect.Descriptor instead.
func (*UserOfflineTaskRequest) Descriptor() ([]byte, []int) {
	return file_offline_usertask_proto_rawDescGZIP(), []int{0}
}

func (x *UserOfflineTaskRequest) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *UserOfflineTaskRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UserOfflineTaskRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserOfflineTaskRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type AddUserOfflineTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIdentity  int64                     `protobuf:"varint,1,opt,name=user_identity,json=userIdentity,proto3" json:"user_identity,omitempty"`
	Tasks         []*UserOfflineTaskRequest `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty"`
	Path          string                    `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	CreateAddress string                    `protobuf:"bytes,4,opt,name=create_address,json=createAddress,proto3" json:"create_address,omitempty"`
}

func (x *AddUserOfflineTaskRequest) Reset() {
	*x = AddUserOfflineTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offline_usertask_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserOfflineTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserOfflineTaskRequest) ProtoMessage() {}

func (x *AddUserOfflineTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offline_usertask_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserOfflineTaskRequest.ProtoReflect.Descriptor instead.
func (*AddUserOfflineTaskRequest) Descriptor() ([]byte, []int) {
	return file_offline_usertask_proto_rawDescGZIP(), []int{1}
}

func (x *AddUserOfflineTaskRequest) GetUserIdentity() int64 {
	if x != nil {
		return x.UserIdentity
	}
	return 0
}

func (x *AddUserOfflineTaskRequest) GetTasks() []*UserOfflineTaskRequest {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *AddUserOfflineTaskRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *AddUserOfflineTaskRequest) GetCreateAddress() string {
	if x != nil {
		return x.CreateAddress
	}
	return ""
}

type UserOfflineTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity      string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	UserIdentity  int64  `protobuf:"varint,2,opt,name=user_identity,json=userIdentity,proto3" json:"user_identity,omitempty"`
	CreateTime    int64  `protobuf:"varint,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Name          string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Type          int32  `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	Status        int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	Size          int64  `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	DownloadSize  int64  `protobuf:"varint,8,opt,name=download_size,json=downloadSize,proto3" json:"download_size,omitempty"`
	Progress      int64  `protobuf:"varint,9,opt,name=progress,proto3" json:"progress,omitempty"`
	ErrorCode     int32  `protobuf:"varint,10,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage  string `protobuf:"bytes,11,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	SavePath      string `protobuf:"bytes,12,opt,name=save_path,json=savePath,proto3" json:"save_path,omitempty"`
	AccessPath    string `protobuf:"bytes,13,opt,name=access_path,json=accessPath,proto3" json:"access_path,omitempty"`
	FileMime      string `protobuf:"bytes,14,opt,name=file_mime,json=fileMime,proto3" json:"file_mime,omitempty"`
	FileType      int32  `protobuf:"varint,15,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	CreateAddress string `protobuf:"bytes,16,opt,name=create_address,json=createAddress,proto3" json:"create_address,omitempty"`
	Data          string `protobuf:"bytes,17,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UserOfflineTask) Reset() {
	*x = UserOfflineTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offline_usertask_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOfflineTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOfflineTask) ProtoMessage() {}

func (x *UserOfflineTask) ProtoReflect() protoreflect.Message {
	mi := &file_offline_usertask_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOfflineTask.ProtoReflect.Descriptor instead.
func (*UserOfflineTask) Descriptor() ([]byte, []int) {
	return file_offline_usertask_proto_rawDescGZIP(), []int{2}
}

func (x *UserOfflineTask) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *UserOfflineTask) GetUserIdentity() int64 {
	if x != nil {
		return x.UserIdentity
	}
	return 0
}

func (x *UserOfflineTask) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *UserOfflineTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserOfflineTask) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UserOfflineTask) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UserOfflineTask) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UserOfflineTask) GetDownloadSize() int64 {
	if x != nil {
		return x.DownloadSize
	}
	return 0
}

func (x *UserOfflineTask) GetProgress() int64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *UserOfflineTask) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *UserOfflineTask) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *UserOfflineTask) GetSavePath() string {
	if x != nil {
		return x.SavePath
	}
	return ""
}

func (x *UserOfflineTask) GetAccessPath() string {
	if x != nil {
		return x.AccessPath
	}
	return ""
}

func (x *UserOfflineTask) GetFileMime() string {
	if x != nil {
		return x.FileMime
	}
	return ""
}

func (x *UserOfflineTask) GetFileType() int32 {
	if x != nil {
		return x.FileType
	}
	return 0
}

func (x *UserOfflineTask) GetCreateAddress() string {
	if x != nil {
		return x.CreateAddress
	}
	return ""
}

func (x *UserOfflineTask) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type UserOfflineTaskFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Size     int64  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Order    int32  `protobuf:"varint,4,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *UserOfflineTaskFile) Reset() {
	*x = UserOfflineTaskFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offline_usertask_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOfflineTaskFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOfflineTaskFile) ProtoMessage() {}

func (x *UserOfflineTaskFile) ProtoReflect() protoreflect.Message {
	mi := &file_offline_usertask_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOfflineTaskFile.ProtoReflect.Descriptor instead.
func (*UserOfflineTaskFile) Descriptor() ([]byte, []int) {
	return file_offline_usertask_proto_rawDescGZIP(), []int{3}
}

func (x *UserOfflineTaskFile) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *UserOfflineTaskFile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserOfflineTaskFile) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UserOfflineTaskFile) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type UserOfflineTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool  `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Count   int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"` // repeated UserOfflineTaskFile files = 3;
}

func (x *UserOfflineTaskResponse) Reset() {
	*x = UserOfflineTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offline_usertask_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOfflineTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOfflineTaskResponse) ProtoMessage() {}

func (x *UserOfflineTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_offline_usertask_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOfflineTaskResponse.ProtoReflect.Descriptor instead.
func (*UserOfflineTaskResponse) Descriptor() ([]byte, []int) {
	return file_offline_usertask_proto_rawDescGZIP(), []int{4}
}

func (x *UserOfflineTaskResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UserOfflineTaskResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type PageUserOfflineTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIdentity int64 `protobuf:"varint,1,opt,name=user_identity,json=userIdentity,proto3" json:"user_identity,omitempty"`
	OrderBy      int32 `protobuf:"varint,2,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	Page         int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize     int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Filter       int32 `protobuf:"varint,5,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *PageUserOfflineTaskRequest) Reset() {
	*x = PageUserOfflineTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offline_usertask_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageUserOfflineTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageUserOfflineTaskRequest) ProtoMessage() {}

func (x *PageUserOfflineTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offline_usertask_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageUserOfflineTaskRequest.ProtoReflect.Descriptor instead.
func (*PageUserOfflineTaskRequest) Descriptor() ([]byte, []int) {
	return file_offline_usertask_proto_rawDescGZIP(), []int{5}
}

func (x *PageUserOfflineTaskRequest) GetUserIdentity() int64 {
	if x != nil {
		return x.UserIdentity
	}
	return 0
}

func (x *PageUserOfflineTaskRequest) GetOrderBy() int32 {
	if x != nil {
		return x.OrderBy
	}
	return 0
}

func (x *PageUserOfflineTaskRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageUserOfflineTaskRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PageUserOfflineTaskRequest) GetFilter() int32 {
	if x != nil {
		return x.Filter
	}
	return 0
}

type ListUserOfflineTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIdentity int64 `protobuf:"varint,1,opt,name=user_identity,json=userIdentity,proto3" json:"user_identity,omitempty"`
	OrderBy      int32 `protobuf:"varint,2,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	Filter       int32 `protobuf:"varint,3,opt,name=filter,proto3" json:"filter,omitempty"`
	Start        int32 `protobuf:"varint,4,opt,name=start,proto3" json:"start,omitempty"`
	ListSize     int32 `protobuf:"varint,5,opt,name=list_size,json=listSize,proto3" json:"list_size,omitempty"`
}

func (x *ListUserOfflineTaskRequest) Reset() {
	*x = ListUserOfflineTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offline_usertask_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserOfflineTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserOfflineTaskRequest) ProtoMessage() {}

func (x *ListUserOfflineTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offline_usertask_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserOfflineTaskRequest.ProtoReflect.Descriptor instead.
func (*ListUserOfflineTaskRequest) Descriptor() ([]byte, []int) {
	return file_offline_usertask_proto_rawDescGZIP(), []int{6}
}

func (x *ListUserOfflineTaskRequest) GetUserIdentity() int64 {
	if x != nil {
		return x.UserIdentity
	}
	return 0
}

func (x *ListUserOfflineTaskRequest) GetOrderBy() int32 {
	if x != nil {
		return x.OrderBy
	}
	return 0
}

func (x *ListUserOfflineTaskRequest) GetFilter() int32 {
	if x != nil {
		return x.Filter
	}
	return 0
}

func (x *ListUserOfflineTaskRequest) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ListUserOfflineTaskRequest) GetListSize() int32 {
	if x != nil {
		return x.ListSize
	}
	return 0
}

type UserOfflineTaskPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List       []*UserOfflineTask `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	TotalCount int64              `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	TotalPage  int32              `protobuf:"varint,3,opt,name=total_page,json=totalPage,proto3" json:"total_page,omitempty"`
	Page       int32              `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	PageSize   int32              `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *UserOfflineTaskPage) Reset() {
	*x = UserOfflineTaskPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offline_usertask_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOfflineTaskPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOfflineTaskPage) ProtoMessage() {}

func (x *UserOfflineTaskPage) ProtoReflect() protoreflect.Message {
	mi := &file_offline_usertask_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOfflineTaskPage.ProtoReflect.Descriptor instead.
func (*UserOfflineTaskPage) Descriptor() ([]byte, []int) {
	return file_offline_usertask_proto_rawDescGZIP(), []int{7}
}

func (x *UserOfflineTaskPage) GetList() []*UserOfflineTask {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *UserOfflineTaskPage) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *UserOfflineTaskPage) GetTotalPage() int32 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

func (x *UserOfflineTaskPage) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *UserOfflineTaskPage) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type DeleteTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIdentity  int64    `protobuf:"varint,1,opt,name=user_identity,json=userIdentity,proto3" json:"user_identity,omitempty"`
	TasksIdentity []string `protobuf:"bytes,2,rep,name=tasks_identity,json=tasksIdentity,proto3" json:"tasks_identity,omitempty"`
}

func (x *DeleteTasksRequest) Reset() {
	*x = DeleteTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offline_usertask_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTasksRequest) ProtoMessage() {}

func (x *DeleteTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offline_usertask_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTasksRequest.ProtoReflect.Descriptor instead.
func (*DeleteTasksRequest) Descriptor() ([]byte, []int) {
	return file_offline_usertask_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteTasksRequest) GetUserIdentity() int64 {
	if x != nil {
		return x.UserIdentity
	}
	return 0
}

func (x *DeleteTasksRequest) GetTasksIdentity() []string {
	if x != nil {
		return x.TasksIdentity
	}
	return nil
}

type UserOfflineTaskList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*UserOfflineTask `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *UserOfflineTaskList) Reset() {
	*x = UserOfflineTaskList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offline_usertask_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOfflineTaskList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOfflineTaskList) ProtoMessage() {}

func (x *UserOfflineTaskList) ProtoReflect() protoreflect.Message {
	mi := &file_offline_usertask_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOfflineTaskList.ProtoReflect.Descriptor instead.
func (*UserOfflineTaskList) Descriptor() ([]byte, []int) {
	return file_offline_usertask_proto_rawDescGZIP(), []int{9}
}

func (x *UserOfflineTaskList) GetList() []*UserOfflineTask {
	if x != nil {
		return x.List
	}
	return nil
}

var File_offline_usertask_proto protoreflect.FileDescriptor

var file_offline_usertask_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x74, 0x61,
	0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x1a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x70,
	0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xb3, 0x01, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c,
	0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x25, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xff, 0x03, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x4f,
	0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x61, 0x76, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x69, 0x6d, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x69, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6f, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72,
	0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x49, 0x0a, 0x17, 0x55, 0x73, 0x65,
	0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa5, 0x01, 0x0a, 0x1a, 0x50, 0x61, 0x67, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xa7, 0x01, 0x0a,
	0x1a, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x73,
	0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x69,
	0x73, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x4f,
	0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x61, 0x67, 0x65, 0x12, 0x2d,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c,
	0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x60,
	0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x22, 0x44, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x32, 0xc8, 0x02, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x4f,
	0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x4f, 0x0a, 0x03, 0x61, 0x64, 0x64, 0x12, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4d, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x24, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x66,
	0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x61, 0x67, 0x65, 0x22,
	0x00, 0x12, 0x4d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f,
	0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00,
	0x12, 0x3f, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22,
	0x00, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x7a, 0x7a, 0x7a, 0x68, 0x72, 0x31, 0x39, 0x39, 0x30, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2d, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x74, 0x61,
	0x73, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_offline_usertask_proto_rawDescOnce sync.Once
	file_offline_usertask_proto_rawDescData = file_offline_usertask_proto_rawDesc
)

func file_offline_usertask_proto_rawDescGZIP() []byte {
	file_offline_usertask_proto_rawDescOnce.Do(func() {
		file_offline_usertask_proto_rawDescData = protoimpl.X.CompressGZIP(file_offline_usertask_proto_rawDescData)
	})
	return file_offline_usertask_proto_rawDescData
}

var file_offline_usertask_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_offline_usertask_proto_goTypes = []interface{}{
	(*UserOfflineTaskRequest)(nil),     // 0: services.UserOfflineTaskRequest
	(*AddUserOfflineTaskRequest)(nil),  // 1: services.AddUserOfflineTaskRequest
	(*UserOfflineTask)(nil),            // 2: services.UserOfflineTask
	(*UserOfflineTaskFile)(nil),        // 3: services.UserOfflineTaskFile
	(*UserOfflineTaskResponse)(nil),    // 4: services.UserOfflineTaskResponse
	(*PageUserOfflineTaskRequest)(nil), // 5: services.PageUserOfflineTaskRequest
	(*ListUserOfflineTaskRequest)(nil), // 6: services.ListUserOfflineTaskRequest
	(*UserOfflineTaskPage)(nil),        // 7: services.UserOfflineTaskPage
	(*DeleteTasksRequest)(nil),         // 8: services.DeleteTasksRequest
	(*UserOfflineTaskList)(nil),        // 9: services.UserOfflineTaskList
	(*common.Int64Entity)(nil),         // 10: services.Int64Entity
}
var file_offline_usertask_proto_depIdxs = []int32{
	0,  // 0: services.AddUserOfflineTaskRequest.tasks:type_name -> services.UserOfflineTaskRequest
	2,  // 1: services.UserOfflineTaskPage.list:type_name -> services.UserOfflineTask
	2,  // 2: services.UserOfflineTaskList.list:type_name -> services.UserOfflineTask
	1,  // 3: services.UserOfflineTaskService.add:input_type -> services.AddUserOfflineTaskRequest
	5,  // 4: services.UserOfflineTaskService.page:input_type -> services.PageUserOfflineTaskRequest
	6,  // 5: services.UserOfflineTaskService.list:input_type -> services.ListUserOfflineTaskRequest
	8,  // 6: services.UserOfflineTaskService.delete:input_type -> services.DeleteTasksRequest
	4,  // 7: services.UserOfflineTaskService.add:output_type -> services.UserOfflineTaskResponse
	7,  // 8: services.UserOfflineTaskService.page:output_type -> services.UserOfflineTaskPage
	9,  // 9: services.UserOfflineTaskService.list:output_type -> services.UserOfflineTaskList
	10, // 10: services.UserOfflineTaskService.delete:output_type -> services.Int64Entity
	7,  // [7:11] is the sub-list for method output_type
	3,  // [3:7] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_offline_usertask_proto_init() }
func file_offline_usertask_proto_init() {
	if File_offline_usertask_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_offline_usertask_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOfflineTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offline_usertask_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserOfflineTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offline_usertask_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOfflineTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offline_usertask_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOfflineTaskFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offline_usertask_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOfflineTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offline_usertask_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageUserOfflineTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offline_usertask_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserOfflineTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offline_usertask_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOfflineTaskPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offline_usertask_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offline_usertask_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOfflineTaskList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_offline_usertask_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_offline_usertask_proto_goTypes,
		DependencyIndexes: file_offline_usertask_proto_depIdxs,
		MessageInfos:      file_offline_usertask_proto_msgTypes,
	}.Build()
	File_offline_usertask_proto = out.File
	file_offline_usertask_proto_rawDesc = nil
	file_offline_usertask_proto_goTypes = nil
	file_offline_usertask_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UserOfflineTaskServiceClient is the client API for UserOfflineTaskService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserOfflineTaskServiceClient interface {
	// rpc create (UserOfflineTask) returns (UserOfflineTask) {}
	Add(ctx context.Context, in *AddUserOfflineTaskRequest, opts ...grpc.CallOption) (*UserOfflineTaskResponse, error)
	Page(ctx context.Context, in *PageUserOfflineTaskRequest, opts ...grpc.CallOption) (*UserOfflineTaskPage, error)
	List(ctx context.Context, in *ListUserOfflineTaskRequest, opts ...grpc.CallOption) (*UserOfflineTaskList, error)
	Delete(ctx context.Context, in *DeleteTasksRequest, opts ...grpc.CallOption) (*common.Int64Entity, error)
}

type userOfflineTaskServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserOfflineTaskServiceClient(cc grpc.ClientConnInterface) UserOfflineTaskServiceClient {
	return &userOfflineTaskServiceClient{cc}
}

func (c *userOfflineTaskServiceClient) Add(ctx context.Context, in *AddUserOfflineTaskRequest, opts ...grpc.CallOption) (*UserOfflineTaskResponse, error) {
	out := new(UserOfflineTaskResponse)
	err := c.cc.Invoke(ctx, "/services.UserOfflineTaskService/add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userOfflineTaskServiceClient) Page(ctx context.Context, in *PageUserOfflineTaskRequest, opts ...grpc.CallOption) (*UserOfflineTaskPage, error) {
	out := new(UserOfflineTaskPage)
	err := c.cc.Invoke(ctx, "/services.UserOfflineTaskService/page", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userOfflineTaskServiceClient) List(ctx context.Context, in *ListUserOfflineTaskRequest, opts ...grpc.CallOption) (*UserOfflineTaskList, error) {
	out := new(UserOfflineTaskList)
	err := c.cc.Invoke(ctx, "/services.UserOfflineTaskService/list", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userOfflineTaskServiceClient) Delete(ctx context.Context, in *DeleteTasksRequest, opts ...grpc.CallOption) (*common.Int64Entity, error) {
	out := new(common.Int64Entity)
	err := c.cc.Invoke(ctx, "/services.UserOfflineTaskService/delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserOfflineTaskServiceServer is the server API for UserOfflineTaskService service.
type UserOfflineTaskServiceServer interface {
	// rpc create (UserOfflineTask) returns (UserOfflineTask) {}
	Add(context.Context, *AddUserOfflineTaskRequest) (*UserOfflineTaskResponse, error)
	Page(context.Context, *PageUserOfflineTaskRequest) (*UserOfflineTaskPage, error)
	List(context.Context, *ListUserOfflineTaskRequest) (*UserOfflineTaskList, error)
	Delete(context.Context, *DeleteTasksRequest) (*common.Int64Entity, error)
}

// UnimplementedUserOfflineTaskServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserOfflineTaskServiceServer struct {
}

func (*UnimplementedUserOfflineTaskServiceServer) Add(context.Context, *AddUserOfflineTaskRequest) (*UserOfflineTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedUserOfflineTaskServiceServer) Page(context.Context, *PageUserOfflineTaskRequest) (*UserOfflineTaskPage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Page not implemented")
}
func (*UnimplementedUserOfflineTaskServiceServer) List(context.Context, *ListUserOfflineTaskRequest) (*UserOfflineTaskList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedUserOfflineTaskServiceServer) Delete(context.Context, *DeleteTasksRequest) (*common.Int64Entity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterUserOfflineTaskServiceServer(s *grpc.Server, srv UserOfflineTaskServiceServer) {
	s.RegisterService(&_UserOfflineTaskService_serviceDesc, srv)
}

func _UserOfflineTaskService_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserOfflineTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserOfflineTaskServiceServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserOfflineTaskService/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserOfflineTaskServiceServer).Add(ctx, req.(*AddUserOfflineTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserOfflineTaskService_Page_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PageUserOfflineTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserOfflineTaskServiceServer).Page(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserOfflineTaskService/Page",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserOfflineTaskServiceServer).Page(ctx, req.(*PageUserOfflineTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserOfflineTaskService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUserOfflineTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserOfflineTaskServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserOfflineTaskService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserOfflineTaskServiceServer).List(ctx, req.(*ListUserOfflineTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserOfflineTaskService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTasksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserOfflineTaskServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserOfflineTaskService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserOfflineTaskServiceServer).Delete(ctx, req.(*DeleteTasksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserOfflineTaskService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.UserOfflineTaskService",
	HandlerType: (*UserOfflineTaskServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "add",
			Handler:    _UserOfflineTaskService_Add_Handler,
		},
		{
			MethodName: "page",
			Handler:    _UserOfflineTaskService_Page_Handler,
		},
		{
			MethodName: "list",
			Handler:    _UserOfflineTaskService_List_Handler,
		},
		{
			MethodName: "delete",
			Handler:    _UserOfflineTaskService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "offline/usertask.proto",
}

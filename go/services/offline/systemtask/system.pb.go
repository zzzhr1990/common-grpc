// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.4
// source: offline/system.proto

package systemtask

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	common "github.com/zzzhr1990/common-grpc/go/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type BatchGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identities []string `protobuf:"bytes,1,rep,name=identities,proto3" json:"identities,omitempty"`
}

func (x *BatchGetRequest) Reset() {
	*x = BatchGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offline_system_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetRequest) ProtoMessage() {}

func (x *BatchGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offline_system_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetRequest.ProtoReflect.Descriptor instead.
func (*BatchGetRequest) Descriptor() ([]byte, []int) {
	return file_offline_system_proto_rawDescGZIP(), []int{0}
}

func (x *BatchGetRequest) GetIdentities() []string {
	if x != nil {
		return x.Identities
	}
	return nil
}

type BatchGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*SystemOfflineTaskDetail `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *BatchGetResponse) Reset() {
	*x = BatchGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offline_system_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetResponse) ProtoMessage() {}

func (x *BatchGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_offline_system_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetResponse.ProtoReflect.Descriptor instead.
func (*BatchGetResponse) Descriptor() ([]byte, []int) {
	return file_offline_system_proto_rawDescGZIP(), []int{1}
}

func (x *BatchGetResponse) GetData() []*SystemOfflineTaskDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

type SystemOfflineTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity     string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Size         int64  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	CreateUser   int64  `protobuf:"varint,3,opt,name=create_user,json=createUser,proto3" json:"create_user,omitempty"`
	CreateTime   int64  `protobuf:"varint,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Name         string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Type         int32  `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`
	Status       int32  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	Flag         int32  `protobuf:"varint,8,opt,name=flag,proto3" json:"flag,omitempty"`
	DownloadSize int64  `protobuf:"varint,9,opt,name=download_size,json=downloadSize,proto3" json:"download_size,omitempty"`
	ErrorCode    int32  `protobuf:"varint,10,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string `protobuf:"bytes,11,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	CreateAddr   string `protobuf:"bytes,12,opt,name=create_addr,json=createAddr,proto3" json:"create_addr,omitempty"`
	Data         string `protobuf:"bytes,13,opt,name=data,proto3" json:"data,omitempty"`
	TextLink     string `protobuf:"bytes,14,opt,name=text_link,json=textLink,proto3" json:"text_link,omitempty"`
}

func (x *SystemOfflineTask) Reset() {
	*x = SystemOfflineTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offline_system_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemOfflineTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemOfflineTask) ProtoMessage() {}

func (x *SystemOfflineTask) ProtoReflect() protoreflect.Message {
	mi := &file_offline_system_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemOfflineTask.ProtoReflect.Descriptor instead.
func (*SystemOfflineTask) Descriptor() ([]byte, []int) {
	return file_offline_system_proto_rawDescGZIP(), []int{2}
}

func (x *SystemOfflineTask) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *SystemOfflineTask) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SystemOfflineTask) GetCreateUser() int64 {
	if x != nil {
		return x.CreateUser
	}
	return 0
}

func (x *SystemOfflineTask) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SystemOfflineTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SystemOfflineTask) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SystemOfflineTask) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SystemOfflineTask) GetFlag() int32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *SystemOfflineTask) GetDownloadSize() int64 {
	if x != nil {
		return x.DownloadSize
	}
	return 0
}

func (x *SystemOfflineTask) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *SystemOfflineTask) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *SystemOfflineTask) GetCreateAddr() string {
	if x != nil {
		return x.CreateAddr
	}
	return ""
}

func (x *SystemOfflineTask) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *SystemOfflineTask) GetTextLink() string {
	if x != nil {
		return x.TextLink
	}
	return ""
}

type UpdateProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity     string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Size         int64  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	DownloadSize int64  `protobuf:"varint,3,opt,name=downloadSize,proto3" json:"downloadSize,omitempty"`
}

func (x *UpdateProgressRequest) Reset() {
	*x = UpdateProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offline_system_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProgressRequest) ProtoMessage() {}

func (x *UpdateProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offline_system_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProgressRequest.ProtoReflect.Descriptor instead.
func (*UpdateProgressRequest) Descriptor() ([]byte, []int) {
	return file_offline_system_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateProgressRequest) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *UpdateProgressRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UpdateProgressRequest) GetDownloadSize() int64 {
	if x != nil {
		return x.DownloadSize
	}
	return 0
}

type StatusChangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Status   int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *StatusChangeRequest) Reset() {
	*x = StatusChangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offline_system_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusChangeRequest) ProtoMessage() {}

func (x *StatusChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offline_system_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusChangeRequest.ProtoReflect.Descriptor instead.
func (*StatusChangeRequest) Descriptor() ([]byte, []int) {
	return file_offline_system_proto_rawDescGZIP(), []int{4}
}

func (x *StatusChangeRequest) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *StatusChangeRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ErrorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity     string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	ErrorCode    int32  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	ErrorMessage string `protobuf:"bytes,3,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
}

func (x *ErrorRequest) Reset() {
	*x = ErrorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offline_system_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorRequest) ProtoMessage() {}

func (x *ErrorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offline_system_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorRequest.ProtoReflect.Descriptor instead.
func (*ErrorRequest) Descriptor() ([]byte, []int) {
	return file_offline_system_proto_rawDescGZIP(), []int{5}
}

func (x *ErrorRequest) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *ErrorRequest) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *ErrorRequest) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type SystemOfflineTaskFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DownloadIdentity string `protobuf:"bytes,1,opt,name=download_identity,json=downloadIdentity,proto3" json:"download_identity,omitempty"`
	PathIdentity     string `protobuf:"bytes,2,opt,name=path_identity,json=pathIdentity,proto3" json:"path_identity,omitempty"`
	CreateTime       int64  `protobuf:"varint,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Name             string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Path             string `protobuf:"bytes,6,opt,name=path,proto3" json:"path,omitempty"`
	Hash             string `protobuf:"bytes,7,opt,name=hash,proto3" json:"hash,omitempty"`
	Size             int64  `protobuf:"varint,8,opt,name=size,proto3" json:"size,omitempty"`
	DownloadSize     int64  `protobuf:"varint,9,opt,name=download_size,json=downloadSize,proto3" json:"download_size,omitempty"`
	Status           int32  `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	Flag             int32  `protobuf:"varint,11,opt,name=flag,proto3" json:"flag,omitempty"`
	FileIndex        int32  `protobuf:"varint,12,opt,name=file_index,json=fileIndex,proto3" json:"file_index,omitempty"`
	Finish           bool   `protobuf:"varint,13,opt,name=finish,proto3" json:"finish,omitempty"`
	Directory        bool   `protobuf:"varint,14,opt,name=directory,proto3" json:"directory,omitempty"`
}

func (x *SystemOfflineTaskFile) Reset() {
	*x = SystemOfflineTaskFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offline_system_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemOfflineTaskFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemOfflineTaskFile) ProtoMessage() {}

func (x *SystemOfflineTaskFile) ProtoReflect() protoreflect.Message {
	mi := &file_offline_system_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemOfflineTaskFile.ProtoReflect.Descriptor instead.
func (*SystemOfflineTaskFile) Descriptor() ([]byte, []int) {
	return file_offline_system_proto_rawDescGZIP(), []int{6}
}

func (x *SystemOfflineTaskFile) GetDownloadIdentity() string {
	if x != nil {
		return x.DownloadIdentity
	}
	return ""
}

func (x *SystemOfflineTaskFile) GetPathIdentity() string {
	if x != nil {
		return x.PathIdentity
	}
	return ""
}

func (x *SystemOfflineTaskFile) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SystemOfflineTaskFile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SystemOfflineTaskFile) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SystemOfflineTaskFile) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *SystemOfflineTaskFile) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SystemOfflineTaskFile) GetDownloadSize() int64 {
	if x != nil {
		return x.DownloadSize
	}
	return 0
}

func (x *SystemOfflineTaskFile) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SystemOfflineTaskFile) GetFlag() int32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *SystemOfflineTaskFile) GetFileIndex() int32 {
	if x != nil {
		return x.FileIndex
	}
	return 0
}

func (x *SystemOfflineTaskFile) GetFinish() bool {
	if x != nil {
		return x.Finish
	}
	return false
}

func (x *SystemOfflineTaskFile) GetDirectory() bool {
	if x != nil {
		return x.Directory
	}
	return false
}

type SystemOfflineTaskDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity string                   `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Task     *SystemOfflineTask       `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	Files    []*SystemOfflineTaskFile `protobuf:"bytes,3,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *SystemOfflineTaskDetail) Reset() {
	*x = SystemOfflineTaskDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offline_system_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemOfflineTaskDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemOfflineTaskDetail) ProtoMessage() {}

func (x *SystemOfflineTaskDetail) ProtoReflect() protoreflect.Message {
	mi := &file_offline_system_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemOfflineTaskDetail.ProtoReflect.Descriptor instead.
func (*SystemOfflineTaskDetail) Descriptor() ([]byte, []int) {
	return file_offline_system_proto_rawDescGZIP(), []int{7}
}

func (x *SystemOfflineTaskDetail) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *SystemOfflineTaskDetail) GetTask() *SystemOfflineTask {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *SystemOfflineTaskDetail) GetFiles() []*SystemOfflineTaskFile {
	if x != nil {
		return x.Files
	}
	return nil
}

var File_offline_system_proto protoreflect.FileDescriptor

var file_offline_system_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x1a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x31, 0x0a, 0x0f,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22,
	0x49, 0x0a, 0x10, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x94, 0x03, 0x0a, 0x11, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x6c, 0x69, 0x6e,
	0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x78, 0x74, 0x4c, 0x69, 0x6e,
	0x6b, 0x22, 0x6b, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x49,
	0x0a, 0x13, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x6c, 0x0a, 0x0c, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x80, 0x03, 0x0a, 0x15, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x74, 0x68, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x9d, 0x01, 0x0a, 0x17, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74,
	0x61, 0x73, 0x6b, 0x12, 0x35, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x32, 0x97, 0x06, 0x0a, 0x18, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x1a, 0x1b,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x22, 0x00, 0x12, 0x44, 0x0a,
	0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x1a, 0x15, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x00, 0x12, 0x43,
	0x0a, 0x08, 0x62, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f, 0x66, 0x66, 0x6c,
	0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x09, 0x67, 0x65, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x1a, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x46, 0x69, 0x6c, 0x65, 0x1a, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0a,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f, 0x66, 0x66, 0x6c,
	0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x1a, 0x14, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x08, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x1a, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42,
	0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x22, 0x00, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x7a, 0x7a, 0x7a, 0x68, 0x72, 0x31, 0x39, 0x39, 0x30, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x74, 0x61, 0x73, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_offline_system_proto_rawDescOnce sync.Once
	file_offline_system_proto_rawDescData = file_offline_system_proto_rawDesc
)

func file_offline_system_proto_rawDescGZIP() []byte {
	file_offline_system_proto_rawDescOnce.Do(func() {
		file_offline_system_proto_rawDescData = protoimpl.X.CompressGZIP(file_offline_system_proto_rawDescData)
	})
	return file_offline_system_proto_rawDescData
}

var file_offline_system_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_offline_system_proto_goTypes = []interface{}{
	(*BatchGetRequest)(nil),         // 0: services.BatchGetRequest
	(*BatchGetResponse)(nil),        // 1: services.BatchGetResponse
	(*SystemOfflineTask)(nil),       // 2: services.SystemOfflineTask
	(*UpdateProgressRequest)(nil),   // 3: services.UpdateProgressRequest
	(*StatusChangeRequest)(nil),     // 4: services.StatusChangeRequest
	(*ErrorRequest)(nil),            // 5: services.ErrorRequest
	(*SystemOfflineTaskFile)(nil),   // 6: services.SystemOfflineTaskFile
	(*SystemOfflineTaskDetail)(nil), // 7: services.SystemOfflineTaskDetail
	(*common.Int64Entity)(nil),      // 8: services.Int64Entity
	(*common.BoolEntity)(nil),       // 9: services.BoolEntity
}
var file_offline_system_proto_depIdxs = []int32{
	7,  // 0: services.BatchGetResponse.data:type_name -> services.SystemOfflineTaskDetail
	2,  // 1: services.SystemOfflineTaskDetail.task:type_name -> services.SystemOfflineTask
	6,  // 2: services.SystemOfflineTaskDetail.files:type_name -> services.SystemOfflineTaskFile
	2,  // 3: services.SystemOfflineTaskService.create:input_type -> services.SystemOfflineTask
	7,  // 4: services.SystemOfflineTaskService.update:input_type -> services.SystemOfflineTaskDetail
	3,  // 5: services.SystemOfflineTaskService.updateProgress:input_type -> services.UpdateProgressRequest
	0,  // 6: services.SystemOfflineTaskService.batchGet:input_type -> services.BatchGetRequest
	2,  // 7: services.SystemOfflineTaskService.get:input_type -> services.SystemOfflineTask
	2,  // 8: services.SystemOfflineTaskService.getDetail:input_type -> services.SystemOfflineTask
	6,  // 9: services.SystemOfflineTaskService.updateFile:input_type -> services.SystemOfflineTaskFile
	6,  // 10: services.SystemOfflineTaskService.uploadFile:input_type -> services.SystemOfflineTaskFile
	4,  // 11: services.SystemOfflineTaskService.changeStatus:input_type -> services.StatusChangeRequest
	2,  // 12: services.SystemOfflineTaskService.complete:input_type -> services.SystemOfflineTask
	5,  // 13: services.SystemOfflineTaskService.error:input_type -> services.ErrorRequest
	2,  // 14: services.SystemOfflineTaskService.create:output_type -> services.SystemOfflineTask
	8,  // 15: services.SystemOfflineTaskService.update:output_type -> services.Int64Entity
	9,  // 16: services.SystemOfflineTaskService.updateProgress:output_type -> services.BoolEntity
	1,  // 17: services.SystemOfflineTaskService.batchGet:output_type -> services.BatchGetResponse
	2,  // 18: services.SystemOfflineTaskService.get:output_type -> services.SystemOfflineTask
	7,  // 19: services.SystemOfflineTaskService.getDetail:output_type -> services.SystemOfflineTaskDetail
	9,  // 20: services.SystemOfflineTaskService.updateFile:output_type -> services.BoolEntity
	9,  // 21: services.SystemOfflineTaskService.uploadFile:output_type -> services.BoolEntity
	9,  // 22: services.SystemOfflineTaskService.changeStatus:output_type -> services.BoolEntity
	9,  // 23: services.SystemOfflineTaskService.complete:output_type -> services.BoolEntity
	9,  // 24: services.SystemOfflineTaskService.error:output_type -> services.BoolEntity
	14, // [14:25] is the sub-list for method output_type
	3,  // [3:14] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_offline_system_proto_init() }
func file_offline_system_proto_init() {
	if File_offline_system_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_offline_system_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offline_system_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offline_system_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemOfflineTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offline_system_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offline_system_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusChangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offline_system_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offline_system_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemOfflineTaskFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offline_system_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemOfflineTaskDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_offline_system_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_offline_system_proto_goTypes,
		DependencyIndexes: file_offline_system_proto_depIdxs,
		MessageInfos:      file_offline_system_proto_msgTypes,
	}.Build()
	File_offline_system_proto = out.File
	file_offline_system_proto_rawDesc = nil
	file_offline_system_proto_goTypes = nil
	file_offline_system_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SystemOfflineTaskServiceClient is the client API for SystemOfflineTaskService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SystemOfflineTaskServiceClient interface {
	Create(ctx context.Context, in *SystemOfflineTask, opts ...grpc.CallOption) (*SystemOfflineTask, error)
	Update(ctx context.Context, in *SystemOfflineTaskDetail, opts ...grpc.CallOption) (*common.Int64Entity, error)
	UpdateProgress(ctx context.Context, in *UpdateProgressRequest, opts ...grpc.CallOption) (*common.BoolEntity, error)
	BatchGet(ctx context.Context, in *BatchGetRequest, opts ...grpc.CallOption) (*BatchGetResponse, error)
	Get(ctx context.Context, in *SystemOfflineTask, opts ...grpc.CallOption) (*SystemOfflineTask, error)
	GetDetail(ctx context.Context, in *SystemOfflineTask, opts ...grpc.CallOption) (*SystemOfflineTaskDetail, error)
	UpdateFile(ctx context.Context, in *SystemOfflineTaskFile, opts ...grpc.CallOption) (*common.BoolEntity, error)
	UploadFile(ctx context.Context, in *SystemOfflineTaskFile, opts ...grpc.CallOption) (*common.BoolEntity, error)
	ChangeStatus(ctx context.Context, in *StatusChangeRequest, opts ...grpc.CallOption) (*common.BoolEntity, error)
	Complete(ctx context.Context, in *SystemOfflineTask, opts ...grpc.CallOption) (*common.BoolEntity, error)
	// ErrorRequest
	Error(ctx context.Context, in *ErrorRequest, opts ...grpc.CallOption) (*common.BoolEntity, error)
}

type systemOfflineTaskServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSystemOfflineTaskServiceClient(cc grpc.ClientConnInterface) SystemOfflineTaskServiceClient {
	return &systemOfflineTaskServiceClient{cc}
}

func (c *systemOfflineTaskServiceClient) Create(ctx context.Context, in *SystemOfflineTask, opts ...grpc.CallOption) (*SystemOfflineTask, error) {
	out := new(SystemOfflineTask)
	err := c.cc.Invoke(ctx, "/services.SystemOfflineTaskService/create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemOfflineTaskServiceClient) Update(ctx context.Context, in *SystemOfflineTaskDetail, opts ...grpc.CallOption) (*common.Int64Entity, error) {
	out := new(common.Int64Entity)
	err := c.cc.Invoke(ctx, "/services.SystemOfflineTaskService/update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemOfflineTaskServiceClient) UpdateProgress(ctx context.Context, in *UpdateProgressRequest, opts ...grpc.CallOption) (*common.BoolEntity, error) {
	out := new(common.BoolEntity)
	err := c.cc.Invoke(ctx, "/services.SystemOfflineTaskService/updateProgress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemOfflineTaskServiceClient) BatchGet(ctx context.Context, in *BatchGetRequest, opts ...grpc.CallOption) (*BatchGetResponse, error) {
	out := new(BatchGetResponse)
	err := c.cc.Invoke(ctx, "/services.SystemOfflineTaskService/batchGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemOfflineTaskServiceClient) Get(ctx context.Context, in *SystemOfflineTask, opts ...grpc.CallOption) (*SystemOfflineTask, error) {
	out := new(SystemOfflineTask)
	err := c.cc.Invoke(ctx, "/services.SystemOfflineTaskService/get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemOfflineTaskServiceClient) GetDetail(ctx context.Context, in *SystemOfflineTask, opts ...grpc.CallOption) (*SystemOfflineTaskDetail, error) {
	out := new(SystemOfflineTaskDetail)
	err := c.cc.Invoke(ctx, "/services.SystemOfflineTaskService/getDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemOfflineTaskServiceClient) UpdateFile(ctx context.Context, in *SystemOfflineTaskFile, opts ...grpc.CallOption) (*common.BoolEntity, error) {
	out := new(common.BoolEntity)
	err := c.cc.Invoke(ctx, "/services.SystemOfflineTaskService/updateFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemOfflineTaskServiceClient) UploadFile(ctx context.Context, in *SystemOfflineTaskFile, opts ...grpc.CallOption) (*common.BoolEntity, error) {
	out := new(common.BoolEntity)
	err := c.cc.Invoke(ctx, "/services.SystemOfflineTaskService/uploadFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemOfflineTaskServiceClient) ChangeStatus(ctx context.Context, in *StatusChangeRequest, opts ...grpc.CallOption) (*common.BoolEntity, error) {
	out := new(common.BoolEntity)
	err := c.cc.Invoke(ctx, "/services.SystemOfflineTaskService/changeStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemOfflineTaskServiceClient) Complete(ctx context.Context, in *SystemOfflineTask, opts ...grpc.CallOption) (*common.BoolEntity, error) {
	out := new(common.BoolEntity)
	err := c.cc.Invoke(ctx, "/services.SystemOfflineTaskService/complete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemOfflineTaskServiceClient) Error(ctx context.Context, in *ErrorRequest, opts ...grpc.CallOption) (*common.BoolEntity, error) {
	out := new(common.BoolEntity)
	err := c.cc.Invoke(ctx, "/services.SystemOfflineTaskService/error", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SystemOfflineTaskServiceServer is the server API for SystemOfflineTaskService service.
type SystemOfflineTaskServiceServer interface {
	Create(context.Context, *SystemOfflineTask) (*SystemOfflineTask, error)
	Update(context.Context, *SystemOfflineTaskDetail) (*common.Int64Entity, error)
	UpdateProgress(context.Context, *UpdateProgressRequest) (*common.BoolEntity, error)
	BatchGet(context.Context, *BatchGetRequest) (*BatchGetResponse, error)
	Get(context.Context, *SystemOfflineTask) (*SystemOfflineTask, error)
	GetDetail(context.Context, *SystemOfflineTask) (*SystemOfflineTaskDetail, error)
	UpdateFile(context.Context, *SystemOfflineTaskFile) (*common.BoolEntity, error)
	UploadFile(context.Context, *SystemOfflineTaskFile) (*common.BoolEntity, error)
	ChangeStatus(context.Context, *StatusChangeRequest) (*common.BoolEntity, error)
	Complete(context.Context, *SystemOfflineTask) (*common.BoolEntity, error)
	// ErrorRequest
	Error(context.Context, *ErrorRequest) (*common.BoolEntity, error)
}

// UnimplementedSystemOfflineTaskServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSystemOfflineTaskServiceServer struct {
}

func (*UnimplementedSystemOfflineTaskServiceServer) Create(context.Context, *SystemOfflineTask) (*SystemOfflineTask, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedSystemOfflineTaskServiceServer) Update(context.Context, *SystemOfflineTaskDetail) (*common.Int64Entity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedSystemOfflineTaskServiceServer) UpdateProgress(context.Context, *UpdateProgressRequest) (*common.BoolEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProgress not implemented")
}
func (*UnimplementedSystemOfflineTaskServiceServer) BatchGet(context.Context, *BatchGetRequest) (*BatchGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatchGet not implemented")
}
func (*UnimplementedSystemOfflineTaskServiceServer) Get(context.Context, *SystemOfflineTask) (*SystemOfflineTask, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedSystemOfflineTaskServiceServer) GetDetail(context.Context, *SystemOfflineTask) (*SystemOfflineTaskDetail, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDetail not implemented")
}
func (*UnimplementedSystemOfflineTaskServiceServer) UpdateFile(context.Context, *SystemOfflineTaskFile) (*common.BoolEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFile not implemented")
}
func (*UnimplementedSystemOfflineTaskServiceServer) UploadFile(context.Context, *SystemOfflineTaskFile) (*common.BoolEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadFile not implemented")
}
func (*UnimplementedSystemOfflineTaskServiceServer) ChangeStatus(context.Context, *StatusChangeRequest) (*common.BoolEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeStatus not implemented")
}
func (*UnimplementedSystemOfflineTaskServiceServer) Complete(context.Context, *SystemOfflineTask) (*common.BoolEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Complete not implemented")
}
func (*UnimplementedSystemOfflineTaskServiceServer) Error(context.Context, *ErrorRequest) (*common.BoolEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Error not implemented")
}

func RegisterSystemOfflineTaskServiceServer(s *grpc.Server, srv SystemOfflineTaskServiceServer) {
	s.RegisterService(&_SystemOfflineTaskService_serviceDesc, srv)
}

func _SystemOfflineTaskService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemOfflineTask)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemOfflineTaskServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.SystemOfflineTaskService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemOfflineTaskServiceServer).Create(ctx, req.(*SystemOfflineTask))
	}
	return interceptor(ctx, in, info, handler)
}

func _SystemOfflineTaskService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemOfflineTaskDetail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemOfflineTaskServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.SystemOfflineTaskService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemOfflineTaskServiceServer).Update(ctx, req.(*SystemOfflineTaskDetail))
	}
	return interceptor(ctx, in, info, handler)
}

func _SystemOfflineTaskService_UpdateProgress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProgressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemOfflineTaskServiceServer).UpdateProgress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.SystemOfflineTaskService/UpdateProgress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemOfflineTaskServiceServer).UpdateProgress(ctx, req.(*UpdateProgressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SystemOfflineTaskService_BatchGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemOfflineTaskServiceServer).BatchGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.SystemOfflineTaskService/BatchGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemOfflineTaskServiceServer).BatchGet(ctx, req.(*BatchGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SystemOfflineTaskService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemOfflineTask)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemOfflineTaskServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.SystemOfflineTaskService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemOfflineTaskServiceServer).Get(ctx, req.(*SystemOfflineTask))
	}
	return interceptor(ctx, in, info, handler)
}

func _SystemOfflineTaskService_GetDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemOfflineTask)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemOfflineTaskServiceServer).GetDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.SystemOfflineTaskService/GetDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemOfflineTaskServiceServer).GetDetail(ctx, req.(*SystemOfflineTask))
	}
	return interceptor(ctx, in, info, handler)
}

func _SystemOfflineTaskService_UpdateFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemOfflineTaskFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemOfflineTaskServiceServer).UpdateFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.SystemOfflineTaskService/UpdateFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemOfflineTaskServiceServer).UpdateFile(ctx, req.(*SystemOfflineTaskFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _SystemOfflineTaskService_UploadFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemOfflineTaskFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemOfflineTaskServiceServer).UploadFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.SystemOfflineTaskService/UploadFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemOfflineTaskServiceServer).UploadFile(ctx, req.(*SystemOfflineTaskFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _SystemOfflineTaskService_ChangeStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemOfflineTaskServiceServer).ChangeStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.SystemOfflineTaskService/ChangeStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemOfflineTaskServiceServer).ChangeStatus(ctx, req.(*StatusChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SystemOfflineTaskService_Complete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemOfflineTask)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemOfflineTaskServiceServer).Complete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.SystemOfflineTaskService/Complete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemOfflineTaskServiceServer).Complete(ctx, req.(*SystemOfflineTask))
	}
	return interceptor(ctx, in, info, handler)
}

func _SystemOfflineTaskService_Error_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ErrorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemOfflineTaskServiceServer).Error(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.SystemOfflineTaskService/Error",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemOfflineTaskServiceServer).Error(ctx, req.(*ErrorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SystemOfflineTaskService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.SystemOfflineTaskService",
	HandlerType: (*SystemOfflineTaskServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "create",
			Handler:    _SystemOfflineTaskService_Create_Handler,
		},
		{
			MethodName: "update",
			Handler:    _SystemOfflineTaskService_Update_Handler,
		},
		{
			MethodName: "updateProgress",
			Handler:    _SystemOfflineTaskService_UpdateProgress_Handler,
		},
		{
			MethodName: "batchGet",
			Handler:    _SystemOfflineTaskService_BatchGet_Handler,
		},
		{
			MethodName: "get",
			Handler:    _SystemOfflineTaskService_Get_Handler,
		},
		{
			MethodName: "getDetail",
			Handler:    _SystemOfflineTaskService_GetDetail_Handler,
		},
		{
			MethodName: "updateFile",
			Handler:    _SystemOfflineTaskService_UpdateFile_Handler,
		},
		{
			MethodName: "uploadFile",
			Handler:    _SystemOfflineTaskService_UploadFile_Handler,
		},
		{
			MethodName: "changeStatus",
			Handler:    _SystemOfflineTaskService_ChangeStatus_Handler,
		},
		{
			MethodName: "complete",
			Handler:    _SystemOfflineTaskService_Complete_Handler,
		},
		{
			MethodName: "error",
			Handler:    _SystemOfflineTaskService_Error_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "offline/system.proto",
}

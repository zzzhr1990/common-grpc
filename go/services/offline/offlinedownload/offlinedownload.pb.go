// Code generated by protoc-gen-go. DO NOT EDIT.
// source: offline/offlinedownload.proto

package offlinedownload

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OfflineDownload struct {
	Identity   string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Size       uint64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	CreateUser int64  `protobuf:"varint,3,opt,name=createUser,proto3" json:"createUser,omitempty"`
	CreateTime int64  `protobuf:"varint,4,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Name       string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	//tring originalaFilename = 6;
	Type         int32 `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`
	Status       int32 `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	Flag         int32 `protobuf:"varint,8,opt,name=flag,proto3" json:"flag,omitempty"`
	DownloadSize int64 `protobuf:"varint,9,opt,name=downloadSize,proto3" json:"downloadSize,omitempty"`
	//
	Cip                  string   `protobuf:"bytes,10,opt,name=cip,proto3" json:"cip,omitempty"`
	Preview              bool     `protobuf:"varint,11,opt,name=preview,proto3" json:"preview,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OfflineDownload) Reset()         { *m = OfflineDownload{} }
func (m *OfflineDownload) String() string { return proto.CompactTextString(m) }
func (*OfflineDownload) ProtoMessage()    {}
func (*OfflineDownload) Descriptor() ([]byte, []int) {
	return fileDescriptor_06bd88ac6fa3f4b6, []int{0}
}

func (m *OfflineDownload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OfflineDownload.Unmarshal(m, b)
}
func (m *OfflineDownload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OfflineDownload.Marshal(b, m, deterministic)
}
func (m *OfflineDownload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfflineDownload.Merge(m, src)
}
func (m *OfflineDownload) XXX_Size() int {
	return xxx_messageInfo_OfflineDownload.Size(m)
}
func (m *OfflineDownload) XXX_DiscardUnknown() {
	xxx_messageInfo_OfflineDownload.DiscardUnknown(m)
}

var xxx_messageInfo_OfflineDownload proto.InternalMessageInfo

func (m *OfflineDownload) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *OfflineDownload) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *OfflineDownload) GetCreateUser() int64 {
	if m != nil {
		return m.CreateUser
	}
	return 0
}

func (m *OfflineDownload) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *OfflineDownload) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OfflineDownload) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *OfflineDownload) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *OfflineDownload) GetFlag() int32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

func (m *OfflineDownload) GetDownloadSize() int64 {
	if m != nil {
		return m.DownloadSize
	}
	return 0
}

func (m *OfflineDownload) GetCip() string {
	if m != nil {
		return m.Cip
	}
	return ""
}

func (m *OfflineDownload) GetPreview() bool {
	if m != nil {
		return m.Preview
	}
	return false
}

type OfflineDownloadFile struct {
	DownloadIdentity     string   `protobuf:"bytes,1,opt,name=downloadIdentity,proto3" json:"downloadIdentity,omitempty"`
	PathIdentity         string   `protobuf:"bytes,2,opt,name=pathIdentity,proto3" json:"pathIdentity,omitempty"`
	CreateTime           int64    `protobuf:"varint,3,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Name                 string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Path                 string   `protobuf:"bytes,6,opt,name=path,proto3" json:"path,omitempty"`
	Hash                 string   `protobuf:"bytes,7,opt,name=hash,proto3" json:"hash,omitempty"`
	Size                 uint64   `protobuf:"varint,8,opt,name=size,proto3" json:"size,omitempty"`
	Status               int32    `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	Flag                 int32    `protobuf:"varint,10,opt,name=flag,proto3" json:"flag,omitempty"`
	Order                int32    `protobuf:"varint,11,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OfflineDownloadFile) Reset()         { *m = OfflineDownloadFile{} }
func (m *OfflineDownloadFile) String() string { return proto.CompactTextString(m) }
func (*OfflineDownloadFile) ProtoMessage()    {}
func (*OfflineDownloadFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_06bd88ac6fa3f4b6, []int{1}
}

func (m *OfflineDownloadFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OfflineDownloadFile.Unmarshal(m, b)
}
func (m *OfflineDownloadFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OfflineDownloadFile.Marshal(b, m, deterministic)
}
func (m *OfflineDownloadFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfflineDownloadFile.Merge(m, src)
}
func (m *OfflineDownloadFile) XXX_Size() int {
	return xxx_messageInfo_OfflineDownloadFile.Size(m)
}
func (m *OfflineDownloadFile) XXX_DiscardUnknown() {
	xxx_messageInfo_OfflineDownloadFile.DiscardUnknown(m)
}

var xxx_messageInfo_OfflineDownloadFile proto.InternalMessageInfo

func (m *OfflineDownloadFile) GetDownloadIdentity() string {
	if m != nil {
		return m.DownloadIdentity
	}
	return ""
}

func (m *OfflineDownloadFile) GetPathIdentity() string {
	if m != nil {
		return m.PathIdentity
	}
	return ""
}

func (m *OfflineDownloadFile) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *OfflineDownloadFile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OfflineDownloadFile) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *OfflineDownloadFile) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *OfflineDownloadFile) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *OfflineDownloadFile) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *OfflineDownloadFile) GetFlag() int32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

func (m *OfflineDownloadFile) GetOrder() int32 {
	if m != nil {
		return m.Order
	}
	return 0
}

func init() {
	proto.RegisterType((*OfflineDownload)(nil), "services.OfflineDownload")
	proto.RegisterType((*OfflineDownloadFile)(nil), "services.OfflineDownloadFile")
}

func init() { proto.RegisterFile("offline/offlinedownload.proto", fileDescriptor_06bd88ac6fa3f4b6) }

var fileDescriptor_06bd88ac6fa3f4b6 = []byte{
	// 418 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x93, 0xdf, 0x6e, 0x94, 0x40,
	0x14, 0xc6, 0x05, 0x16, 0x0a, 0x47, 0x13, 0x9b, 0xd1, 0x34, 0x63, 0x13, 0x0d, 0xe1, 0x8a, 0x98,
	0x08, 0xfe, 0xb9, 0xea, 0x85, 0x89, 0xb1, 0x4d, 0x13, 0xaf, 0x4c, 0xa6, 0x7a, 0xe3, 0x1d, 0x85,
	0xb3, 0x30, 0x09, 0x30, 0x64, 0x98, 0xb6, 0x59, 0x5e, 0xc4, 0x27, 0xf0, 0xb5, 0x7c, 0x16, 0x33,
	0xc3, 0xb2, 0x65, 0xd1, 0x4d, 0x8c, 0x5e, 0xed, 0x77, 0xbe, 0xf9, 0xf6, 0xcc, 0xe1, 0x37, 0x33,
	0xf0, 0x5c, 0xac, 0xd7, 0x35, 0x6f, 0x31, 0xdd, 0xfe, 0x16, 0xe2, 0xae, 0xad, 0x45, 0x56, 0x24,
	0x9d, 0x14, 0x4a, 0x10, 0xbf, 0x47, 0x79, 0xcb, 0x73, 0xec, 0xa3, 0x1f, 0x36, 0x3c, 0xfe, 0x3c,
	0x66, 0x2e, 0xb6, 0x19, 0x72, 0x0a, 0x3e, 0x2f, 0xb0, 0x55, 0x5c, 0x6d, 0xa8, 0x15, 0x5a, 0x71,
	0xc0, 0x76, 0x35, 0x21, 0xb0, 0xea, 0xf9, 0x80, 0xd4, 0x0e, 0xad, 0x78, 0xc5, 0x8c, 0x26, 0x2f,
	0x00, 0x72, 0x89, 0x99, 0xc2, 0xaf, 0x3d, 0x4a, 0xea, 0x84, 0x56, 0xec, 0xb0, 0x99, 0x73, 0xbf,
	0xfe, 0x85, 0x37, 0x48, 0x57, 0xf3, 0x75, 0xed, 0xe8, 0x9e, 0x6d, 0xd6, 0x20, 0x75, 0xcd, 0x5e,
	0x46, 0x6b, 0x4f, 0x6d, 0x3a, 0xa4, 0x5e, 0x68, 0xc5, 0x2e, 0x33, 0x9a, 0x9c, 0x80, 0xd7, 0xab,
	0x4c, 0xdd, 0xf4, 0xf4, 0xc8, 0xb8, 0xdb, 0x4a, 0x67, 0xd7, 0x75, 0x56, 0x52, 0x7f, 0xcc, 0x6a,
	0x4d, 0x22, 0x78, 0x34, 0x7d, 0xf3, 0x95, 0x9e, 0x37, 0x30, 0xbb, 0xee, 0x79, 0xe4, 0x18, 0x9c,
	0x9c, 0x77, 0x14, 0xcc, 0xb6, 0x5a, 0x12, 0x0a, 0x47, 0x9d, 0xc4, 0x5b, 0x8e, 0x77, 0xf4, 0x61,
	0x68, 0xc5, 0x3e, 0x9b, 0xca, 0xe8, 0xbb, 0x0d, 0x4f, 0x16, 0x9c, 0x2e, 0x79, 0x8d, 0xe4, 0x25,
	0x1c, 0x4f, 0x3d, 0x3f, 0xed, 0x33, 0xfb, 0xcd, 0xd7, 0x33, 0x75, 0x99, 0xaa, 0x76, 0x39, 0xdb,
	0xe4, 0xf6, 0xbc, 0x05, 0x2b, 0xe7, 0x6f, 0x59, 0xe9, 0x1e, 0x86, 0x55, 0xc0, 0x8c, 0xd6, 0x5e,
	0x95, 0xf5, 0x95, 0x21, 0x15, 0x30, 0xa3, 0x77, 0x67, 0xe7, 0xcf, 0xce, 0xee, 0x9e, 0x69, 0xf0,
	0x47, 0xa6, 0x30, 0x63, 0xfa, 0x14, 0x5c, 0x21, 0x0b, 0x94, 0x86, 0x8d, 0xcb, 0xc6, 0xe2, 0xed,
	0x4f, 0x0b, 0x4e, 0x16, 0x64, 0xae, 0xc6, 0xdb, 0x45, 0x3e, 0x80, 0x37, 0x8e, 0x4e, 0x9e, 0x25,
	0xd3, 0x8d, 0x4b, 0x16, 0xd9, 0xd3, 0xc3, 0x4b, 0xd1, 0x03, 0x72, 0x0e, 0x81, 0x92, 0x9b, 0xf3,
	0xff, 0x6b, 0xf2, 0x1e, 0x9c, 0x12, 0xd5, 0xbf, 0xfe, 0xfd, 0xe3, 0xe5, 0xb7, 0x8b, 0x92, 0xab,
	0xea, 0xe6, 0x3a, 0xc9, 0x45, 0x93, 0x0e, 0xc3, 0x50, 0xc9, 0x37, 0x67, 0x67, 0xaf, 0xd3, 0x5c,
	0x34, 0x8d, 0x68, 0x5f, 0x95, 0xb2, 0xcb, 0xd3, 0x52, 0xa4, 0x53, 0x87, 0xf4, 0xc0, 0xd3, 0xbb,
	0xf6, 0xcc, 0xdb, 0x7b, 0xf7, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x3a, 0x2c, 0xed, 0xd7, 0x9c, 0x03,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OfflineDownloadServiceClient is the client API for OfflineDownloadService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OfflineDownloadServiceClient interface {
	Create(ctx context.Context, in *OfflineDownload, opts ...grpc.CallOption) (*OfflineDownload, error)
	TryCreate(ctx context.Context, in *OfflineDownload, opts ...grpc.CallOption) (*OfflineDownload, error)
	//rpc batchCreate (CloudStoreList) returns (CloudStoreList) {}
	Get(ctx context.Context, in *OfflineDownload, opts ...grpc.CallOption) (*OfflineDownload, error)
}

type offlineDownloadServiceClient struct {
	cc *grpc.ClientConn
}

func NewOfflineDownloadServiceClient(cc *grpc.ClientConn) OfflineDownloadServiceClient {
	return &offlineDownloadServiceClient{cc}
}

func (c *offlineDownloadServiceClient) Create(ctx context.Context, in *OfflineDownload, opts ...grpc.CallOption) (*OfflineDownload, error) {
	out := new(OfflineDownload)
	err := c.cc.Invoke(ctx, "/services.OfflineDownloadService/create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *offlineDownloadServiceClient) TryCreate(ctx context.Context, in *OfflineDownload, opts ...grpc.CallOption) (*OfflineDownload, error) {
	out := new(OfflineDownload)
	err := c.cc.Invoke(ctx, "/services.OfflineDownloadService/tryCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *offlineDownloadServiceClient) Get(ctx context.Context, in *OfflineDownload, opts ...grpc.CallOption) (*OfflineDownload, error) {
	out := new(OfflineDownload)
	err := c.cc.Invoke(ctx, "/services.OfflineDownloadService/get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OfflineDownloadServiceServer is the server API for OfflineDownloadService service.
type OfflineDownloadServiceServer interface {
	Create(context.Context, *OfflineDownload) (*OfflineDownload, error)
	TryCreate(context.Context, *OfflineDownload) (*OfflineDownload, error)
	//rpc batchCreate (CloudStoreList) returns (CloudStoreList) {}
	Get(context.Context, *OfflineDownload) (*OfflineDownload, error)
}

// UnimplementedOfflineDownloadServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOfflineDownloadServiceServer struct {
}

func (*UnimplementedOfflineDownloadServiceServer) Create(ctx context.Context, req *OfflineDownload) (*OfflineDownload, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedOfflineDownloadServiceServer) TryCreate(ctx context.Context, req *OfflineDownload) (*OfflineDownload, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TryCreate not implemented")
}
func (*UnimplementedOfflineDownloadServiceServer) Get(ctx context.Context, req *OfflineDownload) (*OfflineDownload, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterOfflineDownloadServiceServer(s *grpc.Server, srv OfflineDownloadServiceServer) {
	s.RegisterService(&_OfflineDownloadService_serviceDesc, srv)
}

func _OfflineDownloadService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OfflineDownload)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfflineDownloadServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.OfflineDownloadService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfflineDownloadServiceServer).Create(ctx, req.(*OfflineDownload))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfflineDownloadService_TryCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OfflineDownload)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfflineDownloadServiceServer).TryCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.OfflineDownloadService/TryCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfflineDownloadServiceServer).TryCreate(ctx, req.(*OfflineDownload))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfflineDownloadService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OfflineDownload)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfflineDownloadServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.OfflineDownloadService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfflineDownloadServiceServer).Get(ctx, req.(*OfflineDownload))
	}
	return interceptor(ctx, in, info, handler)
}

var _OfflineDownloadService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.OfflineDownloadService",
	HandlerType: (*OfflineDownloadServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "create",
			Handler:    _OfflineDownloadService_Create_Handler,
		},
		{
			MethodName: "tryCreate",
			Handler:    _OfflineDownloadService_TryCreate_Handler,
		},
		{
			MethodName: "get",
			Handler:    _OfflineDownloadService_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "offline/offlinedownload.proto",
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ext/video.proto

package video

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	common "github.com/zzzhr1990/common-grpc/go/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VideoExt struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Size                 int64    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Encoder              string   `protobuf:"bytes,4,opt,name=encoder,proto3" json:"encoder,omitempty"`
	Duration             int64    `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	Width                int64    `protobuf:"varint,6,opt,name=width,proto3" json:"width,omitempty"`
	Height               int64    `protobuf:"varint,7,opt,name=height,proto3" json:"height,omitempty"`
	PreviewBucket        string   `protobuf:"bytes,8,opt,name=previewBucket,proto3" json:"previewBucket,omitempty"`
	PreviewKey           string   `protobuf:"bytes,9,opt,name=previewKey,proto3" json:"previewKey,omitempty"`
	PreviewType          int32    `protobuf:"varint,10,opt,name=previewType,proto3" json:"previewType,omitempty"`
	PreviewPID           string   `protobuf:"bytes,11,opt,name=previewPID,proto3" json:"previewPID,omitempty"`
	PreviewPlayKey       string   `protobuf:"bytes,12,opt,name=previewPlayKey,proto3" json:"previewPlayKey,omitempty"`
	Status               int32    `protobuf:"varint,13,opt,name=status,proto3" json:"status,omitempty"`
	Flag                 int32    `protobuf:"varint,14,opt,name=flag,proto3" json:"flag,omitempty"`
	CreateTime           int64    `protobuf:"varint,15,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           int64    `protobuf:"varint,16,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VideoExt) Reset()         { *m = VideoExt{} }
func (m *VideoExt) String() string { return proto.CompactTextString(m) }
func (*VideoExt) ProtoMessage()    {}
func (*VideoExt) Descriptor() ([]byte, []int) {
	return fileDescriptor_6cb22786206a6562, []int{0}
}

func (m *VideoExt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoExt.Unmarshal(m, b)
}
func (m *VideoExt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoExt.Marshal(b, m, deterministic)
}
func (m *VideoExt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoExt.Merge(m, src)
}
func (m *VideoExt) XXX_Size() int {
	return xxx_messageInfo_VideoExt.Size(m)
}
func (m *VideoExt) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoExt.DiscardUnknown(m)
}

var xxx_messageInfo_VideoExt proto.InternalMessageInfo

func (m *VideoExt) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *VideoExt) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *VideoExt) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *VideoExt) GetEncoder() string {
	if m != nil {
		return m.Encoder
	}
	return ""
}

func (m *VideoExt) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *VideoExt) GetWidth() int64 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *VideoExt) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *VideoExt) GetPreviewBucket() string {
	if m != nil {
		return m.PreviewBucket
	}
	return ""
}

func (m *VideoExt) GetPreviewKey() string {
	if m != nil {
		return m.PreviewKey
	}
	return ""
}

func (m *VideoExt) GetPreviewType() int32 {
	if m != nil {
		return m.PreviewType
	}
	return 0
}

func (m *VideoExt) GetPreviewPID() string {
	if m != nil {
		return m.PreviewPID
	}
	return ""
}

func (m *VideoExt) GetPreviewPlayKey() string {
	if m != nil {
		return m.PreviewPlayKey
	}
	return ""
}

func (m *VideoExt) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *VideoExt) GetFlag() int32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

func (m *VideoExt) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *VideoExt) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func init() {
	proto.RegisterType((*VideoExt)(nil), "services.VideoExt")
}

func init() { proto.RegisterFile("ext/video.proto", fileDescriptor_6cb22786206a6562) }

var fileDescriptor_6cb22786206a6562 = []byte{
	// 426 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0x41, 0x6f, 0xd3, 0x50,
	0x0c, 0xc7, 0x17, 0xba, 0x66, 0x9d, 0xc7, 0x56, 0x64, 0x4d, 0xe8, 0xa9, 0x07, 0x54, 0x55, 0x08,
	0xf5, 0x42, 0x03, 0x03, 0x4d, 0xec, 0x5a, 0xad, 0x87, 0x89, 0x03, 0x53, 0x99, 0x38, 0x70, 0x41,
	0x59, 0x62, 0x92, 0x27, 0x9a, 0xbe, 0xe8, 0xc5, 0xe9, 0x96, 0x7e, 0x42, 0x3e, 0x08, 0x1f, 0x04,
	0xc5, 0x2f, 0xd9, 0x32, 0xb4, 0x03, 0x3b, 0xd5, 0xff, 0x9f, 0xed, 0xbf, 0xe5, 0x3e, 0x07, 0x86,
	0x74, 0xcb, 0xc1, 0x46, 0xc7, 0x64, 0x66, 0xb9, 0x35, 0x6c, 0x70, 0x50, 0x90, 0xdd, 0xe8, 0x88,
	0x8a, 0xd1, 0x28, 0x32, 0x59, 0x66, 0xd6, 0x81, 0xfb, 0xf9, 0x41, 0x6b, 0xd6, 0x5c, 0xb9, 0xaa,
	0xc9, 0xef, 0x1e, 0x0c, 0xbe, 0xd5, 0x5d, 0x8b, 0x5b, 0x46, 0x84, 0xdd, 0x34, 0x2c, 0x52, 0xe5,
	0x8d, 0xbd, 0xe9, 0xfe, 0x52, 0xe2, 0x9a, 0x15, 0x7a, 0x4b, 0xea, 0xd9, 0xd8, 0x9b, 0xf6, 0x96,
	0x12, 0xe3, 0x31, 0xf4, 0x59, 0xf3, 0x8a, 0x54, 0x4f, 0x0a, 0x9d, 0x40, 0x05, 0x7b, 0xb4, 0x8e,
	0x4c, 0x4c, 0x56, 0xed, 0x0a, 0x6f, 0x25, 0x8e, 0x60, 0x10, 0x97, 0x36, 0x64, 0x6d, 0xd6, 0xaa,
	0x2f, 0x3e, 0x77, 0xba, 0xf6, 0xba, 0xd1, 0x31, 0xa7, 0xca, 0x97, 0x84, 0x13, 0xf8, 0x12, 0xfc,
	0x94, 0x74, 0x92, 0xb2, 0xda, 0x13, 0xdc, 0x28, 0x7c, 0x0d, 0x87, 0xb9, 0xa5, 0x8d, 0xa6, 0x9b,
	0x79, 0x19, 0xfd, 0x22, 0x56, 0x03, 0x99, 0xf4, 0x10, 0xe2, 0x2b, 0x80, 0x06, 0x7c, 0xa6, 0x4a,
	0xed, 0x4b, 0x49, 0x87, 0xe0, 0x18, 0x0e, 0x1a, 0x75, 0x55, 0xe5, 0xa4, 0x60, 0xec, 0x4d, 0xfb,
	0xcb, 0x2e, 0xea, 0x38, 0x5c, 0x5e, 0x9c, 0xab, 0x83, 0x07, 0x0e, 0x97, 0x17, 0xe7, 0xf8, 0x06,
	0x8e, 0x5a, 0xb5, 0x0a, 0xab, 0x7a, 0xca, 0x73, 0xa9, 0xf9, 0x87, 0xd6, 0x7b, 0x14, 0x1c, 0x72,
	0x59, 0xa8, 0x43, 0x19, 0xd2, 0xa8, 0xfa, 0x5f, 0xfd, 0xb9, 0x0a, 0x13, 0x75, 0x24, 0x54, 0xe2,
	0x7a, 0x66, 0x64, 0x29, 0x64, 0xba, 0xd2, 0x19, 0xa9, 0xa1, 0xec, 0xdd, 0x21, 0x75, 0xbe, 0xcc,
	0xe3, 0x36, 0xff, 0xc2, 0xe5, 0xef, 0xc9, 0xc9, 0x1f, 0x0f, 0x86, 0xed, 0x53, 0x7e, 0x75, 0x6f,
	0x8f, 0x1f, 0xc1, 0x77, 0x0e, 0x88, 0xb3, 0xf6, 0x1e, 0x66, 0x6d, 0xd1, 0xe8, 0xf8, 0x9e, 0xcd,
	0x8d, 0x59, 0x2d, 0xe4, 0x30, 0x26, 0x3b, 0x18, 0x40, 0x2f, 0x21, 0x7e, 0xb4, 0xe5, 0x11, 0x36,
	0xd9, 0xc1, 0x53, 0x80, 0x84, 0xf8, 0x8b, 0x5d, 0x64, 0x39, 0x57, 0x4f, 0xe8, 0x3b, 0x01, 0xdf,
	0x2d, 0xf0, 0xff, 0x3d, 0xf3, 0x4f, 0xdf, 0x4f, 0x13, 0xcd, 0x69, 0x79, 0x3d, 0x8b, 0x4c, 0x16,
	0x6c, 0xb7, 0xdb, 0xd4, 0xbe, 0x3f, 0x3b, 0x7b, 0xd7, 0x5c, 0xf7, 0xdb, 0xc4, 0xe6, 0x51, 0x90,
	0x98, 0xa0, 0x6d, 0x0d, 0xee, 0xbe, 0x8b, 0x6b, 0x5f, 0x4e, 0xfe, 0xc3, 0xdf, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x36, 0xd6, 0xe1, 0x93, 0x2b, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VideoExtServiceClient is the client API for VideoExtService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VideoExtServiceClient interface {
	Create(ctx context.Context, in *VideoExt, opts ...grpc.CallOption) (*common.BoolEntity, error)
	Get(ctx context.Context, in *VideoExt, opts ...grpc.CallOption) (*VideoExt, error)
	GetOrEmpty(ctx context.Context, in *VideoExt, opts ...grpc.CallOption) (*VideoExt, error)
	Update(ctx context.Context, in *VideoExt, opts ...grpc.CallOption) (*VideoExt, error)
}

type videoExtServiceClient struct {
	cc *grpc.ClientConn
}

func NewVideoExtServiceClient(cc *grpc.ClientConn) VideoExtServiceClient {
	return &videoExtServiceClient{cc}
}

func (c *videoExtServiceClient) Create(ctx context.Context, in *VideoExt, opts ...grpc.CallOption) (*common.BoolEntity, error) {
	out := new(common.BoolEntity)
	err := c.cc.Invoke(ctx, "/services.VideoExtService/create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *videoExtServiceClient) Get(ctx context.Context, in *VideoExt, opts ...grpc.CallOption) (*VideoExt, error) {
	out := new(VideoExt)
	err := c.cc.Invoke(ctx, "/services.VideoExtService/get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *videoExtServiceClient) GetOrEmpty(ctx context.Context, in *VideoExt, opts ...grpc.CallOption) (*VideoExt, error) {
	out := new(VideoExt)
	err := c.cc.Invoke(ctx, "/services.VideoExtService/getOrEmpty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *videoExtServiceClient) Update(ctx context.Context, in *VideoExt, opts ...grpc.CallOption) (*VideoExt, error) {
	out := new(VideoExt)
	err := c.cc.Invoke(ctx, "/services.VideoExtService/update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VideoExtServiceServer is the server API for VideoExtService service.
type VideoExtServiceServer interface {
	Create(context.Context, *VideoExt) (*common.BoolEntity, error)
	Get(context.Context, *VideoExt) (*VideoExt, error)
	GetOrEmpty(context.Context, *VideoExt) (*VideoExt, error)
	Update(context.Context, *VideoExt) (*VideoExt, error)
}

// UnimplementedVideoExtServiceServer can be embedded to have forward compatible implementations.
type UnimplementedVideoExtServiceServer struct {
}

func (*UnimplementedVideoExtServiceServer) Create(ctx context.Context, req *VideoExt) (*common.BoolEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedVideoExtServiceServer) Get(ctx context.Context, req *VideoExt) (*VideoExt, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedVideoExtServiceServer) GetOrEmpty(ctx context.Context, req *VideoExt) (*VideoExt, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrEmpty not implemented")
}
func (*UnimplementedVideoExtServiceServer) Update(ctx context.Context, req *VideoExt) (*VideoExt, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}

func RegisterVideoExtServiceServer(s *grpc.Server, srv VideoExtServiceServer) {
	s.RegisterService(&_VideoExtService_serviceDesc, srv)
}

func _VideoExtService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VideoExt)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoExtServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.VideoExtService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoExtServiceServer).Create(ctx, req.(*VideoExt))
	}
	return interceptor(ctx, in, info, handler)
}

func _VideoExtService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VideoExt)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoExtServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.VideoExtService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoExtServiceServer).Get(ctx, req.(*VideoExt))
	}
	return interceptor(ctx, in, info, handler)
}

func _VideoExtService_GetOrEmpty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VideoExt)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoExtServiceServer).GetOrEmpty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.VideoExtService/GetOrEmpty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoExtServiceServer).GetOrEmpty(ctx, req.(*VideoExt))
	}
	return interceptor(ctx, in, info, handler)
}

func _VideoExtService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VideoExt)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoExtServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.VideoExtService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoExtServiceServer).Update(ctx, req.(*VideoExt))
	}
	return interceptor(ctx, in, info, handler)
}

var _VideoExtService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.VideoExtService",
	HandlerType: (*VideoExtServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "create",
			Handler:    _VideoExtService_Create_Handler,
		},
		{
			MethodName: "get",
			Handler:    _VideoExtService_Get_Handler,
		},
		{
			MethodName: "getOrEmpty",
			Handler:    _VideoExtService_GetOrEmpty_Handler,
		},
		{
			MethodName: "update",
			Handler:    _VideoExtService_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ext/video.proto",
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.5
// source: ext/video.proto

package video

import (
	common "github.com/zzzhr1990/common-grpc/go/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VideoExt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash             string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Size             int64    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Title            string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Encoder          string   `protobuf:"bytes,4,opt,name=encoder,proto3" json:"encoder,omitempty"`
	Duration         int64    `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	Width            int64    `protobuf:"varint,6,opt,name=width,proto3" json:"width,omitempty"`
	Height           int64    `protobuf:"varint,7,opt,name=height,proto3" json:"height,omitempty"`
	MaxPreviewWidth  int64    `protobuf:"varint,8,opt,name=maxPreviewWidth,proto3" json:"maxPreviewWidth,omitempty"`
	MaxPreviewHeight int64    `protobuf:"varint,9,opt,name=maxPreviewHeight,proto3" json:"maxPreviewHeight,omitempty"`
	PreviewImageKey  []string `protobuf:"bytes,10,rep,name=previewImageKey,proto3" json:"previewImageKey,omitempty"`
	PreviewKey       string   `protobuf:"bytes,11,opt,name=previewKey,proto3" json:"previewKey,omitempty"`
	PreviewType      int32    `protobuf:"varint,12,opt,name=previewType,proto3" json:"previewType,omitempty"`
	PreviewPID       string   `protobuf:"bytes,13,opt,name=previewPID,proto3" json:"previewPID,omitempty"`
	PreviewPlayKey   string   `protobuf:"bytes,14,opt,name=previewPlayKey,proto3" json:"previewPlayKey,omitempty"`
	Status           int32    `protobuf:"varint,15,opt,name=status,proto3" json:"status,omitempty"`
	Flag             int32    `protobuf:"varint,16,opt,name=flag,proto3" json:"flag,omitempty"`
	CreateTime       int64    `protobuf:"varint,17,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime       int64    `protobuf:"varint,18,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *VideoExt) Reset() {
	*x = VideoExt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ext_video_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoExt) ProtoMessage() {}

func (x *VideoExt) ProtoReflect() protoreflect.Message {
	mi := &file_ext_video_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoExt.ProtoReflect.Descriptor instead.
func (*VideoExt) Descriptor() ([]byte, []int) {
	return file_ext_video_proto_rawDescGZIP(), []int{0}
}

func (x *VideoExt) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *VideoExt) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *VideoExt) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VideoExt) GetEncoder() string {
	if x != nil {
		return x.Encoder
	}
	return ""
}

func (x *VideoExt) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *VideoExt) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *VideoExt) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *VideoExt) GetMaxPreviewWidth() int64 {
	if x != nil {
		return x.MaxPreviewWidth
	}
	return 0
}

func (x *VideoExt) GetMaxPreviewHeight() int64 {
	if x != nil {
		return x.MaxPreviewHeight
	}
	return 0
}

func (x *VideoExt) GetPreviewImageKey() []string {
	if x != nil {
		return x.PreviewImageKey
	}
	return nil
}

func (x *VideoExt) GetPreviewKey() string {
	if x != nil {
		return x.PreviewKey
	}
	return ""
}

func (x *VideoExt) GetPreviewType() int32 {
	if x != nil {
		return x.PreviewType
	}
	return 0
}

func (x *VideoExt) GetPreviewPID() string {
	if x != nil {
		return x.PreviewPID
	}
	return ""
}

func (x *VideoExt) GetPreviewPlayKey() string {
	if x != nil {
		return x.PreviewPlayKey
	}
	return ""
}

func (x *VideoExt) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *VideoExt) GetFlag() int32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *VideoExt) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *VideoExt) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type PreviewInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Duration            int64    `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Width               int64    `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height              int64    `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	SourceIdentity      string   `protobuf:"bytes,5,opt,name=sourceIdentity,proto3" json:"sourceIdentity,omitempty"`
	SourcePath          string   `protobuf:"bytes,6,opt,name=sourcePath,proto3" json:"sourcePath,omitempty"`
	SourceSize          int64    `protobuf:"varint,7,opt,name=sourceSize,proto3" json:"sourceSize,omitempty"`
	PreviewImageAddress []string `protobuf:"bytes,8,rep,name=previewImageAddress,proto3" json:"previewImageAddress,omitempty"`
	PreviewHlsAddress   string   `protobuf:"bytes,9,opt,name=previewHlsAddress,proto3" json:"previewHlsAddress,omitempty"`
	Status              int32    `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PreviewInfo) Reset() {
	*x = PreviewInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ext_video_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreviewInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviewInfo) ProtoMessage() {}

func (x *PreviewInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ext_video_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviewInfo.ProtoReflect.Descriptor instead.
func (*PreviewInfo) Descriptor() ([]byte, []int) {
	return file_ext_video_proto_rawDescGZIP(), []int{1}
}

func (x *PreviewInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PreviewInfo) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *PreviewInfo) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *PreviewInfo) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *PreviewInfo) GetSourceIdentity() string {
	if x != nil {
		return x.SourceIdentity
	}
	return ""
}

func (x *PreviewInfo) GetSourcePath() string {
	if x != nil {
		return x.SourcePath
	}
	return ""
}

func (x *PreviewInfo) GetSourceSize() int64 {
	if x != nil {
		return x.SourceSize
	}
	return 0
}

func (x *PreviewInfo) GetPreviewImageAddress() []string {
	if x != nil {
		return x.PreviewImageAddress
	}
	return nil
}

func (x *PreviewInfo) GetPreviewHlsAddress() string {
	if x != nil {
		return x.PreviewHlsAddress
	}
	return ""
}

func (x *PreviewInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

var File_ext_video_proto protoreflect.FileDescriptor

var file_ext_video_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x65, 0x78, 0x74, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x1a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa2, 0x04, 0x0a, 0x08, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x45, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x57, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x28, 0x0a, 0x0f,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x4b, 0x65, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x50, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x50, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x4b, 0x65, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x4b, 0x65, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xcb, 0x02, 0x0a,
	0x0b, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x13, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x48,
	0x6c, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x48, 0x6c, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x9f, 0x02, 0x0a, 0x0f, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x45, 0x78, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34,
	0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x78, 0x74, 0x1a, 0x14, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x12, 0x12, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x78, 0x74, 0x1a,
	0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x45, 0x78, 0x74, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0a, 0x67, 0x65, 0x74, 0x4f, 0x72, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x45, 0x78, 0x74, 0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x78, 0x74, 0x22, 0x00, 0x12, 0x32, 0x0a,
	0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x78, 0x74, 0x1a, 0x12, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x78, 0x74, 0x22,
	0x00, 0x12, 0x39, 0x0a, 0x0a, 0x67, 0x65, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12,
	0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x45, 0x78, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x42, 0x38, 0x5a, 0x36,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x7a, 0x7a, 0x68, 0x72,
	0x31, 0x39, 0x39, 0x30, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2d, 0x67, 0x72, 0x70, 0x63,
	0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x65, 0x78, 0x74,
	0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ext_video_proto_rawDescOnce sync.Once
	file_ext_video_proto_rawDescData = file_ext_video_proto_rawDesc
)

func file_ext_video_proto_rawDescGZIP() []byte {
	file_ext_video_proto_rawDescOnce.Do(func() {
		file_ext_video_proto_rawDescData = protoimpl.X.CompressGZIP(file_ext_video_proto_rawDescData)
	})
	return file_ext_video_proto_rawDescData
}

var file_ext_video_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ext_video_proto_goTypes = []interface{}{
	(*VideoExt)(nil),          // 0: services.VideoExt
	(*PreviewInfo)(nil),       // 1: services.PreviewInfo
	(*common.BoolEntity)(nil), // 2: services.BoolEntity
}
var file_ext_video_proto_depIdxs = []int32{
	0, // 0: services.VideoExtService.create:input_type -> services.VideoExt
	0, // 1: services.VideoExtService.get:input_type -> services.VideoExt
	0, // 2: services.VideoExtService.getOrEmpty:input_type -> services.VideoExt
	0, // 3: services.VideoExtService.update:input_type -> services.VideoExt
	0, // 4: services.VideoExtService.getPreview:input_type -> services.VideoExt
	2, // 5: services.VideoExtService.create:output_type -> services.BoolEntity
	0, // 6: services.VideoExtService.get:output_type -> services.VideoExt
	0, // 7: services.VideoExtService.getOrEmpty:output_type -> services.VideoExt
	0, // 8: services.VideoExtService.update:output_type -> services.VideoExt
	1, // 9: services.VideoExtService.getPreview:output_type -> services.PreviewInfo
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_ext_video_proto_init() }
func file_ext_video_proto_init() {
	if File_ext_video_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ext_video_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoExt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ext_video_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreviewInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ext_video_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ext_video_proto_goTypes,
		DependencyIndexes: file_ext_video_proto_depIdxs,
		MessageInfos:      file_ext_video_proto_msgTypes,
	}.Build()
	File_ext_video_proto = out.File
	file_ext_video_proto_rawDesc = nil
	file_ext_video_proto_goTypes = nil
	file_ext_video_proto_depIdxs = nil
}
